{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": true,
    "editable": true
   },
   "source": [
    "# Face Generation\n",
    "In this project, you'll use generative adversarial networks to generate new images of faces.\n",
    "### Get the Data\n",
    "You'll be using two datasets in this project:\n",
    "- MNIST\n",
    "- CelebA\n",
    "\n",
    "Since the celebA dataset is complex and you're doing GANs in a project for the first time, we want you to test your neural network on MNIST before CelebA.  Running the GANs on MNIST will allow you to see how well your model trains sooner.\n",
    "\n",
    "If you're using [FloydHub](https://www.floydhub.com/), set `data_dir` to \"/input\" and use the [FloydHub data ID](http://docs.floydhub.com/home/using_datasets/) \"R5KrjnANiKVhLWAkpXhNBe\"."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Found mnist Data\n",
      "Found celeba Data\n"
     ]
    }
   ],
   "source": [
    "data_dir = './data'\n",
    "\n",
    "# FloydHub - Use with data ID \"R5KrjnANiKVhLWAkpXhNBe\"\n",
    "#data_dir = '/input'\n",
    "\n",
    "\n",
    "\"\"\"\n",
    "DON'T MODIFY ANYTHING IN THIS CELL\n",
    "\"\"\"\n",
    "import helper\n",
    "\n",
    "helper.download_extract('mnist', data_dir)\n",
    "helper.download_extract('celeba', data_dir)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": true,
    "editable": true
   },
   "source": [
    "## Explore the Data\n",
    "### MNIST\n",
    "As you're aware, the [MNIST](http://yann.lecun.com/exdb/mnist/) dataset contains images of handwritten digits. You can view the first number of examples by changing `show_n_images`. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.image.AxesImage at 0x10ab73d68>"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x109d4ee10>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "show_n_images = 42\n",
    "\n",
    "\"\"\"\n",
    "DON'T MODIFY ANYTHING IN THIS CELL\n",
    "\"\"\"\n",
    "# !pip install -U matplotlib==2.0.2\n",
    "%matplotlib inline\n",
    "import os\n",
    "from glob import glob\n",
    "from matplotlib import pyplot\n",
    "\n",
    "mnist_images = helper.get_batch(glob(os.path.join(data_dir, 'mnist/*.jpg'))[:show_n_images], 28, 28, 'L')\n",
    "pyplot.imshow(helper.images_square_grid(mnist_images, 'L'), cmap='gray')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": true,
    "editable": true
   },
   "source": [
    "### CelebA\n",
    "The [CelebFaces Attributes Dataset (CelebA)](http://mmlab.ie.cuhk.edu.hk/projects/CelebA.html) dataset contains over 200,000 celebrity images with annotations.  Since you're going to be generating faces, you won't need the annotations.  You can view the first number of examples by changing `show_n_images`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.image.AxesImage at 0x10a9f0cf8>"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAQUAAAD8CAYAAAB+fLH0AAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAIABJREFUeJzsvVmsbUd63/erqlVr2vOZ77kzedlssps9qSW1WlBbU9tO\nokTOixUbMPIQwAgQAwmQhxh+zUuegiQPAWwjARzASBRAUSQksoVIcbttqS211BMpks3pzvee+Zw9\nrbmq8lC19yUdSU1ZokUB5wMIch/uvVatWlXf8P/+31fCOcelXMqlXMpK5J/3AC7lUi7l4yWXSuFS\nLuVSPiCXSuFSLuVSPiCXSuFSLuVSPiCXSuFSLuVSPiCXSuFSLuVSPiAfmVIQQvxVIcT3hRDvCCH+\n7kd1n0u5lEv5sxXxUfAUhBAKeAv4KvAI+CbwN5xzr/+Z3+xSLuVS/kzlo/IUfgR4xzn3nnOuAf43\n4Oc/ontdyqVcyp+hRB/Rda8CD9/3+RHwo3/Ul7c2J+7Wjf3wyeGQOGexXQ1AW5QI5+iMAaBpLUXd\nYI0FII4kzjjiJGW6WAAwL2uEkMSR13tppFASRPCMJBBFmkgLhAzfyXsY6zialQAURYEJ91yNDUBK\niQq/EcD7vS2Hw1qHcw4R/iaEQAqQSgFgwrjt6nfO/84B73fctI6YTCYAZFpC1+HCeJyzSKmQUrL6\niXMO4yxK+dcqo/BvsRqHRAhBpCKk9GNBSqSUCBGeR0oQAmO69X1UpEFAUTUAnM1m5MoShefJ8gwB\n1FVFHb6jIgXvexYVRQgh1nPVNA3OOayx/ruA1hpjOkSYOT+Xdv2bLMvQsaZtGqJIh2dU1E3NbL5Y\nzXZ4T8+ugXNYY9Zz189yBoM+UZgfhMAhEM6tn9sagzUdbds8e0fOrt9Z1xnazlC3BmP9+zQOlNYo\n5efSGUPbdLThfYPA+Tshw/pRUiKleLaehB+5EKvx82wdyWc23FqLDfd1Doy1H1irUSRRkvV1pZIc\nnS1PnHPb/AD5qJTCDxQhxN8G/jbAjetX+ObXfhEA6zqaasn5/bcoHt4H4Pxoyrv3jvne63cBeHp0\nwe2re+xujQHo6gVmPqPXH/I7r78NwGsPz1h0Fh0W+2Ya8/y1LT53xyufrUmfRWuQomVrZ8P/7cZN\nJjfv8Lf+3t8H4N1336JtG3SY2I1+n0GqGOUx2+MBAHs7m0RRxGDgP1ed4d6jx5wdHTPK+gB87tMv\ncX1/DCoG4NHhCWfTORfnxwDUZcfh2YwHJ+ecVeHFyogoUnz1Z38agK8+t42bXWCKeZgnQ384oDca\n44ISEFLRGUtjWgBcJEjzjCxOAcjyIYPhJqPhBpH0v1Fao+OEKHwn6g8QqaKu/CZrFgvy3WuINOHd\nwyMA/uEv/hJf2ux4+eUXAdje3uTo6RNe/fb3WC3hJM4AwdaWX4NRFGGtZTqdAjCfz2nbjvlsSdf5\n8fYGMTduXMdaE36jWc4XHJ/4eZqMJ3zhC1+grAvmxRKAOy+9yOn5Of/4l3/1A+trrW8d1MslxekB\nn33xNgA/95f/HfZ2rkPc89/RKVJqXF1QTk8AKOdnVNWcxezMv9figq6tqBpvqJaLJRfTgrtPznn9\nvQMAHpyUmDRj/+aO/82TQ05O5iyaYASAWCmyJGXU82tjkKf0U82o5+c/1xKtJEp6pZemKSpS3rDE\n4Z0pRd00zIMBPJjPmS5KZktvzM7OL1BSMMkV2yN/3TiN+Yf/16v3+RDyUYUPj4Hr7/t8LfxtLc65\nf+Cc+6Jz7ovbmxsf0TAu5VIu5U8qH5Wn8E3gBSHEbbwy+I+Av/lHfdkBbfCwmtMDDt/5LounR5wc\neKvy5juHfOMPHqKctyh/5xd+mpdeeA6lvFVazJbcffv7FEXBjStfAOAnTqbMapjNCwBMVeJoWBbn\nAEhVsLu7RTbYRQYrWTYdnJ1x7773SOrOkCYJWyNvUV7Z2+H6Rsr2JGd75D2Dja0JeZ4Tx0l4FsHs\nxevM5wU7G17Z7W6NEaql7fxD3trpU1UN1eIaABfnM+4eXpDdfcyr9w8BWLaWqu74xm//NgBfnnwZ\nURd0tbdUCoFpDaZr1+53pBVJlpO03gVuuwqqGiH82DKdkSQ51klME8IQA1iBc34ujdbEMiUKS6MF\nmnJOP0sZ94cAbA5H7O9Lhrmft2I+4+mTp1RNQz9YwKop2b96jSTz967LgqoqEdaPfxBHFM5SJ5Ik\nywBIUsWjx4+4efOW/5zExElM2VT+PZdLnhw8YTgcYDv/jNOTEybDPuJ95s1aiw32TmGJuoIbu1v8\n1Ff+EgDbu1cQUY5Quf+BiIAOay1CrGKeFttVSILXIiVWgIr9dfNBTucEe63l0Yn33txJyfnZBZF/\nZHqmwwhJcOTIY81k0GOYJEx6/t4becYw0SSx9wwSrUi0JtFxeKcRUeT/sSGkEFJibUbd8/M2ynOe\npBcchPt09ZJlYemMYBnCuaat+bDykSgF51wnhPg7wK8DCvifnXN/8Ed9XzjL+VvfAeDeG6+R1IY/\neHjAt373TQBmM8ej41P+81/4ywB8+hM3iMdDVlH7JO8R9VI6YxAhkNVxTOc0i4V3M0+ePOLi8BBi\nP9mt68DV5L2Y3ngTgMoqiosl1vmFIIQgS2Ku7/q4/upQc3Wo2RhqRmnAIWxLTwnSxF9Xa83Oxhin\nYhLtN6swLa1xSOEXspCCSDi0CgtQC7Z7ETe2R5ws/Uu8f3hO4wwX5xd+vFUJdQl2hWtEdG2LaTtU\nHEIOZ8G54LpDlqbEsSZL/WZOkgERGtc5TLdSHC3GWURQLM40mCZaK9woSei6Gtd1pNqv9q3JBpMN\nR1v7zXp2dsZ8NieNE8rCK+Gd3R1iJSlnXrE3VYFwll7s7xP3MqKFwLiWkzOvqK1LyPOcRw89HHXn\nzh2SJOHWzZsAPHjwgAcPHvD5z39+HR9cnJ2ytTFGBODEWouUApx/P5mS7Gxv8LmXXmJ/76qf/9Wy\nD+/ZGovFK9gVhmC6FtfVKGfDOzR0dYuVq7n22EwWx4wG3mj0sinL1jA/90pCpzFISRrwj1E/Y9zP\nGacxG0GhjpOYno5I4pUS0CRxTKqfhQpaa1Skce/HGYSgFwxRlvWC8g0YQ9tgugWt6XDBIIQhfCj5\nyDAF59yvAb/2Yb7blAve/q1fDyMa8p1XD/i13/sOkfUPdHh4ztVrEz53aw+AOB/g0iHI4F5Ix3Bj\nAyK9BmWs6zBOMQiLZ/v6Lve/+xp333vX/38p2djaQcSKKPELaGewxWzZkiYhvpYNvViRixDzKsMg\nFiRKkIRNlOqYLO3RG3h8I85yUBIRp4iwoGxTIpoWSwDhjMMWJY31GzNRlkx0TFLB5tBv6MOzKVXz\nDIzs6obIGGznP4tE07YtbV2jV4Ci0uhEkWZ+kcpIgRAI4VeE7SxtVaGkQrgAJEqBEQbT+pmTrcQK\niXPB+4hjHA5j7TpOPzg8wF3bYln7GPbk+Jh6WSCcI9PB4klJNZtxfnoc5iliczJmPBmF96zQcUTb\n1ZSJH/98saCr6zUI98YfvMZzzz1Pnvs52d3e4e7du1ycn6/XznJZsFwukWu01YNqKhiHRMEoyXnu\nxi0UQUk7h3AGrH8fzjmMaeiqElN7pdZUS4wxa/Cubhq6pqULnkRnLKZtyVPN89f9unx8cs60rFgG\nDKFurFcewY3pa81Wv8cojsgDGJlIyJKEOF4ZlZg0SYj1MyMTx9ojkM8QY6SU67GprmFfT1hhx84a\nzmcFs1lHUfm51cFofRj5cwMa3y9NWdCERXn/7kP+yTe/x/x4SRk04/Fixr9/+zNsTLxr6tIMk8Qo\nFRa2jkGnyCTHBbfROYdEIgPohpI8/8qn2NjyLv2br77B0/uH7L14k4uZ9yZaK+n1B8RBS8eRINUC\nTLP+HMcxKtLoxCustJeh8xzd94u9N9kgyvtYGWEDgNaVC8xyTrP0FkQ0DUJJxMqvFBIpHApLGl7s\nZNijcXK9ERtrcM7SBXRcuRjXtlTLEh1Aw1jHYQH6ObBEGNPhjN+81rZop7E8y4AIJYlMjIr8jVQs\nQWnsav25CMQHMyxN3SAcVAHYqpYFrmuxnWFjy4dVbVFw9+67uKB8bt+8wWCYkff8vBkBxkQM8pim\n8pteKkVZljSV90CKruPp45S9Pb/pJpMJe7u7vPfee7z4kgc5q1nB6ekpJoRMOIdzoLV/gGGecXt/\nn2GeI0x4BuNwoltnGjpr6JqGtiwoZhfhmeYY07KYzfxYlnOausas1hcO4SyjQZ+051/a1Z0R9w5O\nEcFLqWuDQ5EEpT3OU0aJpqcEeVB8vTgmjZO1IdKxJklSkhDSaq2JogghBUb4d6aUQim1Hr8sDZiO\nvZFfg9PlnAeHJ1SVweKVgVlpjA8hlzTnS7mUS/mAfCw8BWdh0XrN+N7TOefTBbFUHJz7lEsaxbxy\n6xpR6rWei2PQ0v8bEDoDnSKyXgCNQFqBM51HygCZZbhUM9n0+MDnPvspvvV73+X1b77GC5/7lL9u\nz3F6crTOEWsVY7saFyxMhyOKNHGkUam3eHG/R5SlqACWybyPzEdEOsW1/uZKRNRth6i8R+KUwwqB\nXKUSASUVUri1NZMyZpi7NQBYdRaHoA0uo6xrMq1xxmCaEAc3BmsspvOfhbVgzTpMMdJhTUKkonVY\nIq2kszWNDFZHCqTUKOUtvrUgI5/7X+Xb52WBlIaq9O+nKkuc7RgOe2sP997d+5weHXHzuk8B93s5\nSZqiotUzWySOLNYMUh9ydF2DSjRVuMZFUfLw7n3GQw/K2WHK7u4mRyenmBBGOec4PTsm1s+CZmst\nWXC/dzc3eP72TYTtsJ33QDrbYYWgC8/TWYNpG0xVU869p1AWU6qmWmM6ZVHS1C1RuK6KFEkaE0V6\nDf5ujweM+/k6bWk677UQ+ASJhFg4FKAj/5CxVqRJRBbWdhQlxDohCZ6o1jpwUdya56J1BLj1Oo0j\niYkkbVg7G8MheZJxQrUGJ5X68J7Cx0MpILmY+Yl87c37JCQclwua4PLsZim7O8M1KUcgiZR4hp4o\njYhinIgQAfoVTuCwsMKFIgmJRib+N1mm+eyn73BycsHXf/N3APjiV77MtWsbNI3fzEneo2vrNUmq\ns4ZISfIkQQeFpFREhEStyDLOIqwlEgIT8u2ubRBti7CBP2BbhHDogEu0SqGVQDrL7MIvwkWtadt6\nHRoUZQNKrNYXTduQKIW1FtP5+5i2pSpKVsiKkhESAQRCjrN0LTjj1uGDUgKlni3Srklo6iVJiEFl\nJ7DWIHWCJcxdL2e5uGC59GOdz6bEOiJJNMfHnstwdHjIqDdgMvQubT/vEel4DQ4LJ4ijiCSK6KXe\nINR1DcZgg2YZ9vocHZzz5KHPZu/ubtHPM3Z3drg49/yB/iClKGbrDbIiSK3Q+16a0csTMB0mZH9a\nC615lqGwzivPrqnXQGPbNrRVRRcUbrksMcYi3GpufZg2my9YLKbr+c/ihEz73ywMgEQGTEGvAOYo\nerZ+IokQds1QUlKhVLTGVYQQgfwm1yC6NA5jWwjKXgJRrIlCCD5Ic8aDIU+PZ7gApqapV/IfRj4W\nSgEhef1NDwBenF+wsIpZ060ZW5ubm/SG8TOmnhB+0wck3gjrX5LUIAOg4ixIBWFTCRVDf4BowkTO\nl2gpuHpjm2+89gCAX/4/v8ZP/pUvrrWqc462bWiqsBONZ9iJSK6/I4zDNh1tiIPtbIpA4LoWE9D5\nejGjKZbUVRmGZoh1RBXi4E44lNaMspw89i+2nBU0piMYUaq2IXJBGQIoicXRmo46eCRx2xB1NRHe\na3FSeYxllWYTYHGYzhAFIhVSoLRCqJBSlYLWtERdGKu0lFVB3DaQ+Q2e5xnz6RltABrrqqCfbdA1\nLdOLUwAiaRmNB/RD6jbr99BJst68Egtpimm6dSZkwhAp5muw2FmIo5h33rwHwK1bz7Ex3mJ3e4NH\nTx7531zbpSrm6020ktXmLsvSA3IGCN9xQnosJRCEjLM+kyMMSc+PV0WQxgkyKA6tNF3X0YbcedM0\nWAFN23Ix97jDxaz0DNAV6hlYkKvMSBx5Ja1VhFoxSMEDmt3KmzMfUPTr53Kslb0T1jNzg2fgguqP\nwn3yWLExyBC2o1sBrsHz+DByiSlcyqVcygfkY+Ep1HXDq296wtC0spxVJXESEddeK28NBwyGfUQe\nrFsc4QTrFI1Q0nsFQvt/AIRBKM2aOaIiRJThIp9yQke0GLJIsLPprcNrr97nf/hH//c6pWfajrZt\nSQMdVitF23VYAXalwKVAROpZDlkIOmOwtM/qFITERQluxWpxFtuVtO9Dv4UUjPIeL1z1SPurx/dp\nnIBgMYqyIEpjsuD5WAdS+/uaVb7dGqSz6BBf6yRHCo0NYQu0CCQ6ydcpMKk8T16GUEbFOTLSNKsa\nBmMpFxdUyynC0zloqpqymPu0HuC6ln7e4/DgkDrQjwe9hI3NEb1A/9ZJggg8fwCJQHYGrTX9np9f\nJQX2fWlAnCCN5Zqo9Pb3v8/169tMxgNOTvwLqJYLbGtpgpsP3uVe8VMeP2koX3yePNLI4B3pOCWN\nYlyYS2MtTdOSJH2ECeSr4oxyEdOtwpJEU5UFduq9o7YsaI2hMS1F7ed3vvDeoFhhOFaEcClcI1R1\nCOvWOIM1NtQxuPBefa2H4xlm4utoBIjgnYpQJxOyEabzOIoL60k7y+awR55ELMPcPavE+cHysVAK\ny6LgLLi452VL2u9BWzMICzeL4OT8gu3bgTmtBUi3jtU8DGZxwqxTYDJSCBHhTHjEKEY2zXpyrJDo\nNGd7Y8LuxC/KJJI8fHLOjZc9X//w+IgkUlwZe7c51doXwTSGYRQWWJaT9HrEfX+NeDBGpgOEStYp\nySTrUy9myFkALKuEtlUsCu9qz5ctbd3iWssk5ORHSUJbdcTa/6asGxIJYe+iUYDwsWQYC0LinECG\nxaNURKwzrPUxu7UNXdvRdayvK4RG6YQ4xPUq66GSlC6kcrtmie1ajLVEAUCbjLcQ7nANfEkJZbXk\n8PDpekFtb+4yHA/RAZDtOoPqmnWBDkhwoLRCypVr21E3ek3k6TrDzt4IE9Di05OnXJwfMdwcs7W1\nBUCxWCKEpX2fUoh0tP787tFTZj88Jx5NyIJS9spBYYPC7UyLxaEiiQsAZlFVFFVBG9al1RFKpGTh\nCSvTcnp6hkCssYqiamntajuDsw6nhMcMACW8MuiMwTod3lGMjjLiKNSnxDlpkhNnAUQXEiHwRWyr\ntevAYml9dErjWjrjeSgAtq3oxYI8S2lLbwST+MOHDx8LpdB1lm4V9mpJLCUQMQ4T8/Lzt/l//t/f\n5sFTX6zyY3/pR5js762BRuFAdA3WXqxjY2wfKyx2lZuuOsxijqqb9W+kisj6fT4bCnu+/fYBbx+e\nstn393187BhoRT84H03XcjCrcD1Lm3nlM8ewFUcMu4Aem5hYJRAlEECpumk4mpccPvREntOjE84u\nZkxPfCFNWy6IpSPREhP2zDDXFChi4d+8kgolBW5dGaeQUpH3hqSJVyQKhTWKcuEXgm0dnaoRgXch\n6XCdxbSOZRGUZ5KQDUeYwIbTGrIspTfwirCcGxJGFFWLDPd+8fot5JPv4wI4mSYxB4dPqZuWJPWZ\ngiTtU7eWaeCAGKvobLcmFWkihPRWz6xIXjJCZ31UGQhD84rT6RwT5jGNexwfnPPcSzHjseebTM+n\nKGHWgJqvvAQXlM/ZtOB8MWeysclFEYqZijPKooHAToyEIYqEZ2SeeADz3ccPOZ4WHM/8XBZVSRI5\nemHHxFIgIs9FSVeaWkjKxtCtsg1KUwpHL1sB5IbGSjB2dWtMbamExQa9nmgNUcQqslfKF0N11mKD\nclnWNWfzBfPAHpWmJY1TVnCTs44sgvFw+Axo/BNkHy4xhUu5lEv5gHwsPAXjoA2WapB6Cq7O9Drf\nK1SG6O3wT3/jmwCcPDji537hrzK+4znxUmeIsqC7uGAaePRnswXLsmEeUnyya+jaht2Bt2Sb/YQ0\nlaiox96e9x5+7quf5/7xOYPEW9GhjIljRxdSo6eLhtODGe+ctkRvPwEgzWIyrdnf3QXgR3/oC9y4\nfg2nYrqQfXh4/y6/9Tu/y+mZt0JxkjEcjSG4dNVySd02REkfEeojJpMRs/qC66EISSuFVmrN2OxE\nhEh6qGyAWeEM1lLVFWLFerQXSARREijL0mI7MI3Fhri3lY5aOJJhKOWdjBlPNj1tHOhtTMgnu7jl\nEhHqGPKyRuc5RYjbkyTh8aMTMIoouOjTWcXx9BFnF/43bWcZbw64ftWXFd/a2SXvZcRxRFn593x4\nesHDR0fcf+SLwurWMMpjymXI7DQlTx4+pJxNGU58+CCVT72uGJer7IZaeTFpynJZ8f033+Sdt33G\n4vHBARfTgjSEKTf3t/nUp+4wHg5443uvAfC1b7/G20cNZ6GgrjMtk17MODAlB5nk+v4Gu9tD4lDS\nPO6nxMdTukAHTZWj65o1Jb7rHDWOWGtU5L271gnm8znz0mMVje3YGPQZZ36dOq2RSmGs4SxkOY5O\njinqisHIU+v3968Qy4h5KKufFxasZZxnpGE9XdsOgNCHkI+FUrDWUoeFkUQRcZqyrIu16/OrX/8t\niGJeeuGTAPyLV+8yvvo9fnbXg3JZ3tLNZxy98SZvf+d7ANx/+ITzyrJ70+MQX/jRLzDa3KU+8y78\n0eF9ssSxMdzxDUyA569s8R/8xBc5E/6+87OKi6pEhDAljROuTbYZbe6xteNxB0lHNT1D1l75PH37\nu6SiZrS5wyJsovODu9ycZOxt+Hp+pxOaukK2frHsDfr0kgjXVhyeepxhkKWMspif/dEfAuCte++Q\nRxFdcIuPi5KD994je3JEnoe+AA6qusaEdFxPKDZ6Of3cj384yIhExMXFgtOQWz+czTmYL6lDvJqn\nMVcGOdevXgHgS1/9GV545Ytkgx6H33vVP89ZwY2bKV3gc0gpaeuONNZsb3tlkg03OJyVVBd+Q8/m\nU05OHzEN7nn0Usvt526RJBFFcIPf+v73ufvwELRXUNt7+4x7AhPIS6ItiUTN4/v3+PxVX9w0GPVp\npudr4NQ555vGBP+83+9z8PQYupJklXZtJI8enmBKP/6je0/Z2dvm2v5VlrVXLm89OObBabOmNW+O\ne2RphgsU5nlVc/fRKU5Irm6HitlRzihPKEN6emuUw2xOGtaXxDHMM3a2NpkMPYkuzfoYC03oX+Fs\nS7tcsAwNhuj1yPOctq0JNZ1M+kOUziFgMcsWdCoY5OEbkWR6YRjnOZ0IgHH3DHP5QfKxUAo4Rx64\n3xgYEFMWU6KAKbxw8w5RlvKFn/gKAL/2y6d847vv8qWf9pOf74MpS5Io5s5zLwFwskx4894R3/z9\newB8/e4BX3z5Rb76xc8C8OInP0M5P8F0FdKE4ian+Oydfb790C/cV25f4TvvPVjneK/vbGCc4Pj0\nMQ+CVq4smPk5L932ZdDLquD46Am7+3scF37j1dWS/niLzYnfaG+89x7f+da32R74Zx72Ul668zy9\n0YgiAENZtGRz3Gdvx2v4R4ePSd6HZDe25Hg6pyhPqVc5bqFZ1C0mXGOkI/aHQ27uenzgc6+8xGBj\nh3sHx7x63/fbOJxVtHGfEMaz0Qiicsr1bW/RqRq0FdR0EICsp0+PePlTN5iuvDAseaIY9nNWRKnv\nfO9bHC46Lpb+wplMGGhNL/ELV0pJFGvSXo9h4Gtsjkc8enrK2dKP/+jNt8mVJAnG4eXnrjHIMx7d\nf8Bnv/RlACaTDQ5Oj9fkH2ct0sLOlt90bdqnqRqaqub+E++BvP3omLunc4ah6lNUHVGSM97cY7jh\nPb5FLZnVlkGot5l1lounJ4xWXkEvAxHx5HDOJGBQWZySJxot/Ia+vr+HMR1pYHEOejnDXobtWp4e\nPAXgvDTYKCENO3Hc1/S1WHNj4lij9ZC6rZkZf90n0zl3T+acLEIZeiS5udXjuaveexqMRySRZpCn\nLJuVl/gXjNEohCAPdffKOoqiJtKSSWAf/swXXmFvO+Vw7hfyL/x7X6GfqDUpBJkhS4uQMfPGu1hz\n2/Fzf/Nv8Gv//OsA/Iuv/QYP33iPUfBI/t2v/DB5f4NyeQZ1KFTqat9mbOWWRSlvPXxKGhhEe9sj\nTk7OWMymXF2V4UpFJQz7+/6ztQ3lsqCcL6iDu9eLNZOtDWxIj965skv2mZeQAdlOdczWZBMtBAeJ\n9xSUMLx85xYvhMKfb772OlrJNSg3znuY1tKWF+jMW6posIk9m1Pb0PYNy9w+q6kfjibsP/8J7j45\nQL7ry5M3+hmjnT2ioPhefG6fG9s7RGFsm+NdTCcxNNQByXprdsZfG3waF1iRER2bY81oOOTKjqc1\nC53TP5tSt4EFqXKUK9ne9PfZ2Nkgn4zob2x5Yhlw/fZtzgvBRust63SxJFWGnvPv7PaNLdqm4q2H\nDzgPYclovMEjA4QydCUlmZG8tOkVcPZcyqP3HvDOk1OaoNS2NseM+wP2ArHquf0NXnz+Nk3bspx5\nT/LWxpC9UZ/RtleoRdtxfDpFhspcKRTLoiSJEooAYA5JiKRjO/Pzn/cyxnFOEp5PxBFOKQ7PZzy9\n8J5BrTKGkz63x97zNM2Mum0oQ+jZ67eMjQBihPIeYT9V7I5y8r4LnyOyuKEOac1+3RE5Q5JKur5f\ny7X48Fv9Emi8lEu5lA/Ix8JTkFIgQ05fOYGShju7YybKW5mX7uzw3Cd2fL0t4LIcpxwikHQEErCM\nrmwTByv/5X6Po7OHfOl5bzE+u/cf4ozhE895iy4HfZxoSKTEBJAqEp4qenbi+fsvv/ASB6cnSOnH\nlud9rl5JyPIxOlB+lZQMruwyCl1wjo6m9Ho9pGNNZZXOoqVDBWvc5j3uPP8CWcjhJ5FEOcPs/AzT\neld5f3OTH/vyj7G96S1IUzdUiSYLzTnyUc5kkLI3GbKqGrbEXI1jFosAPJqGLEkYpqtxOOIo5ea1\nm5wehBLhqiSOFePA1bi9O+YTLz1PPvTzmPWH1O2C+uQEE9KYB4sFvV5v3bjVWkuWpmSJZhI4HZPd\nXTYvLijKJh5QAAAgAElEQVRC05gkyhj2E4ZDP/6kn9EbTkh6w3XTk+s3IE3HnARcZbm8IMEx6XlL\n289Sjs8vWDYFh8ce6N3c/TRdFKHfV1zmBHzva98AYLw74MbLt7m9+wXmIVV7Mp3SOcfGxHsKt/av\nsrO1T1lN1yDzZ+5s+VAk4AFVE3OuBaX1gKAkQtqUPFPPaPHWIunY2Qy8l15Gb5ChQ/Ng0xlM0zGI\nEyY3fViY9vrEOkUEr8sohWkM5cLfZzldcBadgpCkAcTtK0k6SklD96Y010TCrAvwXNthW4tWksnE\nA9XFXzSeghSCjRCXzRcN46Fmf3dAavzfRqM+Ok+RAYCySlCbDhI/+V1nQDrUuEdvy0/Unc0hN1u3\nbkoSqQgbRev2YLIpsOdH4BzSrRpyKCQ133v4DgDXrl/nc698mldf/xYATWvY6A+ZjLeJVKiKlII0\nj2lrj8RL25HFCZGUa5zEphmy69bt2bZ2rtA2S8//B0xTUszPaLqKLriAvV6GdB1vv+3HUlYFwmqy\n3L+yjbzHzmhEZwVFAMyKqqWqGtpBYDRKn+NOgvtdzRfYxnD9xk10aBRaLgskgtEwNKK9skNvOCIJ\nTMQoiqimZ5QPnq6BraaDOE7WzMmmaYh1hDPtunv2YDJmsr2xZurhBFGk14QnYs9JcDJGJV7ZjyeC\nPBuyGRimdTVDdR02VJe2bYvDkqUJ9dJnmdpqyWhzk/iBzyy0XYdRkIVsisAyylOujDeZh87Yg52r\nyCRmNPJrpa9jkrTHfH6yrsicjDKWTcNw3AvzoNkrO8qlDwmrssUaENKhQvGVlHBld0IvkMnUZEwz\nn2OrtdZGGUciJElYc3HbQN2us0rYhuV8jqn8OzVVRz2vsMYQ+gAzzFLapkWF6kzagsa5dW2QikEp\njW6hDvUpIrBGP4z8GysFIcR14H8BdvEdov6Bc+6/F0JsAL8I3ALuAX/dOXf+R10HPL01WsWEScTt\n/Qm9ScrxkX9o6yTOCKwObdKshboh6nlta7sOKQwuVrjQGkv1NLKpIXTBEVbhtF4zGk1lkG2HaFpM\n0LB1XXFxccHwuRsAvPH4AS9ev8mqQfdyUdLXmnHWW3fGSfMcUkHVeFyiqWuUlBSLJW29spIaaS3R\nqtvOYEhVq3XBlOtqEA5jO5rV3VREr5ehh6EpSdcxNx2T0EknMn2Gg4x4MCLueWvglKaqKrqQwmvn\nJSdHR9D6+Fs6SOIYHWfo0FSlWFbEaZ9+ICsNhn1kL8HJ1TyVVOWM4f4uJ77sj9O2JVKKJF0xJR06\n0ZiuW2c+TNugdEYalI+KIhAaE9J1MokROoVIowI5KbItWqdEAXVbFpp2vqQMC7vrOqazGeP+gF5I\n8y1OTxgNBmuvBcAJh973CvjW/jZ9naF0Sj94c+O453dwAO6EsVRNzcHRCY8ee0xhMWuYLSuu7njg\ncTBIMXnLMvVjPT8vWJY1rem8UQKEsMRK0Ft1yun3QIIO4KR0EmctqZZkK/q0k6DiNQm5aJbYpkaG\nebKNbwMXSYkN60VFCqlilFspEt8tTIRiuo4SKRXqfccixKF35oeRPw2m0AH/pXPuZeBLwH8mhHgZ\n+LvAbzrnXgB+M3y+lEu5lL8g8m/sKTjnngJPw3/PhRBv4A+B+XngJ8PX/hHwNeC/+uOupRBUAVPY\n2Rzy/JUJb847qlVJsG0RrsOF1BvS+t6DA+8OytkRwnVIqzCrjEQUgTOI0DwVlSNshJv6eJX5FLeY\n4hZzquCqHZxNeXpyxl/7+f8UgK//+j9ltLFJHNzBRVmy1e/jLCQB8c/HG5DCeSBNGeNw1hf1rA5G\ncW2LU936MA+dpchYU1g/lm7eUFUFZdtQBc5+qmN0Y1mGbEqWJMzKilnprUXVVoyEJYs0aSDC6KyP\nyaCLvbt9Vj3BtSUqjH882CZVGj0csgy9CKWroF7SBNxkZqckboOkvwrNSqzt6PXGHDz1fQ26qsXh\n6A9CezypsTKi6UrKyl+311ZERiMIaT+gaQtssG55lqHjGKmTda2GqRd0bYsKVjTREQJLF1KSpTE8\nfHrK1Su7JCG12XQ1vWGOUqtCOEfb1pQh/h5s7mBNSdcs1232FB1tVa97MjRlxYP7T/nuG29zeuLf\nSa+XMytKitByrpdKpHhWvixcR9PVlJ0lZlXC773eNhTybYxHJMMRzHymQXUQKb2mLgPoJEUnPVwo\nZOhcjG4SutB9WbQO0VlELolCQaDvdaGQIaPgXEoUK0QgVtFYMAWj3gZV4teTTf8thA/vFyHELeDz\nwO8Au0FhABzgw4s/VqxzbPQ9oHbn9oR01OP4vcdsBVZXUS0wTJArd2nRIHt9bIjZTVeDs0SmQ4R2\n4NQtSkXryTBpD7WYQuk3mVxMoZhTVB0nIT10cHSOMfCJT30OgG/9zjd55937q0JFFlVNWVfUpoHQ\nlVimKUSOLkxlnA8Zbe8x2dxlEcCieu7ZeVFIseIM1tQ0bTiJqpxTVgVN29EFxTcrKn77m7/Pg7AR\nXVMihaMI7uBFUTKsauKqQmv/zALfBen0wOfjL46OMFVDvqpUVBldDbnqkQSg9Pj+Y7rpGXnmxxaN\nemTzBYMAUMkIpDHUDn7/7Tf8+4osnTUMAqiY9XpoJamWFedTP7+jrW2UsdRBiSGFrx/Q/p1V5gJh\nLarX0gV2ZVOXVGXzrGeEaxHOrl3r6WzJk6Mzbj//nD+1CnDO4Gy95pK0nS8IW5GOqtYQ4ai7DhV6\nRNT1ktPTGV3nr/y1r/0rvvvmPR5eLJkFpZxnMdfGKWWY765zSBxVaI1fVC2LsqFFrO+FsMRS0K0A\nZisZ5AMWF8vwPA4pBZGOSAPInPcz4iyjCiDuyUWBadoPnPaUpilOGKrA37CNIct76NBwWMUxKpKs\nih+aVmCcpTJQBcXRTzM+rPyplYIQog/8EvBfOOdmKw0I4Jxz4lkj/X/9d+sTonpxxJVANrm2Pea4\naikXDTIohcdHT9m/uYUNl3JlQzTZRqxQX9N5vmvbQTg+rGlbIhGhQotrpzSuWiBL/4JEU1PXNYu6\n4SQ057QSRhtDkp4fy96tW/zi//grbAz8hL78/FVq11HbmkXAEFSZ4ZyhCfhBJyIuFjWdWlCEimXj\nfC//VXmvK+a0bUnT+LFa2/qmrF23tiCvvf0u5wfnuNCc9kdufxIzmxJ3fiEUi5qz6RwhEqoidAtq\nWs5OzymCZUrjBAMcTn2cPCo26E0f0srluotSLCR3Hz7EhvMYRtubTDb6lIvA0tvbZdlF/O7b3+Jb\njzyY55KIzhmiwCLsj4ZooCoqTs89frFd1gjdIFepkVDMdbHwHtXj+6+SJTGD8dC32weu3rxJqlO6\n4GHZrqCtK+owbwfHZ8zKBqGTVa0ZznU01WINaEoRIaJnTUwOTk+5MelhpKQN3uj0YsqiaLl24wUA\n9m89x6v3jphWFxzMveLQi5LdcW/NAamN76y0rIPX0lpaJ6mMpQg4SpIofwyhHxpp3gOp1ud9KGeR\nErRWRHq1dmuqoqUOnkESR6j+gDowEff29tjYGNPYGhk8HeMsVVnQtF5J5L2MmJSuXXX+ruic5aSq\nOQt7JP3A8Yd/vPypeArC9w7/JeAfO+f+j/DnQyHElfD/rwBHf9hv339C1LrK7FIu5VL+3OVPk30Q\nwP8EvOGc+2/f979+FfiPgf8m/PtXftC1VCR58QVP0Rxmmm+89RiFP7UH4MGT+7xytEcS+szZVCPa\nCnfkLSCLBcoKmtmSNtTeJ1tbNKcXZCvWXVfiyhICX98YRwlUdMjghg21R6VVSL298PKncP0epwvv\nFbTG+uYqSlAHK18Xmkgo8tU5f5HkbF5QGo0KXPuWgl6WMi/8b2LbEkkLocbC2JayLGjbbt2E5OR8\nyrys6A29Nf7+siZxls1ghsqm5ez8gq4xuMBtODufsSwatjc8Rdk28ODJGYehGemD0zm37z+gn6br\nZjS3bviDdd58z5/BmU7PuPPcLlaFcyyGKQ+KiF//7mucBPMso8RjOmGsm1tb1Msl/cGQg8c+dJnO\n5iid+FJgfA/BNEnWp1lt72wwPT6mqwQ37viakNHGBGEFi/Pg5hcldbFkGjyf47MLjJOoOFo3IWnq\nkq6tkKtDXa3vY+mCp5DkPRpracwzJH62NPQm25TBh33+k3d45fiQWVMzWHicpC5LBmnOPISArXYU\n5YKuDG3eOkNrBXXr1g12Iif9WZ4BC3t8eorRGhlqEmyxwDpf5r1yoLuuompr6tUhtaZDS4nuB7wm\nnLkRxTFmdRBvBA0NswuPiXS2YMAYE8Lrpqm9NyElkyuel5P3/+30aPxx4G8BrwohvhP+9vfwyuB/\nF0L8J8B94K//oAulccx44odyODXcf3DOxrDHKoty995jHlw/5IXnfTwqWjj/g+/iAvDSVgVpbwM3\nUWQ3fJGUygZQNszPfQ+G1NXoDmxwuYwrkJFDJxHjQHdtDJwtmvULu7p7m1vPv8hb3/aNXZu2o2oq\nOiAOfQParuNges5i4WPnRkTEWrOzMfGNSPF9DhfWsDz0UMvWxoRxniNZkYyg7jo6ZzFmtbgNWrMG\nW797UfJSatkImEMnExZFge2eHUc3qwzD0TM6tRDQH/SYBeX6eDrlfL7kzpWrfPITn/DzMhiwl8dU\noanKw/tv02GIwwEtbdtysGx4WDTY4PKqSPhwJ4RM49GEC2OosnKdFjs7PWbQ7xGHsbjOgoQ0nGew\ns7fL1miMUpI89diEayWVqSkDxlDbjroqmAbS0aJoGGY90kQjQ/xcLDu0itcNdzpnEYJ1qDkvCnRk\nSVVEF/pzdkpipKMK3JIsFrx4+xqTwYC79z2Gc3p2jtKCJ0ehQWwvo63q9TwVVUvbWrrOoVcHTtkO\nEHSBI/H4eI6whiSQjFxd0xlHa1uKgH21tqUxHaZbdaQCkUbkucd0yBPqTJHmOXrVFxRDKiyLIlD6\nywIjBFnoKC5k5/kgQtLL/ViGIx8Sfxj502Qf/iXPTsn+1+Vn/iTXiiLFRWC+vf3ggjyJmQxTQvUr\ns4ua1955wHOv+BiwK2uSKKYLlji7sUeyfwM5HK6tr2sLoq0eVe0nbvnkCUMdQ7PCHJaoRBLZlDRY\nmeXFkvPlcj2uvNfjKz/1VZZBIzfWUTYdZVGtAcHGdByfnuGawDvP+oyThMi06yrP3AlsK1iExq1F\nHJPGGhcafDbO0NQtprEsQ9y71IatzQ1GoRHt0UxjnKMLTWMUAoQ/DSkKUWAcS9+oNCCjcaRROmLS\nD9kJLRCdJdERbTjgZjqfMZ9NuTj1WMBkPGY4GLA6nNFYeHpyTtkZWEV5QnB6fLw+W5LBANvW1EXB\nMDQ+Xc6X1GWBDozA2cxwdrpgOgteV13QC63Mm2DBG+vobw7Y2Q4kozTGOEFRh7luW7a2Rusj7fza\n0eDE+06Z9u3MVl7M+XQGWhBHOjBfwSB5cP8x3dIr7emTY+r5kpPZnMehaGpWNSxQNMH6+nZ5muEo\ntKNvDU3TEqlnDVGcE74NQFCEtmlRNMShYlPFAis7XGQwIdvTWUNR1TgbPKpwdqRNVsBvH5KURvpm\nMADOWObLhm71m1RTm4osdG8SeGDURYpe8FL6qwrKDyEfC0ZjZ1o64R/o3t1DhmlEPwYdtH3VWV57\n6x5fCZjVIEt5/fV3ufWKP0w2Vn3K0oAtkEEDm2pJUVRUhz7FtGFaurRFmJX1lug8R7lm3Q25qEse\nPHnMj4cONyJSfPkrP80gsP3++a/8ryzrlrpuaFcpCalQQvDonu8IPY5yuqTHmZSwAnesY1oXmNDC\n6UZ6h2qQr9tJGgfWKdpW0C79WPYGG/zIJ18mDe7q775xjHHtGg3HWSI8qWkzFNM0bs7jk9N1t6M4\nzsjTjH5o1z7qD4lVRGsd7713z89tVTAc9kkCYWgczm5YtYDvnORoVmCc78UIYFXE08dP6N/xC01n\nCUk/Jy/6DCb+JR0d32NRVKiQpWlqf3x7HZ6HzrEsljS6ZbLlSWh7WxOyYUa6Iv+YhrK1nE1DX00h\n2NrsobVcd/rWWtPWHSYoOW+mHC5Y9NbBcV0RRYqN4BG+d/chv/eNb3FlGA4A7m8iZA/rOoYTX9Bl\nlgVVUXIRvJRlVYAcoANl3BpD03ZY59bEqbrrUFoRhdRzrBz9JCEK3l+7LJBaIhNNGkB02VoePj6l\nCkZlc3cbZcCG8yi72hKnOSrWa8q1M477791f06ev7w+99xbCmM45bByxd2WffghD1B8K9//hclkQ\ndSmXcikfkI+FpyCE4PzEWzdbNmxsjckjMCGP71hydiF47XVvjX/8R15BDfaoBrcASDe36FowRlA5\nHx6cPD7l+NETru55nsLuzR3kcokLRieSChlniMXFOpd+cXpOtViuz0lwQD6YcPvFTwPwz+KM2XLO\nclGs8YKkl7O7vYM5DeDYyYJ4NKA3HKJCmmw5nZJFsHPH06cHkwnGmHU35KZuWFQ1i87y7lPv2VSL\nmpHoke94aybeOMUJQRHScyqNSZWkbez6WIe94Zit/phpSKsdn82YFxUuW3WR1kiZ4BAMQ5z7mc9c\noT+IWCx8iGSruedRrEsWFFE+orPHKLc6VEZRlyXHxx7o3b2yRzbqE9clWUjDPj2fMjy5IAtU6H5v\nyOSTm5Qrvr6xDJMMhEAFkDbKNUk/pmkChjBdcDab8+TQ40KD4Yi8F5Fn6dpTwBnapqENTUT8cfIC\nFdwwR0RrBU9PT9e0ZtMU/NRP/hjPXfHv4/TxAQ/vPyLRDTp0o9bdkmHiGIRY3IgRdbVkFjoxeaPc\nISQ0AauIlfQdolcnSEeKRdUQHFHaeUNvlFLUHeONUMdDx/bOFR4d+Gdc1g1b+1fIg7s/Gk9I0pwk\nzZke+3TubHbBeGuL7c0ABgt/uNAq5d0ageqnDLc3GQRgTv6Rkf7/Xz4WSgEBT088Qi5ERKo1TbHA\nBpZXW7fMZ4bf/lf+NPsvfvbzXOtPWN7zG8iM94n6OfVyysVj/7fMRHz+sy+ytReQ33YJxrf0Aoho\nca6mriqWM3+f+cWc7c0B7gOulltXJtbGUS1q+idnyNA4Y7K9wyDO2dv3LvyFlDhadCzXbcZsLtjf\nuc4gxMoNjnlR0IbFf35+wnyx4Hje8fDAb7St0YQ0jdj/XMBRvvZtNGada6/ajlRIIiGZhfEncUoc\nK7ZDy7ntjRHCRSQmxJ4IksgfnZdt+8WiM4URHeWKM2EUrXShWzRoI1DC0gqLDNkHi0ErSxEUyfFT\nw9Xr14iTBAKR6vv3HyGUYjMUFCVJjBW+vgTg4viQJ21LFEWMQqHYzrUryLbDhq5Dy2XJew+f0oZV\nun/zCv3E8y+iULvRVDVd26zrD0xnkFIh9KpipSXWivPTYk3+Gacx1/a2KQJQ9/r9e/z+6+9welFQ\nhM5LdWuJE+gPQ+FSrGkay6L0Y9ORREcCay1twIaSrsXFI9+0F/hn//J7nJ2fr6szb24MGb50jQjH\nOLSFF86hk5jtcJzhxfmcx289ZjDwc9JsCmJd4ewJJnAZ4lHKtWvXUYEf4aSibmfgQg2PcLhRioos\nqMCrqFZt/n+wCOf+BMHGRyS9LHWfvnUL8CcP26ZjPB7wmas+vhtZw+n8jMWa7bfk2taEJABOC2NZ\n1g1ove4KHceaJE3Z3PTx6ntvv8PJ08NnJw03DYmKmOiYndCIIo40RV3z6b/iEya//PXf4GkxfZbK\nOj9nNj1j2MvQoSBqNp+hlWAy8pvs0598kbaqOTud0uv7zfnSy5/g8eMnPHzgG5uMx5u0bcejwDxE\naqIkZ75Yslj4zZn1cjpjyIJFPzk9QCm1BjhjHXmiC5ZhKPSJlGCYxuwHstWd3S1SurXnUxtLZWG6\nLJgFEs7TiwVPZyUXgQBlOkdnDTpkGr70hR/iR3/4C77MO1jn5WzBf/3f/f31+xNCIGX0/7H3Zr+2\nJfd936eq1rznfebhzt23B3WTbA4iKUXWYAWOJdlRECMxJDiOkz8gQB4SBMiDH5KHPCVGYAgxEgR5\nUxIEyIsM2LJNTZZEis1mk91kj7e7b59z75nPHtdeU1XloWqv2wQCsW1KQj/cemmey3P2XqtWrarf\n8B0I4qi93t5gwJ37z7HjHaOFaSgaS8/LkGXCEihBFCrSyLs0z855/PiM+VqTUUb0d2+x9PqFxw8f\ncnr8iOvLE3Lf3nXy/vC//9Y/AuD+vVucHJ9w4dvVq+WC44cfcXU2Y+7FUBrpmLVzL4JzdXVFlqbc\nv3+fiwt3YhdFRb7SrHwU2TQ1dV1TeT9KSwNYB0byFfF+v8vP/uzXuX3baYf+b5Of5+R3/zH3Sqf7\neDhKGQy67G4PWE5dYffqes50VXNyftXOk7CWpjUWMUSBRAqB8bWJJAnY2R6T+A7Rwd4Ot28f0PNk\nwPceHvGv3pxSP/8PuDxwClVaKH7w39591Vr7ZX7MeFpTeDqejqfjR8ZnIn2wQLHW7feuTHppkcrp\nHm72O5gmJ1l75Y37ZL2Ugc+Vx1LRSIkOQyKP8c6yLiqOyHzvNkpiFnu7zKZuR56fn9PFaR5o3/Iq\n6pLKap67dReAz99/gfkbrzHVXvAiz5HWIE3Dhs/Vbox36aURN/ccYOjenVtUjabIKzJ/gm9ujbi9\n1WVxzwFJtLYsFzl3t101fOfgkHcePOS175+1jstlUaCtbWW5WpViX+lOg4AsUERCMPQV/mEacTju\ncW/XncZ7vYDYSAKv9jwvayarkirOWgr5URbRCWccSZdLX+cNy9rimw9cXE34+OiIZ+/dZQ3gXUcr\nn4S0a2sIpGBjy6VRL770U2yNR5w9dM5fs+tztAGx5SKHWiq0rhEKjI/eri5Omc8WrcGvRZJdXrB/\nz2Eqnn3heeK4Q55PKXwaKHxrduKFT99//BGNrql8/ePk/JSj0xMW0wLjl7sGqqqm8imHsU4zsizL\nViMizx0RbK0KXTcGY9fOjNBo+wnPCne2LpYrzs4v2fLK3mY5R81P6fU9/6DXJ4slgYJe353qRVlz\nOZ232hpKCRIpCDxnIZSCMJBEUUjh572uG64vLly6BiyXJUaGrXO1EJa7WwEnV9+lHN8DYNI55NOO\nz8SmAKK1PmqqGqME426fV15yxKT9bpfD6SnXhSu0yGGfqJMSrV2nrULFESqO6A5dKpB0+qAU6wLB\n7t4Bl0cPmTxy4JTZcMBqdk2AJTC+0BWm5EKR+oXx8y9/kQ/Pj1kcHfvvESRxyJdfuMMXX3gGgM1x\nn3G/Q89vPoPB0NnIWdpWVRBIwDLxPfr5Mufk7Jx7N1zeOBr1uLXbYXuY8o1X3wLg6HyCRlL5FmvW\nSbHWOMFQoJNEZAq2uhFj3ya7uTHg5rjHTa/80wstkXxiklrUmnkRU2tL7esdoa6oC4XQT9y6EZq5\n5x8cnTzixefvAQ6wBFA3ldsQ1puCEIRhynBjk5c/5xS3x52Ed7/3Hc69QGksBEgwKzcHd3e22Op3\n6XUz5l71WivNrFox8TWSonEchLVU/sGtu+yMhywOb1P7eVmt5pjGYsfu+q/EkkAZFqX7zOPjYy4v\nZoCi8m1LKyQSBXrNmozQ2nA9uab2ebtSkMaWpc/FbaCpG431RUVhJEIJrG3aznNRNhw/eszhDfcC\nivyEbli0UvIboyGmXqAbS2+N8TCCpsjZ9upSnThEGd3qX2ZJ7DgivR6lB3WtVjXzecHK1yVQktMP\nH3LqOTzpxoBBd0xz8U2K2KmZB895Id5PMT4bm4IQrXinQSOVYHdzm8yjBncPbrB/c5NauoLNzFhE\nlCG8a7AMY+cEHYat8EeadRxV2W/taZwQS0PP00vzNCCfd7k8Pqa4cqfk5miDjcGQ4zO3kA83d/jF\nL36Vx2e/A8CJlBzu7fD83UP2Ru7atjcHDPopmVeBioKETqeDkE8ANVhD09RIr36TBBLRVE9s12xJ\nkMW89OxdHk3cCThdFVzNV+1pbIwlDCRdD2rpx5KNXsYokQx9X7+fBIyzgEy5BZWogDgMkP5lVtJJ\nv2ljqb3aURQJVBRhcRtuXtRoq6h8/qq1ptcdIBDOsp0njs5rqHEQhmzvbvP5L7zErX23+B68+SbH\nDz8m92CwvV7Alz53j5/+vBOife5gh1FvSDdyKkIAJ9dTfvDBEb//Z05K/js/eMCsEuR+M71+fMz2\n/i0OdnZQuGv44IN3mc9zBxsHBJamKDn1G/n0agoiwAiQfr1YLVC1JjVeBr4Tk3QUoWxYWV/P0JpI\nKIyfy0IYpLQYf8/CSqf7JkTbCRFCcHk54ejIOX9l9hgpG8a+kGqsxiLpZV1Gnpo+ShI205SO9+bY\nGHYo8yW5L4pKKRkOh+zs7DlvVCBfLnl88pjLywu/vCyVDSjec2vn0ekV2AzdrGjO3SGz88LP8X0+\n3XhaU3g6no6n40fGZyNSQGB8DiXCBIFmnq+Y+HBons+omyn9bRdyRUlCkA4IQ48Ki0InHybFE8fl\nIETJJ2IWtmPQwyGBxz50ZI3uSDJdMdGujWkWC6Iw4v/5xj8D4Dd/9dd5+cZdXr7tCDvHjz5id3PE\nsJuSeXRZrCyBEK2ufhiESCtceOm/WxtLIEMCf7olQrLd71H5E7daVZRFSaYUBx6XkMUh89UTXn0U\nRYRCE3qo60YWMYwsqimJpTt10lCSRrLVSQyCABXGLVw8xPXx66qk9O0rQYBBtiapZWMQkyW+M8eq\ncffxxDbV8T3gSU0hjCL29za5sTOk9CI20/MzIjQvPO+wAH/vb/8cP/OFewx9RyZQEcoGiAqMJ3Td\n2Bzy4s1DfvannHfHN/7k2/zff/Aa+do4tSipZhPCMGLfy6TlixxtHhPnvi2rBMu85vLYkXOrokaL\nAKublqsRi5BRGrG/40h4w36CigxSyLbTNJ/NubiaYNccBSVohKBcR25+LoV6kkUZY1jlJR9+6Cjm\n0XALaw2lbyOfXZQoXaCqnLB09aTD7S3u3Npna9OlvVubY+qqYO67UEIF9AZDxhvbbWS8mE/Y2uox\nmyiFqYUAACAASURBVLq1UhcNcdohTl2U/M//+HWWyxllY1h95PRFNxfv8WnHZ2NTEMLp9eEWS6Sc\nnv/ItxOjJKRYSGqf+1sZuVjYYzcFBqxAILE+JDS1AklbHAtVTK+/ifbtraDMqRZzenFE4Aksq3lN\nfn3Fqx+44tj+d/+M/+BnfonQI3myOGDUzwilJfS96QBNqITTIARkGKHiBKVUS9LR1jgCkVm7HBco\nZRG+0GVx6YEQmr4neW0O++SNoPShtdGaMBYk6ze8qQlswHYvZafn8unNTkQWKSJfn4mTmDDutBbs\nEoNpKsdrWOc2oqRvDBve22K/F3G1XHDtAUWLVcXDhx9xsLvdWrM1de0EYX0d5fnnn+cLn3uBrUHC\nx287b45EWr7++bv8J3/nlwH43DMH9OIM1voWCKSxrJmwAFLExDTsezzHr/7C10iTkN/9pgt8TdKj\nqgoM2jkkAYf7N0EpDj0LMBaSNz84Ib92LxUG6nJF2NTcGLrnfPPGDtvDPmOP58jSECkt1goa39Ne\nLpZcdjOiR25zKU4uiYVTWwYwVmCM9nWWJ5Z1dW2Yz9waU8GMclXw8KE73IbdHhENSbOkDNwGFY0T\ndgfj9lpGWZ+gP6YceXGaICZIOoggajfm4WhEgHFsV6CqCqzQ3Lrh5u3uzU0mxhI1IXXj0rfy4et8\n2vEZ2RQkKvKkHeE8+EIlUf4levTRB/R2NijXl6sbVFNjvIyXtQ7FJgnaXnoj1huCF99QASrMSAbu\ndLCrOYWF2XzeEpc0Fls3bZX3j773Gl+4+zy5F27J0i5xpJBWI8SazQjSijZfDcLY2dOnSev2LKRE\nlxUr31tXSMcl8LdvrJMca+wTQY407TAehVxfuwVlhUbJgMiTt7pxzLCTMe6EjHxNYZhFxGFA6Auw\nUZQSdkeItbCraRDLORGi3TytsES2bpWXhlnCTj/lwgOrsIbzs3O00Vi/OWqtGQx63Ljj+vFbu1uM\nNzYJTUmxdPn/3kaPX//VX+YLr7zs7kdZ0ArrjV6ELtyzshrXDwCjYqRMUT4aSjuSL9+/y9ljhzl4\n/7IglwkLXWG9SEw37XL39r3Whq1a5pwfnbLKfW1mWTOfznlxf4uvPH8bgIMbW3SyjCR+osJsrEU3\nhtpHLUkcEQeSxne8ZkVBeTqlWu/J3qxLW4M/H5DCzdfK2+ANbw65elggC+8UtizohJLeICDZdc8k\nUYKmWlIWbt5m85BuZ9Bu2tZajLRI4YqdAIGQZFGGzNw6zSXUlHjVPfZ2BySrmrQOGWSOgTov/lzt\n5B8Zn5FNQSB92I+xNKZmscz54VsOwbi7kbD/0rNU/q6reoWuG4RfPFK4goxtGtbiXRoNiDa0U9Yg\nwrBVPhab++RXlxTiAxZeQlw3BmtwDCXg9OqSH7z/LrduuMX/uF4RBhIhDMKj1hAKa57YuQkVIlVI\nEKcEXnJLBopFcYnnWREgqZEIuzYe1VjPgFxvdCDJ8xWxr1wbW2C1s0AHyEJJFkAayPbEiAOFxLT3\njFTIJMUMXJgZCIEVClVViMCDcOqKQEDswUrdOGCzEzJe+nRIWNIsBUvbfdDacO/eHTZ8+J1mGUZL\nzk4vqHxX49n7d3npSz9LZ99Vv1mew2KK9HBkbQxWazB2vY+7di8RgWeGRoFhc2OXl+87VOe7/+IP\nUZ0NAmuwfiNRAnqDEcdz9+Itr6c8Ortk6WXVzy6uGHYS7t7e5fDARZ6jYd/Jzfu5NNYS4HwcWwX6\nSNLtddgxLqy/NZ+TTxeUftOotQFpEMa6jg3uPRbCUnn16UleU6wKrCdImVhAvUJ3O8Tesi4wknq+\nooncpqDDmFIqZOSL6FLRlCsUBuU3Cl1bTLlEmtw/o4rGmLaNOe4P+fjsiHlZoAKPXI08vPxTjKeF\nxqfj6Xg6fmR8JiIFIXA1ApwQ56q2TJcrIg/XvfOFn6K/t8Ny5Xb/oA4Ig7gtvKzjN6UU0hf81v9d\nh2FSOTXedetTdDdIdu/Q2z8F7984OZ9Q2ALtj67aao7PTnn20J12ZVmyXBqMSZB+91dKEQQBsgUX\nSQfVbho8dQOtNfl8gfLXZAIFjWiBSMYY6qah0bbN2421NHVN4qOAoirJwoDIhxuZgkRCJ46JvfuP\nRCAFGLNOh7QLc0MvvqEkhBkyTKnxaYm2KC2J/GmXSBjFITu9tW9hzuHhgTOFWXs6GM1oY9zWa7Y3\nNljMZjz6+CGVP6HvvvBlBocvU3s4uFAlkiXCa0FqbRFWIrAt9NwaTdNU7XMNVEAcd3jxeVd4fPfo\nhNcfHBFHMYXHHEhTY6oVE//zZDrlcrng1IvxVo1ld2vEwf6YxLf9hHVuTtbfs8C6oqE1tPakSiJC\nSWeNMeil7I0z5h63sGwahDYEUrblGa0NSqn2GZarBcMsIvd0+HxVkCYaKWVLoqq1RkYSuTYpyjLq\nMGznJFYBQWDQTdniabRtaEwFxkd7osaYhtC/Q4NOjzBImV9N8aLXyPCvULj1L2QI0ebXVggsBiUF\noc/J09E2IukT+XBJBRIhA5RfPMbWGGOIouhJwU8qwImFroe1IH1qoK2hO+qxfecZBh5lR/IRjx8e\nPelYCJgVedubvry6JLQN9UG/ffBYlzi0f4PbBEQFwXqxVJVLSdaFOqP5pIym1g1NXbMqK0pvY651\n4zYEL+DZ1JJYSbo+zB8kIb0oIBRecAUQVhEQItdCDSIEq1rxVG0kVhhEIDB+nlAB2jZtTSSMIsK8\nJPFF3CTJGI/G7TXh7y9NUwYDl4qFQlFWK6bTKYebDqfw8ld+ARlvYv3CxQZYFOvgtKmN1x2QSLne\nOFKkDGnWRihWoQJNlrpn+PNf+2kuJlPevbhCW59ixBmLyQrjD4zpxTVXkykT77wdBZKDvU2GvV67\nXpSQhFK1G7s2DWAQktZ+zhgDUhJ7M6Fup8fGsMuGx5Fc1hW5hcCI9lk21j5hbwKqu831cYjw6Mss\nFARhjFKK2qtCiyBi+8ZtupsOCRoPdlFhh8q7mlutUQiENm0dS4apq2v5dI7SYk2Dp0JgyhmZsBgt\nmeIKsIPdl/i04y9CzVkB3waOrbW/JoS4A/w2sAG8Cvw9a2314z5Hr28YzV4/ZUNZ5guX63cHW0RJ\nj9IXcFarHG1otf+DQGCtpapLAv/ihaFCBarN5wBEbTAeFUZdI3XNaHObZezhyFVDUTcI+4b/C8si\nX9IfeN9IYamrhqbSTyKDIMAiWzXhpm7QoUEgaTxV1zQN1tRP6MhWIoTC+rZgVWsPcrVUXp3JGEsQ\nRkhPh8UY0ihk5E/wLJTYpqYylisvXGIISJOEKHDzopIe+XJJN3JRgUgj6rp0RdnMfU6oNaGVsFYC\nKgyX+TVXniAlwtDLfFnqeq1vqelujkhSX6hTlvlsgtY1X/zqzwOwsXOLOp/TlK7AVVyc0BElqT+J\ndW3AGupmSZa6IqEVCi0EZu2eJAJMEGJL9/Oo3+el5+5yssgZ+gKaVgGRDViduO9Znl7TFNVaOIok\nlvSzyK8Hj2BU7n+vfTgwIIR2XpA+mtMyQApL4OXlOr0h3f6Efs+twXRVsdA11miM/xzrToe2ptN/\n6ReZn7xDVblItBsY4iACGZD7jdpoickN5so996q4JupagrWrVBQhrUXrVat8FUQhSg4w1h+aQmJQ\nbAy9ytV0ST8J2Nw55LF0B95V6siFn2b8RdQU/gvgh5/4+X8A/kdr7TPANfCf/wV8x9PxdDwdf0Xj\nJ4oUhBCHwK8C/z3wX3qF518CfsP/yv8B/EPgt37cZ60r2wNluL+5iVot6Xj8QLebks+umF25nvFs\ndoHVlijyoJ1uByEsFt2abIZBRhAGhL6KmyQJQZZRebx7aSuaJkQISDxEeXN7lzCMkPZfuPszhvli\nQeQ7I2mkyNIey0Iw9zt9VypqEZL40DQNIpIopqhKQk9YCUKFpaRq1oayCU1d4yNItAhBNAw6MT1/\nQlitMY2h62HZU2tpjCFdC6oaQWUVZ+cLrL++KK2Jrwt6qQvrR5c1vSxg3zsWdfspqq5RVYX2adR5\nrXjvuuYHDx0s+OhyCkIyq71CcWMRugFrabzEmRWGsrGM1ga6dcFydsV4Y8Azn/uKXxxg5++xvHTu\n0LLOWZkVS69h0FyXdJKMR2fvE6ReTk5EiEC0YXGiIrLeNtZ3ZGqtGfZ7HOzs0fj5vpwtabQhMb6T\ns1jRFAXhuuZjNIHViFBg/dw2Urqaxjp0QyARCGPQ/t9qJE1j2lTGyhiV9AlSV6uIg5xAaErZYPUa\n8+FAXuswPxgN6UR9CrGOaA2dqEODoPbrspQR7x9foioHrY+CgO6g11LQwywhChXFYtl6XQRBhArC\ndq3LQCNJSXxqebB3yAdXFclpSNx1HB059F2gTzF+0vThfwL+K2CtH70BTKy1a0TKEc5K7s8dQgg6\nXtxyaAqOH37AqNtl07sUPfjB67z6+uucnbtNIeuE7IxGbI1di6m/sQVWU5UFpQ+/54s5q2VB6lmT\nm5vbDPcPGfncLUs7rHSXqp7D2iy208UInoSV1rKsCjpegfjm7iGX01PeenjKydItjv3dbe4c3OKZ\ndVkiSJy1vRStrK2xmvPrGZOFSyfyVUE+n9N4dGVl3QLsBoqdDRcWB+KIVMFm5jaWR5eSytBiBYQI\nKBvNaDRkZ9fl8aUxPDy54NGl022oy4KdUY/rbTdPd/a32chCVF1zOXe5/rePjnn70RVF7uZ/0OvQ\n72acX3onLSuIowCwLbrSGMNgNCL2hdLTo48pFlM+/7nnWvZftZow+fg1zj5ySLrj40dMzk/p+KLw\nbm/IKy99nouTa9587zUAzuY1QSS4e3MPgPt37lGYqK0DBUAcxoimZuU32DjrsZzNW7etZblyxCW/\nthpjWRaGR2dzPjp2Qj6m1sRxSC9za2M07DHMQgIExi/daZ5z9PiCx6fub65mc+bLRds+jYIQZQ2B\nDNpWM9g2RQT4uXjKH0VzZj6lddwTh7Jds1CvryacPzpjcu2+R9GwszFi5PUk+/0uo2GXs0ePWju6\naVnRYNnc9qZFNw7odoetWUyUpsRpl0BPWGYubQh7m3za8ZP4PvwacGatfVUI8Qv/Fn/fOkTFaeZy\nLSCqCoxSqCQi7blN4Vuvfpd//vt/yMSTRIJI8fyNHV561lGcX+wPEabh/NFjLi9d/nY5W3ByeklR\nu4nc3t3n7uEJNzzFeWM8YnNnDxmE1OvqtwpQfgMAMAJWTY3xn/HKC5/j9//0X6KkpvAFqO+9dcSb\nbz/mc7fdrvDvfv0rDMebIAW17wI8PDriT7/zOhfeMj5Oe3SjEL12qs4XjHspwU5I6ivkoRQEuuZn\nX3KV94fnp2ir245FTI2iQVZz5pceBmxgqCShp+pKYgaJwPraRrWYs6gDqqbmdOI2hXKRM44Vta9c\nV43m6uSklX07uHkLYwxaGxofHVlr6UQx52cuCri8vKTX7bG1vduiJ0+Pj5i98zYfvvc+AK9+/32m\nV1MSv/l/6XPP8NNf7XC4f5c3vu8Qi1lhmeWaBz5XLnTG7WdHDHzEFQtLqAISJTj3Ff1CR4Rhyq3b\n7iT89ne+TWNMiz02VhAkfZLeLrNLR5s/Pj2iKZatOM3NvW2Cgx26qWLlC70Pjx/z0dEV1zP3PSst\nCLMNhp7U1tsoKN9/l8eTKZHPwoWwNILWpbz+f/8x5vH3kLgNS6qIOFSURcmZv5aorAjCmMLXMmy5\nYvrxQ9TH7jPv7G2z8aWXKZuKC4/SPFlZVghyv1Zl5tb50BOvUAqhI3azLrdvu7n80H7Mpx0/qe/D\n3xZC/AqQAH3gHwFDIUTgo4VD4Pj/74+ttf8E+CcAg41Nu66iaEJqUyGVIEhd+nCZawoboX0ovapK\nJgWcTz2teDCmE0VcX85Y5k7N6Gpac77UHF+5Hfjty5yjqwXPeR+I5+8c0NCwe+se1itJ66oGbGtH\nJ6xrl5Vegmt3tMnuRo+tcUyh3e/curXHO++9x9TTWH/w4AEvhyG9fp/rK/dd77//LtLC4aEDQb3x\nzgdUWYfYV+bHwwFCaCrdtOaq437G7miDl++7je9Pv/tNLsonhbA0VugkZbKqeOeReznPasnj5Yq9\nsQPcPNfLGNQaIb16ULHCxj1WVcm1T8VMaXl4XvL2lQP/bO5sUM9qtvouuhiObpFmHcwnCo3WWorF\nivMLt7ALAxu9IUIkbUty/vgx77z5Fu9/5Bbj6XwGTUmYupfq4IWX6W1sE+iMV15ydOuPPv6Ydy4m\nnHuq9Gt/8m22vvc2f+3LLiX5qWfu0Ek7bAz6vHfunvOyjjCmIU3WnSjjCpVroI+F5argzTff4cIr\nLc1mM+p8zo1dFzU2WwaLRMgQ7UU866rEWoHx6/L08ppp8ZjUQ8hHvZheFPPY2CdtcKGRn2CJnH30\nNlU1JxFuHacyYNRPKYq6pUZfLgouy5xjr6v58vN3GGQNyzP3fFYIsq0doukVeunndlnxxgdHzNdi\n4dWcZ+6GpL4IHYYJWV/y1w7vEV79AQDb80+W/f788W9daLTW/jfW2kNr7W3g7wL/ylr7m8A3gL/j\nf+1TOUQ9HU/H0/HZGX8ZOIX/GvhtIcR/B7yGs5b7c4cQshU2MZV1rL2yIPbh0X/8d3+TJAn58EMX\niiopGY9GbHn9v539WyRhwOnpJQN/4k2Lmi8cvIh4623AFY463TFXPpfOq5p8saAuChJfd6iNRdoQ\n4U+dqLR0CVFeQ7Cbpty9tUfWNeRLd6Lfe/YOr7xwl+1td+rk0yvqukIJw8qrAd1//g6xyggG7nqf\nu/8CTV2Rnzni1bAXkUQB5apiculSimdv7HC4uct4y53YX7l/kz95cNKCa7qRpNvrkcwLlit3ZIx2\n94gvJzzznIsuDmJFMDuj33fhd5KE9LspRbEk9DDt/ijm87s36Hq7t16WMI0qOl63QSYKqxS2qWk8\n209aOH58wsp7FYTpJkVtCOIeVe4is2/+8b/k4sGj1pn6l+7t0TU1TeRy289/8RWUClEy5NYdp7Gw\ntdPn2WWO6rrfKVQXo7sU3n0rTjLiIGFnPKbb8XyCQlBawcJrHpZ5gRWidSgXUtBUJVlk2PIishvd\nDqtZh8yv/nx2TaN3iLMhS48PkNbQlAWZb3vvbI+JFmErntqUS7oqIBKQm7VupsTWJdbD15cbIzpX\nMyZeDzNVKfubCZ04bp9ZZAR3sz5f9LDnO/duERnD9GMXYR3c3mewc4PnlKI/dqnx3rTia195he7A\n3Y+q5mSJYtBzEUkdRNzeGDHA8mjitB3K5ad/1f9CNgVr7e8Bv+f/9wPgp/9N/l5K0fIE6qVAqARj\nZdt9iCPJZj+jGrkFFkYRWzvb3H3WLaa00yUANra2KTwLMowiZrM5X37WyVFlnS47+4cM/EQOh106\nWQchZIs5CKQTIFlXpXc3tvjq8y9ReQGPHz78EBtGbIw6jLse+FJcMxyNSANfW00koQ0RFs8ChE6v\nR78zYq2nGw9jmtLA4Bk/fyXCNkzNDKNdvz1SglAIZnOX2496HSLcZgagVMYwCenGEX1v+DGvBDvd\nTSLcwu01cO+ZW0SRJ9cUJVmcEIUh46HbCHfTHrNlTXfsNuB8NWdnq8PKE5dWusJiHcKyecJovLw4\nb5WZR8MNbCAZD0cEftf6ypdf4cbP3CH1OIWOMMyMpN53alr9jZvoYoqMM8KuK4ZtjfYYV3O08C9Z\np4uIeujG8z+0wljD4Y19Nt9zcv+XiwVZ2uWNN99xczBbYhrjlJX8PA46Ec/s7SCztcBt4jTYfK0l\nChoG/YROmrLwLkuD/pjb9/rUjXtFbtiAosgpp27TK8oJy8WCbqpYLjwHR7kiYktA3X2GaHWJXXle\nhnFGOjf2xnR7nqh0cU4cJYxHnpfRizF1w8nA3XMWR4RhRr87orPp6OLnF9dINF3PqFXRHol6kjJd\nL1cIU7M4OuXOTUdIezt/jk/RBHTz86l+6y95CCnRayuwKCJoNFZYQr9R9LIe/85Xvsbxvtc4FJB0\nMnq++xDFKWjNYLTpbbyg1x/x+PiI2cw9xDgKGaYhBztuAY62tpCBwNZ1y7O32oA2LQpyuVzyZ99/\nnT/45r8GHArv5776HHcPhmz7ok6apURR1Bbz5teX9LZ3EYjWlcfUDWEvoe/z9DiOsHXJ0hunTq7P\nWS1n1E3Twnc1DUYIHl17FKdpSJVg5nUDKpMRSskgjRn4DcoGMTUBgT/demlCFlgKf3o3xlCtCpSU\nKF9cHSjLxiDmwDPsykYxaXI+uPJ6C72+VxfSLfzb+XSctYQi3enR2d5j7+AO9w5dNNQ9jJDXD2Dl\nquihtcTRJtP+i/4zLE11jkCicc/ZSMVgkGK9+pG2mqYq3UsMNGFCaSyjrW0OPcryWx8ckUjFbO5P\n8NqijESaNaMQerFkp58Q9TP/3TFGC6R0m0SSKPrdDqEK2ny6k8REWdrauWkjwETYnm+FLgRnwpKd\nX7duVEZ57QlfL6h7t0jSN8nEOnoVfPRoyt1hl8Mtd0+3XnoBa6Femw8HMJktMX7zT7pjVNTB2GsC\n35rd2t1men5Kqp6Y6ArTkHvPiiLPGfSG1MkSPXAbyWP1HJ92PCVEPR1Px9PxI+MzESkopYh8aDe7\ndvqDm/vj1k58ejFFEbG15frX8yKnFtAfutwzjFNsVRGGEYnvWBzcGLC1t09j3I4bhopB3CXy4hzG\nGGxVIaxt0weMweim9XSorOa8XNKYtauR5eT8ColqKcyJDBCfsDkvVwWN1lR11aox6VWJWa5I+2st\nAYklantXymtJlkVB4a+3QUOa8K3vu5rIF7oNw06HK695OC8MdQOBUHS84k7U6yKSLjJ0KZJAYus5\n0VoiWjoFp47pMBXefEdr0iwi9WCg1TJnXmr0miwUJiAkWht086QlmedLYl93MEYz2NxjtH1I6GHB\nXWkJOinGP9emKTn/aEqxdN/7xgdv0F08YLu3Q+PrG5vDCJmpllOhVJfQBGjcZxgbYm2NDiJu+Kgx\neetdVpUm8CI91kiUUq2AjWlqAgyDLCL01ytE4IhxYk2WE068tdKtqrK0FYlICDNvKIvFGItULvIx\nsaFYNSQqxmj3TOraEimF9JR+MbjF3u4hy5lLoR43ER89WvAgfkzkr29/d4u9zR0GnuIsVcYPjx4w\nm7kI8Us37qGSlFJKVr7bMzw8INzapfaCt8VkjtA1M++ifTXP2RrtsfXcXd4Tbi6Ppm5NfJrxmdgU\npJT0/EIQ9Ra3d4Y8d/8OeIDK5NGHlHVBUbmbnlU5W4c36HVdXia0wGiLtbTgpSpf0u8P6cTuc4Mw\nRApBs7aHLyvQFU3QeEIM5PmCIl8RemZcVdVIQHqJdK1qpvmKPC8RgzV2vSaM4tamTChFmMZYQ8vC\na+oG3Wis1xJ4ItjqX7xaUOU1Rb6irj3DbtnwB3/2Gn/0PVdcffEXDxkOYs6mrhB2sWyYFTWjjm3z\n+DjOUN0xwgvW2KaiMStWHkVVmobUVEgM/muorCWIwzaPN4GkMhGlb72lSQzW/Ej64O7btA7SeweK\n0WBMkg6pPJKnkiOsmCJX3urs5BEPfvCQ7x//KQDf/f4b3Bp3ONje4uzELfZf/PJPcXs/oSpcS3W0\n/ywiHaC9RVRTGnRdocuK2L1DbCcRJ/OSldfEMEAtBLUXXK0ay+VsQVXXJL4AGCoJ0mA+4aSWRhEK\nRRa5D77WF9RVTtJqYkjqhtYpXAmJRVBLTeOxF9IKlJJEfj3pZ75IIt5meOwAXBdXDWeV5WhacHPi\nrjdPEwoVE/hidxNJLq7njPp+ba9yWEzASpbePs+Yhs2dLTyIk+VkglzWTIR/P+aCbpSzuRnwXu5S\n1mMvSvNpxmdiU1BScv+e00Ecfe5FDnc22NocknudvY/feQdoWHh5cK0sN2/c4uJjJ/01z2KkcAt4\nXXx56913uTo5bws4naxDGEctvVRat8DKsqBau0bpBhWFrKGISim01k8oz9JQ1JrpMqesvV5kpAmC\ngNxbgykhSIMAU9UtMaYsS4pl0cqDG+OiCV2tEY45izyn1BrjI47lquLtBw+ZetWnRllULIm8QtLZ\naslpnrHZz8j8qSOaBlHmVEvXj8+XC+aTS5rSqyhpQ5OkWG0p10Ck+YLxsM+aQVSjuKosZO7+pFJo\na6nr5kcYgE1dtH6aURARyYjVvCTuuBN7sWgIJ1PU0sF3z08+pm7mJIEXYbnRYxBF3Ll5wMvPOwbf\nbq/PaARXl07jMEw6ZKMEa90Lo2uDrmtE4yzwAPqRwHY0ylvNhcYgjWml8PLG8uDRKZf3bxNl7pSX\nUiK8apJ7ZhJTlmAVwouoBBaqukb5+oCQLloqfLl4VRZUeYEuaoxdC/s4mTk8Inbevcl74T2mylvA\nqQVSN5RWUPrIbJ6XzJI5gUcjnp9MOT2/5sFHZ/57Y1567h6mXLX4mUfvf0g3ChFy/TwaFtjWCV3U\nK2xjeGvxHK/OHVhvomI+7XhaU3g6no6n40fGZyJSiKKQz73oe9WDHqNen7iX8Pja5UwPjz9C1wVL\nnzONNke89q1vOvotsNHNWK1WIANueB8/Yy3vv/cuVz3Xpx0Ph2RZh9SLWSRxiBCWVVO3KrhJmlBp\n3WojBEGAEAKj/ZFvJWVVczmbMc/dSZomzvNx4ltVy0VOvihZLpdMl2sRDMUsL1h46ncSRaxWy7Za\nvCpyVnVDwxNZN4KYKOtjfe5vrEUF0Ou46y+KmpP5ip1eTpL6x7hcEBRlS78uqprFfO6pz17LUkYE\nUiK9jqMKFAYnOAowLTRnhSHY9lh5IbHaODTjWjcQCBWUa/1LIRB2znTyPhTuu6rlR3Rnj4kqz6GI\nArYOtgn33Gm3edVjenrOB6cf0u0s/DO5x43BDfq++1Asromi6za10bXEaK8V6aXH0jhG2pLJwqUp\nShqQtB2ARoR8eHrNx5dX9H3HIgwDpLVODg4oypLVbEEgQ04fOXzAcjUlTFMnCoyTraMqW7OY8sRO\nugAAIABJREFUoliR5wVl0dC0fBRLrS34dLMI++gX/0P0yK1t+do/pXzrGzRCMPcdi3RpmCaKrO+i\nmMZozq8XvHHk7ufRpODo8SWyXvHLf+MXAOgGgsV0Qtrzaa5uKNHUtZvbSbjLGdt87+I23zXb/lq8\n2sqnGJ+NTSEMuXXoioijTkYv6kAaMPN1hqt8ymo2RXlewL2tDYSMePjYpQ+PPl7QH47Z3Nml8BFV\n2h+gkpD3PngXgGG3y+ZgRMezz7JOQpRERGnWGsEKqQCL8QsqCBRIhfIBlRIBlprJbMHMF/wG3R4s\nly3UNYhS3nj7A7QxrQ5DnMREvQ6tSp6uKZuSfOU+o6orqqahsaLN2wfjTQ7p8oMPXCgtjEVpQ88X\ny+rSMM9LTq6nJKnnLSAJtED49mja7TMYb3Ny5nLRuqqwKsUay9zzSNKNMXWt259Pr+bMTMhWz+X1\nLbGoafikGfHGqE/u26PL+YKqXFEXCxZen9Dm14jZHCN9ahamzFY5R49cOjF7dEEvCqmKkuNLXzBb\nzSGsueXt9JSuaIoFZi2caBOwUNQ1HvtDmg6Ynp5SD7yehdAYaZ/oaCjF9WrFx2fn3L7pnJs6SUyo\nFKH/3FoKLq6vsI1l7lPUVZkz6mVUa7VpYzGmQXtuRLnKWVUVhbVov5EHQqKtbR25pK2poj7ylvN0\nHdRzLt77NpWZ0/jWMzKkwVL4FLYoS+4c7qIGbv6HnYxb92+ys7XBzi0nl6/zObPFGYHniEgVE8g5\nTeMOjLd4jldn9zkN91gFvsBo/4rBSz/pCAPF2CPfsiQmDFOElHQHjgWmIgWmptNxO31/Y49IitZ1\nd5kvCUXI9s4uQ+9lqIKUw5t3WK3cKfT48SPy1YqRB0RFE8XOzqavSK+r6pJ5UXDoQSJJkhAEish7\nPAQyRGGRtmC+dC/eoqrItaJs3AJT2ZCNjQwpJV0PKmq0RgYBua/uVXVNVdXk/gUqq5LK26nXnjtw\n54vPcW/zkD9+zcubW4FB4vlGhJGltJqrombgi1ZUlkAFZH7jSKyhk0bcueu8GD8+OeO9o2MiYHe0\n7efWspjPOJ26E/3jRY7cfqbFBmhTYo2z82ul4rAMsg6XPmopy5ysM6Q2itjnuVVVsqgrFr6G82CS\n8+D9h+S+qBivLEk/YJh1uKrdd0fVijd/+D2OTtym8PzdW+xEDUq6F6hG0diAsm6ovDRZPw6xieTC\nU72VjAhlTrkmKVGzNBXHVxPypfef7GbosMF4zouSCWEQM5teI62bu0F/mzBKaXyU2GhNYxpK7zpd\nFQ0LK8itwPrv0kLQGAjXW6mwQN0SpILxbeiOWa7OWJXuINKxE5I594fM9WJBf9DjFe9rsbW3zc7u\nFjs7W63npk0CpE5ovAeqJGUlFbmvnD4WGzxOb1LJqMXcSH6szlE7PhObgpSSdK1IHAYo5SzKUv9S\ndTfG6GLZwmzfeuOHJHFA31tvDfobKBR1AauZm9wwXREEsO3NPrENzWpF6At1RjcYY9HY1pQFIfng\nw6M2gi/KgmbZtLTcstLYpmZnGLO96R7qcLHESSS6FyTrdBj0emhjiMM1W9FZrc39ySqFRjelo1gD\neVnSaEPVNOBVoL741a8zEwkjXyi11hFthFwv/pC6MlRGsPJEpXFoEKGl9AuhnCzpNYowdj/vjIb0\nY4Woa3Iv5jCZXyPLmkXhC5wmoDfepC03WechWddPNgUhBDujHtOFB/9QMOyk6NqivRFNQ4wIulxO\nnDz7669/n7OHZzw7dhFhsZrw1nSOtZIDvwlvdLs8Ojvn+tqFzhujTTYGm220UjWNt2gPibw8+8Hh\ngHs793jtTxzC0RgNn2gzS1zUcHI5Y7pcA5wMGMvcb4T2qqJaTQmrxhUcgYKcIs1JvVeESAMqY8h9\nsXjVGJaNYVFUreqWlQ75uV5ArcTgOpLobhLt3GR5/C65p6qbsUvfrucuUvv4bAp1gJRuDsIoQWhL\naBWZhzHbUNMgafwmoWQJVcCFcYfmo2BALRUC28LiPxnl/bjxtND4dDwdT8ePjM9GpCAEkYcnC8Dq\nGm0h8ZHAreef583rc4zXI3jzO9/FCrhx20GW085H9AZDjG6FnSnLFSePL7AeoHLj5hZbG336A7fb\nlnkBSlI1NeVae9Aovvv6D/ngyJ06SqkfUYg2wvWIT6aa86k7UfY3DVUzAe1OLl1qbLEiUAELX8hy\nQq01hc9Hozik3++u7SUoyorGwGxZ8MIXvwbAxt4NHnz/Haae6AN9d/Ss7dyKinJV009C8nWIKwSh\npHU5ujqbcPTOEWNPNkvSHtQ1VZHzkU9dTDcgSzLOfShaRl1GSbYOlrAojNG+pkD7r1VVEPqo4Ob2\nEFnnWN3gD0B6YQcYMjv6EIBRoth//j5fed5xHzY6Med5DTpmf+z1A0XJR4/e4a2PPI9hniPClMpP\nVKMNWtcYaoS/mO2Nu3TUPTCu9mKMq32s//9QOKDY2bTgwYkjFN3e2SQKhDOfBaKJRq+W1Iucxq8F\nE0hmlyu4cs916+4BtTTkXs15WjecTGdUVrTR2yemx/3HGUGs/5Um6JHdeYn5wz9huvCq0FozMFB6\nfY7louT08TmXHo/y5ltHSAz725u88gWXBo4PxmzuDOl6p+q6KamKmHe0g5hfpJvYVmvbT6345E9/\n/vhMbArO3ckPY7FWo61twRkvfeVLvP36n9H3XPzd4R7vvv8BgSevdEYjgm6HYlmwmnpQyOWKkC7P\nvuC6EVnf0k0DZ+kEiEDSGEPdVK2wxrTIefvdB86XErcJaKMJzNozMSTJYn7u6z/Ds9uuBlLkx/S7\nIbNLn7YQo6Xzt5T+sUjd0JgS/w4xHA5BClaec2GsYFWUdAdDvvqLf91dy7Lkz771Kou5+1xrewgp\nCfzDTdKA1WrF+dWUri+YDeOKdBwS+x745nBIriV936OOwgxsyQpN14N7mjRhWjd84EPp7MYBVgWt\nwpO1Dv35STIUwDyv8C19tjfH3NzfIhcVua+JBEGDrhqU1zp+7vY2W9t3yDJfZylmbMQBcZSQ9j2Y\nq7vF5/YTor67xwcfP2a6XCGF33AtlGVFXRtmHs1n44Cz+aR9IaV0rFvjkaFKSIR14f6rbzsg2P0b\nO9w6GLN76GpWJAW6jjBF1W4Kha4RdULY80ImylCsliwK98weX085vrpGE6xhCW2ovn4bhXyiUg7Q\niBi1cUhhMyYzV/w9ny8Y9Dok/hkeDLsMGkVy0yE29w/2SLKYTpaQJO6LSlOznF2RRN4Va2U5msJb\nyr0fWnSRVjhTbP/dnz55+IxsCkALOdXa7fTW2rYdtHvzBnt3n+HyfUc13hn2ePHe862E1YffeQeQ\nbGxt88yzTrBj47lt4jRonZCWxTlWN1RrdWQEjdXUxiL8v52dXnJ9eY70RTYpnUr0J5Wb/9av/S3+\nwX/69zl+4E6zP/yd/ws5X7X06lpUNEgkAcKj+4yoCYQg850PGQiWqxUrn78aXTBfTHjl5/89OiOX\nXz/4wTt8/3uvPxELIXR1Bw9EGioYjLs8Pr/k0cRtAnGkSGPJOPNLIVTIXsxi7hZ6L7aIOGS6gMbr\n+dWm5tF8wbVnAw6THqGVWA/VxcuW6094JmItldWEawPduiCNLbPJNb5jxzLQrJZ5G7n1Oj0iFfDw\n6AEA5WKJaSydJGOrcMXH7f27ZFlIb+iLxScXXFxPyRK32I2NKOqASgsePvZGttfHrJaX7SamEGAl\nxi9tIQTYCiMkH5+6PP07737E1lafYeL1MDcks6uKVblodflVGhAFadtebLCUZc2FP3TePbpkUTtW\n5Frk3TWUBWptKShBGoPxaEJhIVjmzMoVFx7dOrjK6Xdydr1ASieNKaIFSrgCebE4JbIdgmDQFt63\nd3pMigVLX4eoy4CHk4K3j74FQPfrLxGGMUZqmtYQ99MjGp/WFJ6Op+Pp+JEh/k2qkn9ZYzDo269/\n/WvtzxLv/Wi8M6/QdKKQNbtaAIgnTs9lo6kaDVK1uWSqDN3xgP07zofwr/3Sr3Dv2Z9ChWsqrOFq\nOmHYHdHzjsWLxZLVKudnf9rRe3c2N8iikMAfd1JCPl9gG90q594eD/jK/edaebBvvPkmpVFUdU2n\ns+4RG0bdTot/WOY5g9EY6fOJRyenUJfc3Blz64aLFMJQIaRtVa4PP//v89Z3/zXXZx+6e64NJ5dz\nloWm9Jh+U2tCbKt+bBAkWda6TE0mkza3XNOek05AhGHsfSCSqGY8SBh68tbe9oBbu0PGO7fo7bmc\nVnTvEL/wN7HtKSTAahoExvgefVWyOjvh6Ju/5777zd+jmE85ufCn28plvbo2iDUuxApXt/FtzKKp\nyUXE3b/xKwD83G/8feJOHyVs6+tgrUUIwd+850lTa3q3fHKfUoJUT8L7NIqJwgDVNguhLEqSOG6N\ndYw2hFFC7dvVea2ZzgtqX3sZDXvs720irW7nwc2tYp0M/+E/+w1+93cf8L/81h+5574KuJrPXD3G\nX8tmv083TZ5oMFhB1um22Iyr6ymrqkYbQ77ysnpNjcC5kblr1WhLKx03z3P6seRwf5uXvdTdxrjP\nP/yff/tVa+2X+THjM5I+iNatR0pJICUhlsjf5LgbM8hiArFuiUln88VasLShqjVBFLfgn6wTMdza\nZP+OA3zQ1JweP2qt3ZernChNEBpOHjsZyevra5b50rEWcSYuYZqQxO7nThoRNDWhlWx6ZOSXnr3L\n4cEWqc89Ty+ueO98glVhWzzt9jrEIWSRSx/K4ZC8qYmVd05OMi6WS84mc3a2HWglijqO7efveWdn\nm28tc84XHgzUCIpKsVoV1No7ECUxaRJTrR2hLFhdoXxxJpaWpqkxVmL8d+fLnEYYlFeA0R1FlkJe\neFesSU6jDRezgC3/Qrz45UOssO3LIHFZjjUWPXO1iYevf4sPv/l7xEvXkuyGEhsqhh7bUFuLzpf0\n4oDEsySNFZSWFuRVNJKkajj/piNRvZn12f/859m+/yyBl5d3oiZPNokwUFgrWjerMAxQgQAMsf+l\nfhgSRwHBGjyqJCaKwZiW2SqFQJsGDz8hjQN0rZivZZid4y5BGLbq39Y6s9z1pvDg7UtWi4rcq32V\ndYww9kdcy5RUBEGE8bwFXZdIXTPouTnRhUI0BTKO8Obi1KWlk8RknqyldUNtBFde57EpXBrTNJqz\nUzf/a1WmTzN+Ut+HIfC/Ai/hEs7/DHgb+D+B28CHwH9krf2xPthrRqE1bkcPJQz9i7cz6pFFingN\nUhMWbWk1+q1uEGHExvYOsYf0RlmMUCA9g215dcrkakLui3tBFJN2OlxfnjH3wJHpZMJqtWqLalVZ\noJOIrp/QcSejpzWJlBxsOPzAM/efpTfo0hu5fO8ry4LqjbeoDET+Ifa6MTKK2PDIyWWlWdqQxncA\n5rMZ10IyW5XMvUjscNgjUKLFMjw6Pub8fNqCpIRVVE0OEg5H7vpeefE+vV6fU19VP7uesVgU63IN\nsptSNiW1Npi1n4ERSKt8fx0g4nLacHLu3bliyXAzZH9LoLqu4Pf2W9/juXu/3n6uEIIKQXV9zXd/\n558C8P43fxe7PGPUd89D9jM64f/H3pvFWpald16/Nezh7DOfe2/cGzfmyHmoLJftcnluY7ehGwGN\nxCDUEoJW89qNeIJHHnhBQmr1Cwgh1LJaSA3dsqBFC9MtY7C78FCusqvKVZWVGZkZ842445n3uNbi\nYa29b2ZR6ko7kUlLsaSQ4kbcc84+e/jWN/yHFBN6Is22ZHeYcmWU0A/yd5WVrPOaRZAvWxvNtknY\nhKD34T/9X/jgD36L1371r/L2v/Qv+88ejNHOdZmBjjRVVV9mlc7STwYkNIwDCO3KaMh0MiYJWIck\nikm0AmNw4dpn/YzlZk0TGI9n6w19ueYJ/vjXtvHMyzRChsxMAOZjLb2v/vYzfv8Pv81ZaOImyYRB\n0qMfRZ2UPFoRpwm7YdKWaukxNeE4ru+MiK7ukvR6bIIQC8YQS+mPGRDS0DjJux96tKitG3RPE0Ux\nqyBltwj9h0+zPmtP4e8Cv+Gcex34It4p6j8DftM59wrwm+HnF+vFerH+gqzP4vswBn4R+A8Bgl9k\nJYT4a8AvhV/7Nbx243/6qd83iL3HWpIGR59ES/8nhH+FwSIwtBE6Ju0PeP2N10lCbXyxXFLUOctV\nyzF/Rm4kruUoJCmL1YLaGDYhU8jzgrqu6QdhkKyXkkSKcZgaDJMYNZsQOcdLwXNivOsl4JIg7vLG\nm69R2oZnF3Ns63SUJgihGQXiUhwbqlWFCzVhGml6Ucyi3PL81E9UbhzuoaSvUQEePX6MdRIXdvi6\naTDWMJsO+cUvex2+N25eI00y6kAWWuYNj54+ZxN0K58dP2dbbgABQaLeNCVZqpkF5N7OeMD5ZsO9\nB8FcpVHowtFYQR1m6flmixWim8pY6xBFybu/+1u8+3v/u3/fizm2EUShJu/LgrFWjAIR6PD2FQ6v\njOlriwzd+7yE7bamH5CHi9qwriENs0+XF2wXJ3zzf/11loFS/lP/xr+D6Gckqd/1m8Z4kfVW3U8r\nMmG5MRnyxbu+lHzr5btMZ1P6WSvPJrz+Yr6lCtmbEpK6atiG3fl0sWISHbMO4icX64rVasNwkHXl\npkAg1aWR8NFRzXLhdRgAnCoZZCmxiDif+4nLZrlgFiv2Dnymeff2VdI0Jg54dm/mmzEcDaiCUW1V\nlrjGmx8B1K7m5GxBEcxiikaxarb0+wOaUO6cz3228mnWZykf7gAnwN8TQnwRbyb7HwP7zrmj8DvP\ngP0f/VYO4dqxjgBrEVYSh/m6FoGJ1/62cx6c0aaMSiGVoizLTqyidtC4mNatvqo2NNZ0UOm8KkHI\nwBAMRq9VjjGGaSBiDdOIREts3TY8e6hIsTMacfUwOO/ECTpO0UF5ejdOebPKUR98yDaIxOS1odgU\nbEOQaIyhmJ+xKPzNn6U9IqXQUnE+Dya6RcUgTTtV4u987/tcLFa4wC0oKoPWgrdfucUrNzxoZRRH\n9NIElfrG6cFexuH+IUXQbXjy5CHzxQVJlJDoUGZFDq0bBlnrZ9DjdL1hHRic7z86Q2w0RdlBPNid\nzahq25UPylSc/snXKe79IYepP/5jV5IXjiZ4W8goZnd3xvU3bgMwmaZE0iFMhQmcEIFAGYUJ1n51\nU1NjqMNoN3aGxgnU/Jyv/+P/GYCkP+LLf/VfRYUNwxiDEJdj5FQJrg1TfvKVO/zKz3g94esHV0jT\ntOtjCSloMFQhMAA0RYUrG/LKB4XNdss4Ujw59pXww+WG1SqnmtX0AohICtk1PgHO5jn5VuBCALZN\nzWZ5ho4isnBednsDvvzqdX7mS0FT4mCMjiN04GU4ZzHGa3bYxgexuq6p6rq7b1dVgZaKvPLf5+h8\nQ7ExOKmogh/JtujoeD9yfZagoIEfB/6Wc+73hRB/lx8oFZxzTrSdsh9YH3eIStMEEYQ2hZT+5pAy\n2JV5pRwp6Ope6ZzfhcNb93o94jRls9l0XdvFJqcoLE623ou+yVaGXac2Bhf2KBOiqbEGY033ubap\nMU5QbUJ3fDpmOOhzcPVKh72XKiJKM5KgAhUNJ+xLxclixfH7XnFn01iWqw3PQ3DpJRrhmk64NUkM\nWZKyKssu2i9XGw5mPXS4RE5Yirru3IjjXsYw7vHKjauMAzEsVgKlBL3gBt2fzJggaQJ4YHfYA9Og\ntEIERy6J8fJhoXZOtEHpUw5mfud696MzyloDaaeQXOVbNmtDElyz188+4Pib/weHdsmXAwX+ePeE\n05MLRqEvdOP6hKvjIcMw/cFVmNrgTIRtW4umRmpBEmjdsaoQNB23ACcp8waBw648+Oerv/4/Mp0O\nka0jc6RQWtL6fN3aGfKzX3yDX/2Zn+PWjVvhfMef4AJIpdAYIpWRJkGZq2potgWqjMN9GfHSdcVP\nLP3D/K2TBYtNQ1GUTPs+y4qkd7Nug03ZWFabnL293fD1tuykiv2+YjdQpd9+7S7vvP4a+zO/EaW9\nGKc1LmR7WimPE6kbCOpetRTkElSYihW1JdWCQejN9NMYVUZs8oJNEP9pHas/zfosQeEx8Ng59/vh\n53+EDwrPhRBXnXNHQoirwPEPe/EnHKJGI9fST2XI/GIlSHSbltlPQLKcE59AQdqmwRrDZr3pSoqs\nN+D04oyiCWSmsqCxdWesWjfG6zTyA7Av4emrAMpWAXESgCVxTCQkw16/61IrrVFxQtwPqj46wYmI\nG3dWfPgwULuPH2HQLENafD6vyGLdjc+WqxVxlqHWkiI0mJarEqkUKnzxOEnCcQb4bqy5sjtkZzTo\nutKe6S3R4YHX2tODTUjhs8nIjyxx1GGkqqRE2Ia6bDvkG3pJwp0bHlH3rXtHXCzWPHl+weGBv/kX\niwVmviXa+gfz4f/9G0w2xySmZn/qz9Xhboqor5AEI9U4S9HQaSfWlULqBmEFdStLZxyiMt31UFLi\nhKBuWuk7g5L+IXZhE1k9fcL/9vd/jShMepIoAdswC6OFt+/e4C995cvcuf0Svb4PdEL56USLN9Ta\nN1orl2NNC0+scNrgyraxK0hjza19TzraG2ZcrJesVhX7u+FcxjFJFKHbDMQJVKK7EuTm7oSffv02\nd3Z67A398V65MmE2HdAL5Y/SCU7qbjMTUvrvi4DQnBTWohDdFMMag7UNSQBjDYcJab4lbxy2vV/C\nPfFp1mdxiHoGPBJCtNrRvwJ8F/jHeGcoeOEQ9WK9WH/h1mfFKfwt4H8QQsTAh8DfwAea/0kI8TeB\nB8C/+6PexLVbNICzaCHJYk2qW5qwLynacqFVeeZj4BOlFNPJmDjwIwbTKzw6PmW+CrqOBpy7FApx\nrqWT/r+rm3WrwU9DohVp7EuDWGvqoiSW0SWU1TmQEhGAVEJrev0B+1ev86UvfBGA5dkpRxdrmrBL\nrrcl283Wg36A5XZLKrw/iQ29leWyACHRAXZbVQUqUp2C8mwy4nB/jyxNOxaYkCCFw4VSoMrXqEig\nQvotcV4PQogOgo01CGswLtCKTY2UgmvBiPfu7Wv8yfc+pBaKZeuaXdSs791DbTwJKTXnjLOYgYQ4\n0LSTWKHrCBdqfS01ornUoEQJTOPHy61BhlCAtF0pIKRXhlJh9OaoEMKRxkm3GzfrkrOP7l8S6pzP\n6G6HxulX3n6D64f7pP0MGbIWT5iyXRZGuAuEEKG5671FhHQd18QrNVUMAh1+fzzkvWeejt2OkdNe\nD0QQ5wGofMmXh3p+Mki4dX3GtVHEMKCXYqVxiK4BbqUGcQmAos1kley0HyFgE0J2Z43PpKMgQtQb\nJGTLFFtZqnC/7AYjpU+zPlNQcM79MfDDEFK/8qd5HwGdeUciHaMkZjpI6IW5spJ0wqKXn00Hninr\nGrNe0Rtk3Xkrt3P2ZiMeB9WhxgoEl0Yv1tkg63XJNXfWIaVEhpvFlhVZb8jt697RuDENg37fS7SF\n94la8lT42VlD4wyxTrh73U8otl9c8htf/efY0DGHhk1dIUONaBGs1luckN1taq31zlm6nViEc9W5\nWQn6PS8CI8OD5wFFBgISVKKgcQjXBjCLk36WrwK3wTrrZ/GhPyCxxFp0wJjdnRnZ4JgoiTqV6zgZ\n8Fv/8O9zzUM1+OlXU3rOocoGGYRNtdRI12BD0xBpcY2BEBid9doUaH15aUOfqAnlTiPxKMl2yiEl\nVVVjmqpL/YVpqLcNWS+AjuqaK1nKF+/48ufVm9dI0xShxMcIi+ITjWtrre9liW5wgHMglEYFOzcd\nxSAUSXh40yjCCqidYRk2nsmwTxbpS0aiWGObojPdjZQh6wGi9A8/fhMwdYMJTUMhYoRs2RQeqIf1\nB2a7Dc3L7bdoV+dcQKi25VAEIqKq80sUZ/LpmwqfG0RjC/scRIqdYcKkn9B+DycFKN2p5nqylOsC\nhaU9uTlly93FMMxGAc0GRW4Qrv7EiWz/fPJIvG8iQCQEhzu77Ac1p0cPHnR+A5dBwGFa3UBAC0FV\nVpiq6Vicr736FkVt+b9+57cAeN4sqISkCOhKh6JqvIxYe6sqpXDOMzMBptMBx8+PuqCWb1Y0dYlz\noOJw40qJFFEnBxYJgXAGHbICoZx/6GxNFG5uoQRORt2+pI3BOrppkMKR9QeoWFO1uoLZmPP3/gm3\n37ntX2MP2Gy3PhMID0Tj/C4rwtjVCf8Yt2M0U5U4KZCxIgoorxKLExYTjtcoS+3cpRy9dTQIKtdQ\ntyZ8yk+m2ntFN4ZbsyFfettXtZPdXYgynIg6hWekhwQL284KA5JWa+rwYDlA6ogoTJV0kiJ11Nkb\nSq08C9ZYtmGkXZYlVaSJQ6bw6tspF8WYxTxI1JkSJa0PPqK9l/Hv0yZuTeMfft32fCIv3hIa5UAn\neCM/tlF+/F6uqorjsyXbsqYfpPqST8+HekGIerFerBfrk+tzkSkIIAr9gjQSjHsxveiSp47UOKUv\nZa+MwTaGJmj9l1WJlIYyX3Zaj8OZIS+qji9hTQ22/rhGVqgj6XYzqTRKafqhL5HUJbeuHXZ1Zm0a\nssEQhKIMslwqg8jQEWliqWiEokRgQiTvj6f85Jd+nFHoMP/BH3+De0+OeHruASWrusEKR9PYLn9V\nsaSoKqbCz6Z/+hd+kcdPH7MMoBdjGlxTo7VGh0whjVKEiyAQpJSLiaMYFaDeCOuNb4TDBe6D1AkY\ncMbv4FHsd2rR+mtaMMaRbwvKIkwSkoxU1YzCfH67yTHbisg5TCtamqTo2HUwbak0cZpg66BwbRtQ\nGqljqFv/BQ3Yrj+DrGmcpbGtsUtDbWFT1lRtmq+lz9bCrt9Xitdu3uTgisduREkfIRMgAtXe7oZI\naExziY/w/BuNCu5gxloctvNacEJD3MNEwS067SHxnf86oJNWqxWDNO1G3P/av/4Oq03Fu9/2sB0t\nNZp2ZBkyNR3hBJfbsxQopTsxWCcEQsjQ7wjbvfDXvQq6lFJ5rEU7Cu0lMednF5RY9meHNhKzAAAg\nAElEQVQeJtSL/8KVD85LcwNZT9JPI19Li7bjpDDOUoZ5e13klNuCKoBy6rom0gJXx/TCHN+piOer\nE4o83D1WIi1dei6E8n8i0TEnVRQjVcQg9Q/iII3Zv7LLOqgur/Ocjx4+JFZxR8hJBkMG/RGzUFfO\nruyjra/VW0yBMQ1OSO7c8S7T0+mE6Te/wVe//k0ADtI+Isl4dHLKfOV5C9s653ydc7DrCVKvvfYW\nw2xIHpBpsYiYDEdEUYILN0vZSIqiog5koG1pGPd79PqtVqREobCYDvWoZYpFoMKIUsuIWglauWQl\nI/JtSdlUbKYe8JSMplRV06kKbfMcu9nSl5r27tZxgikvUZulMZjGsS3b9FxTF4a8yLEB5FWZlKWB\n80C8yl0MiaMJ7MDaGorKsilr6ubSpEUYSxlS6+FwzCu37rAz9g2PVGissdTWYIOGQb5e0JRlN9ZM\nk5RYRb4kbYtwLaExnbP22XLFRw+f8eCptwyYz9coJTA4yjAyXa23DLMtcQhqGTVjHFkYrffSHlgf\nEJqATC2tCKVnGB1KT+IS7vLeVyrGmgYRNDsUjhqLC89DnEbIKsaG8zTq9Rj2U5pi3fGHUvUXzCFK\nCEhD7TwaDEjTGCFdN22wzngJ8QDzNMYhtUIHsVShIrKepp8lqMC425ntc7w6woXZrlIxUtNFUyUj\nlIqQkex2WqVjhFTMgsvRrd0Jw8G42y2uXbvB7Zt3yAbDzm+yyHMePX3Kn7zrVZenkxkv3brDbDol\nTfz7VlXJdrPk7MQ3Pe89eMDz+ZqboYH51s1XqIXkn7//Hb72XQ9zPptvOD1fU1z3N/9I1GhjEaFB\nNer3uLK7h7Fw74P7ADw7vuD4/IJtgDVP+gPeee01boRJQi+J6SURdVOxbZmUdk5tLSYoFe3sjLh6\ndcoqPJijQYKUDdY1DIKV2WC6S0pDEQJY3YuJ45iyKLsh0mq55fTpGc8CbHu9LhhGEZMAIU+1QAGb\nTcE2YAMeXKx5enzOOuj0J/0BqtewCb2M2lnqpqbMc+rQG5I6RiGIQlA46Pe5urNHlLRqTY7VesX6\nbMHZqWcMHj1+xHy9pCp8INe2YRhn7B/s8/qbb/hzN52wWef80Xf8df3at75L3kiuhmt266UBf/jh\nE8rGowvB975Oz89IQwH/7d874s7+FzjcfRbOv6aqK+Z104m5FidzTudLksRnpy/dvsX1g6voyJ8n\nnCSKvAL4NniaXizmXMzn1CHI2aYgryxliwxVEQdXdqifldy5Fjw30xciKy/Wi/Vi/RnX5yNTgA7R\nNRn10VoCXqsRoK4NtmnQbR2mFJWDJjgJWWdBRgipaenuAk0U9YhDDSh1itQCGepKJTVKRSgdodoZ\nt9I4IXk5GNO8fHgFKSSjyU44thlp0qMWgqMw6lxdLHAYpkF70K3WnD99SIpFBjOYsip5/uwJ9x8G\n3YaiYSNilqH8+ep3vsN0MiVRUbeDbArD0cmCTRAKlR/+IVNZ8iTyu8HO7oCdWZ/tas6TZ75mdTJh\nvLNDEyTS37//gPnZGe+87kejb73xOjoacHJ6wgcPvBPS8ckSJyVVSEX7wwE/97Nvc3Dos4trV/e4\nMpuw2W65fcWj+a71E6TSnUNXPxlSVRXJUHYGrEdPT3h07zlHp4Fstm2IRc2NfY/83Bkm9HsZ37v/\njPvn/jo+vpgjdcRw4ksmKR2DJO0IRRbvp6ikwuQtll8hLIwDmu/6eMgoy7rzaKyhNobd/StM9vx3\nEv0x5cOHTJ2HAMfVmkTGxFkfHfwmVZJxvnjIt+/78/QoN0TpiNNw3grj4cdCXKIGjbM0TnS8kSdP\n4M71jNfvep7MMFVYYzhdzJnu+mPJJjMy+lwsfXb3wYMjmrJkZyc4qscpprYUVc2Tc39dHzw94vj8\nvBMZGg9S8rwK8vfQH07Zm47AlOxPPIqzFGFa8ynW5yMoCMFO0CwY9nooaXHOdXoJZVlSlQ1F0ZI7\nGmorOxZiP9MIITHWdTz0s/MLrh5cIz/xNXiBREYCqS6x7FIolNKdSIZ1Hn8wGwZWZC9FCdFZrEVS\n8fT4hO89fMB3H3vgzqoomY4GvH3rNgBvHh4S25oyX5P1fQqY51uOnj9DhcBRFAuOTs+5dtf3GL73\nvT9heX7MzSv7xKGMWuUlZ/MVJ0EbwXz9t/mZm4fMA1PxtbuHZKmjXleMhv5znp+uWW+qTodyNh6z\nvzdjEoA8g2HKYNTj7ALWG4+ZWG/XqChmN/hj7Mx2WMyXvPLaSwD81Feu8533H3B+ds4XrvjRbHT0\nEYttSRX6DrHocbI445U3b6NC/eway2pdEgV76M16xXDUpx8s+iaThF46IEdz75n/jsNByhfffo2i\n9g/rk+fPaNSAYejxSHGBjiRJHCHz0BvCl5+jkLLvT8ekaYwMIz0dJUxSxb2PPuT//No3APjg2Rk3\nDm/yzi3/nesi5/W3vsDhjZv0Ao/BNg2LTcXpJhjRxH2+8BM/zUff8+9RHJ8H57DLBt+2KBntTFmH\nEeXDky03blZcDSK/NA1RHNPv931PBihMyXprqANpqqwMZ6enqPAQH167yWq14vv3PuJ04YOniGIO\n9m+Qh2iZJgohSzbBVwQEWZpy+9p1doJV3rPVGZ92fS6CQqQkN1tCiPTKNQ5/YQC0iFFpghChhhIV\nqrFdpMzShDTWaGk7dtx2vaQ3PODW9dsAPLw4AxxWBvaZ8HmHUJdoSucMzplOoAMnkNQkQfQyzfqs\nmgHHixXjIKIZpRUHV3aYhch+ttpy+/ohStmueWewRIMxvanPQG7uljSuoU1r3rl1jTf399lUBWlA\nzG3LkrwoeXzkpw37P3ub7fAmr679g7g7HaFdhXIlOjQWr80mZDfGlCF4boo1Nw73mIU6fjoakcYx\ng6zPa694abXD6xXL3BO/ANbLC7I0YROctV599XXeePUqR08SroVpirr/LmVh6YURQNLUZJEmG/ax\nAXajbMXtW7uoIHV3cdwjKiumA99n6aURkTVETkL47BtXZ7x60KcRvr6OoojF6UU3mRoPYsS6pk4j\n1DYQurQmjQTDQEvfv7pDnEaoYKoTJT0oKspiw62bfse+evcVDg5ucXvPZyTbkwMmV28ynO5eAtdE\nxWA45Zd+/i8BsKotWdbn+hfeAmB5dsL79x6yWRlUHLKSpiFNU7ZLn8Usi4qLZckskMsuzk/RUUQ6\n7GNtcKLaucbenmK1Di5fTcE0gwSfOSQ4sI6irri67zPWrNenN9rj+UVgcC5OSXAMZkFh3CnQEfuz\nKXXI3NrN5dOsz0VQSKKIQRZAIcJgnQkUVP//cRzhnEO1UuVJRG2cR3vh7d+1lMRKo1tAhxWsTk45\neMNz6C8aOMvLjjClHCgarKXzhrDWYZ2n34InRkkXofv+4e0lgpdvXKX/q7/Mw2e+aaXiGOWgF0qQ\nbLfPcP8KLl9jA5JQq5TBYMhuMG111nEtjZkfPwUg0hP2ekPuH58Sq5aA46HZz459hK+SHZSxHARl\nqX48RCvY399lZ9e/b1UZmsqyvAjGu6Mx417EMCg+JZEmiTXTUYYK4J8DOfDnMmRDVV2AyEnjgHis\nzxklETdeepVBGPvZYkNVmc5s9dokRekhEQIRzt3VqzvYyrHdhrJklqJcRNZrGZCSamMpypJh5gN1\nFoOWBUnYeQ9HMX036kbGZjymrlds6rqzDLTKQ6EHQYdyd2eCVIoo3Cu93oDeIOJnp7tUYQS5Wlc0\nUkEYw85uXGcymaKVwoTvJHAMhz3eHvhG3Wa7pixydOQ/58T2mA5SHq3W3X3qnMHZhrTX3stwenbB\n3UOfkcxPjknThL3hlCT2m2DtJIm19Hv+GmkXQ7WGur0PHFopBlmPnYH/7PGwR5RKxpm/7sVuipSW\nebDFe74sUNIxmwy5mPuS42L16fUUXjQaX6wX68X6xPpcZApK+l0bwAhPj0I4P5YEcM4LZ7QoVSVR\nFmygQQtnUUKhpO6EQBwSWWxYPvEGIPuHN5mXVTffBknjAl8g/It1AoTqasS8yEkAFdJ8ZR2xUty6\ncYODMOqxjcHkNW18VUmC1FAWvhfiv59EFBUqNKCSXp+oP2B23aezQjTYVYGtKlQLXgritMtQ0y6z\nfTYnD7m541PEXm+Mcxu0TkhDkzaaDaiKhn7iP0fRgKk7rYrtekWsh2RJRBN22iRNsNbTkQFkOiLr\nRUxCKmrKDXtaEF0sKUIzT+8ckNeCe4/9qK2uX2eYgrYlUSi1pBBEUUTLRI6SmP6oR2N8v0CYikJK\nHIJ+OH6NQzrDMPQldBbTs3RCtGIw5HRR4FxFFAQ7G2eo64phyBQiLbDWIcNx6ChDJAnCWNLQGB1E\nBoPFuba/JJBKemVmWvyDJVaObRgjDyNJT1t0uM6FVqTau5S3mWWcRhRlTj9AoQezIUdnp7wcypZ+\n1iMSiiSKGYXehU4SKlvRSkZIW7M6yylaZazaYOuGYX/AJJgj7+/MkCqiDia7dhiRF0WHfZjnjl6s\nSGLFg4deuSCv/nxEVv6/W85BuHEvkecthxAcJiD9AjpOSLSEqmXc4dMs1xhsADw1ShLZgvzUaxpM\npynjKO7IKVbGNCIQTlpAU3j/fttsqmvqsqZzI68NdWPpT/qoEH2qzQrVS5GBOOOEQNQ5xjYdmi9S\nmqgyrI/9BRrdvcNwb48mOA9vNhfUyw15te24DQKQUnUNqezO68SbY3aC8/ZCaUwtKRrQAdkmVEY2\nGCDcIhzbKXW5+ZjuRI0zJqhEh4eXiF6WIEN/RicZxjScH/t6dbqvmUnBw/ffRb7j6+mrr32BpoHH\n5z74fPveE37hZ+6Qxa4zf4l0ik5iROiR2FWFosIFdKUkoqkLjLHoUB5oGZGoiLiN2xa2OGQ4j9pa\nYqUxoevvXyPY5qVni+JZok3TYJpWa8ARSY1yYHVwadagjfUIUkJrRwj/YLYlkqnIYsU8BHYhUoSM\nOgBdWVka0yCE61Sf4khTlgXjgHNpNMzzLc/OfQkYx5EHslmLCbiKOIlJApIWoNyU2LruELI4P0fR\nSncYlShOiOMEHW7/qqgorMMF+8CqsqSxpqoKlmuPxZDq0z/qn4+gAB28Vxsw+J6CbKWwjWeItZRp\nhVdztiGQKOdwVuKw6ECAkqJBUhDV/jWr81N0/+CSMYjEigbtPkZTbXsYoTFnm5RqtaEOF7DKN0gd\nYTZbktBAi+K+pzuH95VRRFWXyODBCBCHjvMmoOOU8OAdbAgkUYyR0t+QLaVZOD/5CMEnvnqd+NGU\nKgBYaGrqRlPVcedBofMaqUxH4lk821AslwzDWKrIK8xQ+GMNx7LNC4bXbyHCVMDJiPVmgQ3W5ZPG\nYmTEdjvnyu51AMqdl0iaiiLYuf3hdx/x8z/xEkLb0LgFqSVSxt2uuTw74Xx+RjYO4KU4JXY1sZAU\nAVJ9vlij3H73nWtjaSooAiinbCxl2WCcoaURSulVmFu/T+EcpimpG/8wVIVCRwIdZZ2fhDWeedm+\nRgnPPJS4DiVrqpJUpWQBpBbrCOnAGB8Iq7qmFg1Wyi5jxfrPz0NGKJzA4nj/Iz/GfPnaHtsip7F9\nhAyeldKidA8RUoW6rHywCShVpWLiROBWW/LQQK6MINExWrbnqcFJ2IaAdbFaUFeGh0dPWQYgW5L5\nzeTTrBc9hRfrxXqxPrE+J5mCw3FZ8zhfPUCbKTiHcCDtZUSWjm5HcUJirUFISR14CnVZUkiB1qHL\nu/G6dogAabYK5SRC2k4AtuXBz4MC9O5kRrlc0wRTUaskRm8xdU5v7OGuKkrYPD/BFkFpt9hSFgVN\nXXU0bal6ZLMxi6fh2PIcF8WepAWIqiauHBmRH9ER3JIVHfWbXp905wBbeNjw1vhJnsVhQkZSlxuE\nKcmDSMzjhw+YTiYEXAzbuiAZ+G52EyDiz4+f0aiEay/dAaCsKsq6ppNSdI4Ky/4X36Z3zU9yGh17\nPYTwufN1yapoSFPdkYEaW2HymioIsxw9PmG1XnF35K+HdQ6hBP00JSi4sc1zPnx8xuvXA8jI1hhr\nmAedwZNNxXq7wTZNN3qWCJI4oTZtCahpmhpjWghwRVOXpFHvkmrvJFLEHeelaSqcrWnsJbnJWUc6\nGDC75icH5yfHCCeQQXciL3PKpiLWdLR5Yy1RHF/2Z0RMnPQ5DePAnVGfcRax2mzphXJHRJm/d8N5\nq2ovONyWEyrtI5oSI2LyUMYenV5QG9u5fhdlwyavuJj76z5fblmslpxdnEMrwyY+/f7/OQkKdOhF\n8GnXx/16pfBsu84J2TgfONobI4hbbvMt1Sbw9aVCTPaIewGgEk3JTYy0l2NMIZRXferEKzwn/UkY\nA+7ProC+VHumihB1BfmWZu1HPEanFMsl65V/WB2OpimJhOtYnVJA3IspK39sF2dnuKpChrq4yddU\n24K8MpcNJynQGrLAbrPpgP61u6yOvLGtyEtc4xBaYDunrJqmKFic+3HpcLJDISLee9ebug6HI842\nNcN+n2rjb9R+3OP+gyf0d2fhXMY4a4nCAyOA2c4M/fKbVDu+uWqU9kK64RotthUXecNsmtJUQYDX\nGOzWcH7q0/hnz8+YzaZU29YJybLIK+ZFyTxcs01T8vvvPWE08viBiXI01rAJo8R5XlHUlRciolXy\n1mTjHusizPlFDM5QhZ+rOEFFPZQuOpahbBpwpuMO5GXhdTZ1dOmKXRbESiCiFlS0RdWGKjiUPzq7\nYF5VSCmD+a5HNDopUIEIt1jkWBd3tn73j07YnQ5Y5luyvO1BJcTa0dVDSrHaNpjA2bF6w/PFhicn\nF50kvUFiTEMWt0Q4w8VqxTw4cedlwfHpCY0VnoTFxzXKfvT6rA5R/wnwH+E7gN/Gy7FdBf4BsIOX\nff/3gyfEj1itOSDdw9JOH4QT/mFrEwXnhVdlID9pHXk6tXXoMMfv7d+ime5TlsGmTKVIpzvBEYTB\nKOkp1K1gSggOz078bLd+2SC16sg3jbW4sqKZz1nk7wJgjGCdF4jQh+iNBpTFhrrYslr4QJGs12yq\nS1aeihVGWPK1j+zVesVms+HpZsmmFf5QkmEa8VKQN3JxQn//OssLD5U2RQnSIbXo/DOttegoZv+q\n73YXVrNp4KVAtpHSTzQqBNnIz7hTDSrVbDYB8pv4gKuj1rXZH068t49NJ+E8SbRoNZZgvsk5nq95\n7c4VzMZ/Z4qKzUXNs+f+58bAbDikCbP0k23BB8/Pee/omIdz/6DpRLNqJN976n05f/z6HhbIWw/O\nusbipwWtRnikFVppTgINvaq9ulYdAnCZb72YLopeq2Bd154UFjKqKOsDkrKsOoGd7XqFqwtOTjyE\nvNqsqedrVqG/8fXvP2DRePm0TrBcCq/oFc5Lvq2D2pX/3HW5pTCO2jryEFxinSOshdAfKGtDNhxS\ndFnBOc8u1sTZABUe8MoJqsYRhb5E2ZSUTY5tKfLSUFuD0n2UbsF6nezUj1x/5p6CEOIa8LeBn3TO\nvY0niP97wH8J/B3n3MvABfA3/6yf8WK9WC/Wn//6rOWDBnpCiBrIgCPgl4G/Hv7/14D/HPhv/sVv\nczl2cjg0AoTohCaMwyMRW1FN651+o5bHgMZIhdMlsx1fs772Uz/JB+cND5+tugO1/pfD51hkENJw\nH+tdADyd+91tZSqPtmsuNQMLa2m2G0zQT9g6yA4OGLfCmLVhMt2hqvqsQn/j4uI5tYArgVBkraFs\nDIEhTFFXnLiK+/MlJugrahVx5+qEf+vf/CsAJMIQDcZM7/4YAOt3/xjbnCCdQ4ZU07mKykEdXA/K\nxqKs6xyls6yHEBKlxKXwCg4nh51fhvNqqcgA3bUqYiP61NsIGXQQrfD0XN1qDwjHh09O+dIrd8jC\nVKPY5jw9rzk69+fypdv76MhCGH0O1YDRuuDG1Svk1pdrWkCN4TjwVU7HU+raUgUxnaIpqVFYKaiN\n/7eIiGKdc1b61PlsvWJ/b9oip3Gmot4ucbbGtXRkYyjyZSejnmY7oBVRZVt9GralIi8a/2UBVzlO\nTs64F6jg33h4BAgSCUWbBztBWdYQ0nwX2P8qnNumVOR5jcN2JWldlziMfx2+p+CISENWIJQmHWSU\ndc02yPdVVrIsG/qBHh5FCqQmasfiZoEREVGSdudBtl/sU6w/c1Bwzj0RQvxXwEMgB/4pvlyYu1bE\nwHtDXPuU7+gPSKkufWlNZz3x6RLWbJ1BKX3ZyHOWMNlnHZqE733/Hutoh09iEC4NZHAWZzxSv639\nrfOquGVoGhZFwd7OmLhtaCpFYS22qciD/oDsD0iBIjSTtHOQpuhBj2FoUvW2PcpnS47vPQQgbwyT\nwwN2AmtvnOxzVFYczy86EZhESe7evsUv/OV/BYC1VigpGM/8a56nffL5KQLRlT0WR2NqqgDSOT86\np1hsqINh63A4ZGe2Q1mVNIEvMd0bM9wZXvYQtEAjkWEURzJieOsObrhP1Y39DDqNIQSW8WzId+/d\nZxQpfuXH/dgyjjVWlwxmQZhl2ufpdo2Wba/CMZik3BY7nfbmoqxZble05JNlsSXRiiac/6JuqK2i\nbgSLwC+Ym4KmsJwrXwp8+Og5b9y40fXXlHBYU1EXl72jsqyInWQ69gQvYRTldk1TNd35T2tFTEbQ\nLcHIiOTwkG9+530AzsoCnSWkWrENWAZrvSNTHbAlXtZLIlRr6KNYrHOqekQp/e9sigJVabYBpJbE\nGXGkSUTrYxFhY8nabjt1qbws2NRbsiTwhdKI2gqacB63RYnSMVEc00LzWk3RT7M+i5fkFPhrePu4\nOfAPgb/yp3h95xC1O8p+8P/AuUuRVf+vn5DaLcoC1Xoxxg6pE5I4oxd6CnllyU2NDbN054wXxGzf\nQzgchsbKLigY4+vBtq68OL/g+mxKFPoFUgkipRAOsjBbX5+tuPfdb6ACd0M4w5geSdRj0CIj56d8\nuDxnEdBxvdmIt77yE0yv+KDx7Nlzni1WLDYbVABf9WLN1cOrTK96JmWee/ScbKXjdERjvIpvGyyd\nUBhrMcGJ6vToiM1Z3qqdsVpuOTudg3HUW/87x7Met9+4wc2Rf5hVpH3TJjy8JprC4BpGxB2YTAiB\niC4/tyor8tzxze8f8fYrXgbt+lgz6McYE8RoqpLT+ZKbr3pBVT3tkS/mqGTJjvQ4ipN3H2KriumB\nz6gaWzMZ9lAXYUpgJI21lI1jvQkNy8oinCOa+vP/te9+wM+98yZ7gWPhTONNZUzdJnxY41huwIng\nBhUZaltTNYY4ZBNVI1mvc45PfLC/Mpvx4dP3+O4zfw2t1iRKEKlLnEJdGxIlO8CZE8G0psXXJDFn\nizXrYo84XMdE+F5Pm01cnJ5jKuNNbQBkjHWaxXLN+aadPNXsXd/vegy1c6yKiotgeb/KK3QU+5jU\nKUvzqddnKR/+MvCRc+4EQAjx68DPARMhhA7ZwnXgyQ978ccdou5enbn24IXwVFTvetMqJtNRo8F7\nMS5Xy04WezIaMZ4dIIXkyhXPRHxSxZhGdJ1hL+9+iYpEWKyzGHMJo/VBwXElsNoW5xcsl2vGgVAU\nJzG9JCFWEWUYeY33rtAYQR2mJ8l0iO5PkNmATQhAZj2j/9EDtqG5dPXGdfrTEVXYrY+XS9578IjK\nNkS0smiC/qCPTENZkrfBMpw//M4ptcOFm1J6DzxseN+XX36ZclaShTIriiOE8B3pViXaxI54mqBC\nFlBbgzQOG24No/ogNQrbTYQMoNOYPNyEphYYC0+KFe8FO/TDd64SI0gDcnK3P2LWG7NaBfWsfsbO\n1WtE/TGm8cSwTGsGwxF7w9Zno6SXxZTh+tTGURnDJt9ShcAthUZp2N/1u/79Z6f88b33+cWpN93V\nWoM1NKbuJP+SuE9ZKFZhEjXZu0J/OkIPhmgVgsJ8zeLdP2H52AOPLhrDb37zW5yv/XVXTtLXEVEv\nQargP9lYnBPUwZrQ+AT3YyrSmsV6yfPTBVkUGJrlluFuxmTod/0sStiu8k55SUcZjYmwIqYKwLCD\nccbuwR4mlG8PnjzifLHmOOgtrLcVST/yxr+hsS7/PBqN+LLhp4UQmfBPdOsQ9VvAvx1+5z/ghUPU\ni/Vi/YVan6Wn8PtCiH8EfAPPDvgj/M7/T4B/IIT4L8K//fc/+s0+Zh6L//vHCwc6B6k2m5BMxpMu\nIo8nU+7efYntpmAeAByiv0dtRYd/MOIS7AQ+QzZW0JiqE96sjcAimQSKqnIlq/kJ23FrTb/rhUIj\nRaKCcKtOOLx+wONvfcd/zrNzJncT4mREExqN26Nznjx8QpT4459cnaGk4vTEN9i+98GHvPfwkefy\nh1rTSE3jLvkYTjpP4Gn9BJuSxlpWRhAg/cjKUNVVpz6daovp1ZyG5mUkE+I4okoFg0Bu6vVTdC+i\nCTySsi5QUlMFCHYq48BCudxphIPKFpgwlJRWYWvLumr4ow88RuLHXrvBWFb0+gGuG0NSQhzKkuXF\nmrMPn7JcrCH3x3d9POLR6ZJlaFbeHCXk25pNHkbCWKraUGxLbOjpxLGm3894acfvb99d5vzO177F\n2zd9GdM7EGhX+axSTMJ3HnLz5X1sIETV24ri+X0goWzLwosz3MVz7NZnAX9w9pA/PnpCGU6DcYY4\n7qEi2e3G1hKyxo5ih3N0DXMrNLVQzBdL8pE/D0lvQFE2RKm/iL0sBhyrUIKsi5yqLilFzXjHQ+vH\nox6NrXh24RuyT8/OON80NKEPIYOCmPsYr6fF+HyaJX7QDOX/jzVII/fOrYDNFhbbNGRpzCikkW+9\n8TbWSj68/xEAdbmml2YUoak4SiNUnPL+oyNOQ3paGMs0ltzZ9Sfy1RsHLFZLvh9m4g/WDU5FHB+f\n0IT0tGkaHPC3//rfAGB8ZYS1W0ZBVq0xHh+fb1Z8/93vAZBvtywXK5pwEaeDKa+8/BrTvStUba8C\nx6YsOb/w9ej5+SlKiW7iUpUFvV6CwzEPTtTWwtnpOeuA5jsraqSUH6sRBXVVUi/tnnMAACAASURB\nVOZbsqA61NQNaZxwNdw8/Qgmw4Tx0D/g+9MR++MhpiqYL3yt3FQVWl7WnhebhscnSx7NA46+VPR7\niX+w2nIu6vF3/tsfHCiFgN3iLExNU+c0uf+cRx9+nw/efY/TM38jf/j0OUUj0CoAwoCDvQlJT1AG\nGfgvvPNjvPnFd7rmKlEPpxIwHyPLhXP4xtjfP9/6nX/GxfkZLjT31usV164dcvPW9Q412FQNx+cX\nnF34Gv358zMEhjdfut7GZM4utqxdzSSI54wmOyxWa6rQeVyt11RVgxOCVXD+sqHpuw6YjxuvHvKT\nLw8xp959fHnylCfPFjw4l/z2d31VPS9qZqNet/9VVnKy3LIJcnOJhFGWsjebdFZ5pliTpjGDqT+2\n4+WGk9MFdSgj33jrLW7cuoPS0eX9AvzX/93f+7pz7oc5un1ifS4QjR5JGH6wkqaBooZeqEefLldU\nZYUMNlJv3LjF1eEIGQAqkbJ87XsfoGRNcGFngObu7oifec030MayYZlklLHf9Z+VF5QWJpNx19Dc\nbDYURYEOlmpVviJJBJsgUKGjmMFwgK1yDoM02fz8HIqKKsCT+0lEL5E4W3TS5emgj0yHnSrRNveC\nHU3oiVRVRVnm9PqXN4e1ljiOEcIHOfEDNaFzUDcNsZakwV4vSWPGWcRLV31PZJokKGe4suvr1ZvX\n99ndGSBc0wXCqsixTdn5EjZ5yc2djD94z9OiV4/XNCYiSyM2myDUEdSvP3E8fg7iHcKButxSrU8p\nlx6IJLYrUqW7hppSgs0qx7oCEZCFk2HE3t4uz5/7DOrB+98hi+H2y28CMNy9hoy9T0LbVW+DwvPH\nfrJTb9akseb5ma+vhRQ42zA/PyMLo8Iky5gxQAXU42icESeCWzsZKjSmo7qhkRFVyIbqcsV4Z8zz\nRwF9ud4ghG88t0G5rBpKA1kYAe+NFNqVLDt16hHTmeTB2SnjoEDVaE3RCKqgYjUvCpaVpREtWrGm\nWhXUdsFeQJ32+xm1KVhvfVDr9RIG/R6LsCF+9OE9BqNpJ77zw+6ff9F6QYh6sV6sF+sT63ORKVjn\nuFj5lEsJgVOKftrn8IpPG5NeisBxsOvhuz/2ym2a8xOaQKK69+gxi+2CLFGMwrz9i69f562b+wzC\n2Ek7y54dcXHkd4evfvCc2kGkNS50/KMooixLtAqQ02qNcpF39QXkcExjHKPxrNvxaCrkZkMd5vrX\nbt3iYH+fdb7u1KapIU1G1IHHMOjHlPmCKlBhGyep6hrr8m4KUBaFJ9cEAVIhWuhHOGfGIJ1lnEW8\nfcvXz4eTAbPxgFkrgpv2SLVkPxjKzKZeQEWr1p8IpLCYuqAu/S5TlgW3Nit29nzJNPr2Ix5dWKx1\nKOt3QKd0kMv7WJ8BB67GVh7U5TbHyPycJw/uA/D1r7/H89NVRxZKtWZv0KOxjrII0m+mIs1ixlOf\n2TRlyenRY6IwvjswhsHedXQyuDRtEaAsHH/kOSHawtF83mVhu6MR5XKO0V60BUA2Fb266bQTbuz0\nyXYHJAdXicOkxmxztus1bui/81ppqrqgn7WcBclmlRMJL1QDEGGpmoo8ZIjDwQ6nx0t6vUm4Dxqy\n4QirTukPA/RZ1OSFoyj9fWka4/Ul3KWbVWUN822BnvtzO7g6pJekNKGnRmPI0qijoK83Gx4//JBh\nP+mEaN2fYib5+QgKFppQD42nI7SW7I0H5MEiLU4SXrl5g9vh5p4MMxbbJQRKRVk1zEY77EeCn/+y\nTzW/9PpNVLmlDvWdMZLFOqd37l9TFBXzokC24hp4p6mqqiE8gIKGfF1S5pfaA7uzXbRwnD/xY7Tl\n0THDOGX/7m0A7r7xNoPBiMX8lNPn/nc2mxXFfIENKsuZaSikoggqRHXj3anqukQHRaSqqkh6Gh1G\nh/V8jdaXjsZNVZJouHFlws1QHuz2InaHKaOhb4L205h+FjPI/IMYa4dyBmno+BIOg8Z1IrOR6pEk\ngiTMwE0j6H30lLN1yf3QdCt+iIqPdJ5EVK983ySuF7z3/nv87u99y7+vi3nr+j7j0MTtJZHHREjJ\naRAhOVssmaQxk0Mf5M6PzxFNSbX0/39+pEHA8MptZHDo8j7ZknX4napqKPOC2SCwMcuKWCfE1lGf\n+pJCKoWocnaH/tzu7M6IDg8x031EuA93qoro0X02AU251x9xvMoR4ed+mrBdbn1ZG0qmXhpjtCQP\nyMOmLjg5OuLVO35MLnXKo/uPONtYjs58ENg0EiVj4qCBYZQhdoJEdTJjbMuSorCsgt7lfO1d2Vt8\nhFYaY4pgjeAdpk6eP2Nvd8b13qVQ8addn4uggBCMg/uQdI6BgNRUnSCK2ebY9Yrd2/5mGQ763L31\nFf7gd38HgCiOmQjFL//Sl3jjNU8gkk2DswIRoG2N0AhZe0txIC8r1psc4VwXFDxh0nnRFDzFuc4L\nNgt/Aa/1B5w9ecT9979HGQQxb1w55JU3vsDtt94GIJtMEI1lmGj2+r6GXZ6f8PTJAx4HyG+z3sK2\nIAnoytw2CBRCKYqAjpNSUuRFhzRsVyv9pSTsTwbc3BvRD72WVAl6WhCEjUk1pJHu7OyVkt6y3Nmu\nFpcB4NLSx6UQaCJkeJPXbu7z4eMjFs5hG389FusWVn3ZpDZNQ7Weo0OmMH/+hI/eu8frN24B8OqV\nGTs9RRbsobMkpTfo4wSczf01u//8jDKSDHZ8T+SxszjX0Nf+cwayprw4QumI/q5/0JzuYZGY0K85\nWZ4z7WVEYaKUxoppmqLyvBPtSWJJf5TQD5B4sbeL3T3EpVnXpU+uXSfbznHHfmOqLs5IraYIAUw3\n0NMCYwU2BEmnIIt155L90XsfUW7P2Vb+c7bbnIenG85WDesLH2B3xwm39gdkqf/O882WvKzQAcTW\nn46o0Tx+dsazU38s29WGXpRQ5D74ZE4ioLM3AEFVlTx+/JidPQ+QS0Of49Osz0dQQFAGAHmSano6\npp+k5KERJIs1QzumnPtd6Nb1q5ycn7MOMmTD6S43D2e89tItRGfX3SCdwgTAR+UEjQXZGqsqbxwj\n7MdSYCEQgs5Crcq3lHneya6vzi948P3vE7mSq0GS/vW33uTNH/8KkwN/kzbWYDZbKumIg/dfNsqY\nXNnl4KY//vsffsT333+fTSiZtJCUVUWvl1CGbEJrTbEtiEJTL4p8J7kIAKgs0uxN+kwSQSJahac+\ncdojDrt8mvWIk5RI++AU6RQtQeIQrgX/WC/1FQqKqs5xSFQIPruzPjeuH/J8eZ9xQJ5ugi9Du5xz\n1OWSYv2cmfLHd/TwMTtJyheu+WbXjVGPXqLRAa+fpTFRmmCBLPAseqnmvLH0dluVoJK82BIF2HMS\nW2RsqBdPacJr9GgfZEYa0uNxFBMrRRyyvf3ZiEGicHmJDvdCP43pj3uoADOXBzexSYaghdSDyzKS\nGzexIdNU50s2uSELWcHJfI4WEQ5DFIKuKXLiaECIYTz+6ITDmxl5sOA7Otqi9Ihm85yf/X/Ye7NY\ny7I0r++31trjme8c98aUY2VmdVZWFVT1UEU3jbAtYUD2E7IlCwEtP1iWjOQXQDz4FeQnS362EJJl\nmwdbaiFsDG0JmjZF19Dd1VmVc2bMEXc694x7XIMf1to7Iruyyew2hrQUSwpl3ohzz9lnD9/6vv/3\n//7/1/xnv/nCDi+cHDAb+6DgIsXZYk0d/D2iWJDmA1ab67zzsfca+eHb93BCoQPrcbFYMhiN+iBt\nAnltsVhweenvuRuhjPgi6znQ+Hw9X8/Xp9aXIlNwOLIkuDJlip3phGJbkAQ9hddu7nGyN0AFYOjy\n9DGfPDojjn1KdOOFF3njhRlJJNA6aO6jsULiuuk/q7FK0QRqa6M1vrf+szyNqvCtN2FbrNb9e1yc\nPWZvPGKcjrh526sQvfjaawzGQ2Q4VlvVXkHZ2Wc4BQoRZUx3fJr8lVcViRKUP/bmpVVZsalbpFLo\nkL7GkUIKx1MaV5jbCOcgjSPyRJJIRxLAyCRNSLK0t1NXSYZKMpKuhSgUMvICKVHnOi0MkbJI19Ww\nlpYGG7gDkYSDvSHTUcRlMKIZZc57ZXS4hGmp1hfEVNg2ZHda88LBLifTYHoySImyrOfrSyVRWY7E\nMQyeE1GaEzcNJvgm3Lx5k/nVOS7U8QhJnCU0TUu9DL4b2QSSxAunADvZgLqp2N/x99MwFVSbLZHW\n5INA2JrlRPsT4tBWtnmOdBbhLJ0ciZEQjceMD/01K+qavFyyH0RZF6lkWbe0zvb8AQuYpmAn6Fcs\nhGWcT7iY+2xjW0PVGG4fDvml130pfLw3ZLozZTwJ3JLZjJeiGNeJypqKuizQesRXrntMLbOWH9/f\n0IT2qd0q6rbtMQUqh3MS3RpOH/vW8n6ggX+R9aUIClkc8dK+T29ev71P25Sslo7vfvubALx4Y4cP\n3/2A9dx/6dXmiiQZo4N++M7+HruTqe+ThxRREaGFfKq0ZCCKJEZ3/W3b99a71adfrUfipYAkinp5\nM4VhbzJikKfcvO39GeM4odwselEPax2ubb0cW0jjnNFerbqr+YxmPMg43vNp8uX9B2ANVVn1oibK\ntKSxpAqljAtTnqqbejMNSkCEIJIdSKi8MU4g7kRRhJKyF7NVSiKjiEgJlO0UlC2J0n0tHbsEG9le\noVg4y3SQMxkMwHpMRMrI+yh24jPVClssGWVgVj4o7I0SDkdjhuEhitKUOMmQAThVUUqUjTy+EbgY\nqXJYteUidEKm012sabCBzGQsaKnIM4cJPItqvSLbmRDmn6hNy2Sa9YNjDx5fklnB/ihjPPIPa74z\nI97fw4RuELYK9nOiF86V1iIwpGEkvrqck2UVq8CYvXGwQ/XoggaoAscjTjzsGYXjn4wTVvMVdbjF\nVDzgbH7J7VnGOBxwFMUoJXtpOCElKlZ+ChXAxuR5Rl2VJIkP1N/46gvcvXibi0Ug3VmBLuunXRAp\nqRqLUJJlkAHYroL4zRdYX4qgsD8Z8mt/8ZcAmOSSf/SP/zmvHh8xS/yJ+finH3H25IwbN70u4u4g\n49HZE9Kpr1eno5Qky7Cm7olIxkmspGe2OWVBRj2d2jdpPpvN2YZWYZakxNKxDNoJh7MJWSqZ7e0x\n2Q3aCE5TV0VPBvJq9RacxQZ8w1qNtpomBI6y3FJVBXkgvUzSlHVdsqxK4iDlpY0mTZNeM7Abqula\noSLM6kspSTogES9Db8Pv2NbQuoaml6l2COsQSYyQndqUxRjTP+DgJ3477wvdaiIJaRL1036NbpFO\n9dOkulgg2jVpFqEDmLc3ypkMsx4ofcrG7OToI5xUXnovvK80FbmfXQ+fXbEz22d+EazcBwlFa0nS\nISaMGje6grYmDSSjdJhSOfje20GCTqa8vjtkkEkGO37jyXZ2EOkI2w3h0SICIUr0wmUOFTlUQO+T\nyQhxddVnr2VZcjib0FxcUXfB0UCqYnTIstbbErfdkgZmbhb737PjYX9e4jhFyWdMjoXCWkETzqOS\nnhKGUP0I9vHRjJdu7HF/7jEGa7xvRBqyvSSJqdoaa5+qU18F0+Evsp5jCs/X8/V8fWp9KTKFRIGq\nfXrz9k/vkUvF6y/dZjwK8+LbGVFW8MobnoNw9eQxzlqaQPg43Jtg+LQOnZMKjet8XGgQ3JnX/PDd\nOwCUdYsIRht/MF/oxEeTPKU1BXnYnSdZQqQchyfXeoRfSsCAC7uDtV4pyrf9urpQo3XTC4Vq04Bw\npCGV3p9MWVWGq2Ll5YcAhEFJem/J7kA7nEJJCdYSCdmLmDpj0U2LDn1yawxCKVwgX2Etbd2ANYiQ\nOhtlAY0MLb0Ofe8yEtdYrGlxVvdu1uuiAiuhGxGulqSRRaK8uSOQpZl3hw4Zh0/Nn55rEYZ2jLGI\nUP7YOEa0hlT6NPjicsW1mzuI7jZ1gjRNieIBqQqUa1ugqzlJUEc+21r+8e++z/nKZxs/tzfDTHJk\nGuOCZ6VJMoyTveKWFL509IKwYUk/vi5CGj/Ym7G9PGW89T8vFmtilbEzyFkG3cmibmlkRIB4uLxa\nkmYJoz3/uUVZ+nMohv119OfHCwQBRFFClKbPZLQG4yxxOoBAxNvdMbx8c5/fee9+eI3FuQgbOmlZ\nnrLa1hhjaEN/9OLigi+6vhRBIYpUrwRUtoY/+x/8KXZ3J6zDwNPdx3d580/8PLN9D8785Hd+TJLm\nvYdUngRhkO4PXgCzqmuuVh7k+ejuKb/+z36P7717P/y7pteq+gNrEkAfqXxtOQkpZJbE5IMRu3vX\nkJ20FwYhng7oaGOwzmKNgcB3cM4hnO1JeFEcE6cpg9Am2mvhcluh5le4zvVKOnC2BxE7TlqSdE7b\nEda0n9KdEEoSZSlR0sl0pf7hjOP+c724a0oSuA2JaoMASRAK0RZjdN/WMtbirEE6Rxx65wI+FZRt\nWxBHEicUi/AwjqRiVVlMCAPTYUIe5X1L2CExxiFl3KfFtUtZFzWnl75cO9tu2Tm6ThSAO21q8kFO\n3Sqy4CpdrpfYdsmi9ufgN374Dvc2gjT1QGNZFkg5Ix6MiMJ1NbHEOo3TnSqRAimRiGd0BxzQ9i5f\nKosY78yorgKPJEq4urhiOJ3g4m4YLKJqNSpMw9bGl3Kjkb/O83v3URiEENS60wYRGKcwISg4qYiT\nrBf5tbZF4kusDieJhOHmySHH+76N+d5ZgTaub2cnSYKSnhDYAdfLMGj3RdaXIigIIZgHYs9rb7zM\nbDZifrbgRz98G8BrzaH5vR//LgBPFkuSzBIHlaUHj84Z5inSOZJup9UVT+6fcv+xr6VqYp4sCi6D\nNFkwrHzGpu7pmsz8zdOUa5QzT/UXhUTIAcvFth/nTRJFlj7dIY3xY7We69BdWItGocMOKPIZqUhx\nSZAhV5JkOccK10/yOeml1dLAcBROInAkXa2vW6pa0lhHG2pyHSW0UYTofBWzAelgSBx14F5MFEVE\nSUKtw2BPWYGFOnA+qBuUbDDh34VzpGnse//h4ZUiQpuCovRkmizyvpF1WXH+2FvjLQFUTBG+TzbI\nee2Fl7l97NX5IqFw1hHnaX/jfvThHX7y07fJQhDeO9xnu16Sd3b2i4Y8H1PUm/47ta0hijW//6Gv\nr9toyNFE9TYHztao0YRktgupfx9UgpRPh/CsBVz7qU3Ck4HsU6GfSrBuYu4s/SZzZ1VztqzYAQ5n\nYYMQGrdt6SxMCm04OdgjDUFDty0RHte5/9B3T6ptw+GJIt3xGJUTImxuncCQCQ5mqgehhYgZj3Y4\nPPCbpOQJjW56Gbu6st5OD9NLGhbVp2ny/7r1HFN4vp6v5+tT60uRKbSt7lPc28fXePLglA8/+JgX\nb/sBqBYNdcHpXY8oD7OM+xdzREDd4x9uOTzc5+TkGruBabhcl1xcxbz1tV8F4JO7P0Hg+hrXWoH7\n7OYD4+BidFmuQNCnf9uiJE4TNsWKzRMvO3Z5fkZZV4yzMC57cMjeyTXiWPUCL01bsym2rAODsSxr\nFvMlVdDcW22XrJZrwPXlg0wjnHHIvjDxJZIOPIXaWkoXsdGCJhiuPL4qGA5Srl/zO0j8QgZSMQyz\nDwMFDs1qtebhuR9pfnj/Hs4YDoIE3SRzOLsmj0OLUkVkUhGlGUnuv6Niy/rqFFf5z83yGKFgtZqz\nCYYkb7x4m/FshzqI0dx5/IS333uHOJyTWycnZHmObgrOzn12sXjygFvXbzCa+mNRSrBerhh1WEDT\nEMc5aWp6Y52ybkjElr1Aey7VhsvFijjQ24fGgBSsijWb+6GrlA1JUsUgtEsH4yEuDc3ewA+QrWV7\nteb0kd/RL58s0FXbX42TvV2kkbRtwzp0QqbDMZiCTefpIBTDNGa99BlV3VoECtc0pMqfy7pq+el7\nH/P7H90J5+WAV1+4zW64HmkmMdagG0O59ef7wcNz3vnkgvuP/bH5RMv1Q2A+c/Taox3PxT7TXfq8\n9SUJCi23b/q08s6djznf1Lzy5lepVkFGfVWTp4prY9+CNMDiquTw2PO6r+3F3Lh+xP7RXk+jvfNk\nwxURP/jYYwiP7j9GyKfz/EYTNLh/FldQz4BjWZb38/HbquXe+RWXDy65WnYPeEW5XXNr1weOsipQ\ng4SDgz3qxgNQ84szPnzvp3xw1wtrXKxqDDGTzP9OGlnqpiY1ttd6xCovQ9/fhl6Jujvcum5xQrJa\nb7m25wk2o8kuzhnmgSvw8f37HOxMOdgJGIkdg2lYL68oLwPnQAjS6U7fNhuNJbqCJgQs5RwRCikU\nSWhjvn44Zv7kPvsDHziy8RBrWoqiQIbBnstty7sP7rJxvmSykeL23oxi449tfn7OweEeZVuz3fiH\n5vDwhHdOV/zmB++Gc7lmNIj5TpBilxKsE6R53gvYyCjFNCXTgM9cLDc4q4lD+r07itnZnSBkzNWV\nr6uL9RmJ08wCp+vk1jXyk2uQRBBA5naxprj/mO2ZBzTrRtBGGTLxn6Oqgp1IUrRQB86Hrlumedo/\nnIM0QeqWTbcZbCsS59gbT0mCEvPlpuXuvOQycGE+uH/BxdmCt173PJjrN/fIBxnLzZL3370LwI/e\nvcdHZxUr3VH2lVd4Mh2G5Tc8KSW6494848D2eetzg4IQ4n8A/gJwFkxfEELsAv8L8AJwB/hLzrmr\noNX43wH/IVAAf8U596PP+4w4inuQZLAz5Zd+/g2SbMy9971ijY1r7p9doXWYdRjnLKoNrx9/HYCv\nvPk62XiIyr2wKsDhRcPdB++w3Pge92QcMxmkmEAgsp3C22esYutvXGedJzAFcC/JMt6594S3H80h\n95G8KFt2Rhk3B7Nw/HuMJhMGw5zNxj9YH310h4/uzXm88TfPwyJiUTWo1u+Qias43MmIIocMO5UK\nhye62tJUIATHRz4AXFx6q/TpaMDuzH/2VsPD0wuaIIZy62iX+VmKetmzL4+nKUJUPLx8zOMn/ka1\nkyPunq14/5//FgDfuDXjm2+8wP7Uv6etarCGLE1IghTcreMpbbUmnvhgGccxjdFUZYUNcmvv3HnC\nnXlFevwiAOVqy97RDsuww7vTx4zHGdtizXrtswuXZUTTQ9ZhvP1Ktzx5eM7u2D8Mb77+AsV6g8py\nRAA90zynWqwYBzAyEs6rN4csshAR3//kMee/9xHr4K2wWq84Ho347mue95Jna+QgI96Z4MIMzurs\nkvPLisdr/1B9/85D3r9c4AJQmtYVrx7sk6cxaQAw8laTJXEPVMePHU1Rsi79A1+tN5xMEnRT8/0f\nvwfA2uXU2YRNYOJOsyFlKzk/9fftaCRJ4l3Oz0559MQHTzXYpVYrLsOgnkAipXwGI7FIGRErhWmf\ngt1fdH2RTOHvAf898Pef+bu/CfyGc+7vCCH+Zvj5bwB/Dng1/PkFvAnML3zeBygl2b/mB0QGBwek\nuweQ7TBZ+pPZNvd5cnXZj6QmqzUyyrl2zZcXg9094uEQEKiw+8bZnBeGI/IbPrtompbv//4HvRqS\ndRKE6W0gnl1XoX2TChPkzsOuszPhz9x8la+ZhE9O/YN3ebFgEMHJdU8jnZ1cY3JwjeFIos59eldu\na6YHx+y/7rOh67Xh/Y8/ZhFS+HJlPXikHHWI6NIZlIzRHQGqKnBCMQnTNjvHe0xHOaM05jyUMuOj\nW+zt7iGHHvg62d+h3q64CllBeTBiNIDxOGJ35W9Ck+fsH+xwc+o/93icUG+3mNCKS5OIsimhbchD\nEH3xZIYYZcSBlSfiiGrRgNYc7wUlZhmT7SrSQPKS8oCT2YCBCRbx5ZamrGi2ZU/PzWeK2ErMLR/4\nzi4S8pMxt0/8Q5bHgmK9JHWSOICew2xAq2KsDfJlkWMiHaMA0B4OU5JxxoPFikHmOxIySWiF4m5g\nJ+7MEkatCYQqH/iKqma+aXi89e87ODzm9niHIsjjFYtTYilorWW58EFttLfPqqjIpv4erIuGtmq5\nDKrXAsErN/Y52Nth2YYxZ2MZ7U1wIbt49fohk0gzGQU/ysUlaSIo1mv2Qlm7Pz7Ayguk89f9TGjK\nquzVv1qjiaX324x4SsH+outzgUbn3D8H5n/gr/8jvPsT4b//8TN///edX9/Dy70f/xGO5/l6vp6v\nf8frj4spHDkXwhQ8AY7C/18H7j/zus4h6jF/YD1rBnOyM+7BPJWlICKkiBiF1tRWWV67tdfX9p98\nco+vf/fb3HzJp3/pKEdGCtG6XiRjsnfIaZSQBmKMcQ1LrdGdeS0utKB+lr50eerT+ptHO0hnIOxC\nsXScHO9xc7zP9RO/Y1ycz2mamllI4fevXSMfTZDK9lyG6d4eJyc3GM18NrFebbk1gqsrH/kjYCjg\n0Scfch5EQFvjkLHobeZra8EpbKhf93cmDPOE6UiRDv0+MEg06XgINrgTG2+vZwIgWK/m5DJmmElm\nO/7clrZmrHJuX/NZTKYaotmYWHYGEy2xkwyl5Xjqs4fvfPstfpeIrOPrO0u9XaNMzfGBPw8vXT+h\nEREuKBmNRmMSXVAGLGbdRhhnaXTbt1mTtmCQwc4r/j3aF2ekOJAhpW9LLrYXrOuK6Y4/l3FQ6aqD\n1VxqBTORMA49/a8c7/HVr7/BN1/f0HQzCrEgVSNsUGIa7MTIQYIe7SKkP77R9Wu8vL/PDd25Tlt0\nWVAFU+BNfYCs4e7ZFT++4/fMJ9uaWSIpl15zYV3WrGvHVWhfn0wSru2MuXE4693B5ldzkjTpRW2m\nacTudIeqs8qrF5SbNdJZjo58yWowvHUrZz8PYrUf1RRrxzK0QistsTbwY0J290dRc/5/DTQ655wQ\nn5WEf+7v9WYwb94+ch1IIluDqBucKwjtXbI04dbN6xyEXu7q4oI3v/oyeR5So3KFixMipzxpiDBF\nmOUUQS1osap5crbsgTthHVZ89vRDFYge8nCCtA0moMlRohgrRZJn5GHy8GRnihPyKWEoilA4nIYo\n8OOGecI4S9gL0l5HoyGvHEx6IFLUBZvLC5Jqw7b0AqSbpgHnQo8amtbh0+dhfgAAIABJREFUBDwM\nasg3DqcMI8F4MGQSuBlJpJCpxIVAuC0r6k1DEgczmzhCOEucRBzf8im5ZYiSWUBeIbcJSllEJ17b\nlghZMM4lL930XY1BPIKyJiYEn7JkeXWJ0S1BQoJhLJjGCXlQSHI0OGno6BBxFKHSBBUpTCAe7aS7\nOAQyAIsosHrbG/rU1mHKDVfFgg4Qmk1n2CRhUZbdjUWiFC4Mko1mGclezvGNI3Thr6MyFWk0QM58\nUDax9VO02RhpgnbDMGe4lyLCuauLmna7JRL+YRaZwsw3uB+/x9t3vcLWw8UKsztjEB7AeWFYtYrC\ndGzFFIwhEZqjqT//14+uEw0yROcI5TRCa9bBmQqrcU2NMw1b6zGEo+MTRnbA/pE/tsNZRl1u+L27\n/nfa4BQmpPTEGfhMQP0PW3/coHAqhDh2zj0O5cFZ+PuHwM1nXveHOkQ9u6yzVOGCRXGNcBvaqmUb\nZMiz4YRkPKMMAOD16yeMBilNQK0jayGO8cJYfvdK0ilGtwRxGh48WsCyYhJuuMLowIj82bAQhRMY\nYYmkpQ3Hlooh0jhEo5mOAxCnEj86G27ctimQaGInemWlFAPrNemuf81osoNwE5rQYirrkk1TIcXT\nFqQSwl/UIPBijedHna78zX/tcJ+0LYij6KlqEopIPyXuGAepkH0rMUoHGCpipRiFXd5aSdk0T41I\nVUKcRv3AVGMtVjhmuxO+duN1APJkD1nc70eG26pgud4gao3pnV0hQqI6P1DAqpQ60G6TJMUiMNb1\nw1jO1aRJ3t+/1hm0M9jA/otaCduG7Xrdy4sN8xRnHVqb/ngrHHk4j6M4Q8Q5brKLnHb6ipqSljhk\nYaotPXPQuf7aG+d7PzK0msV4jxgJHavTFuTijGu7U3aG/n0/PN+gl4rD0AJeaUkrIpK080AVbLYV\nutWkocqfJBn5YIQLeEfb1qyu5lQhyMXSkiUJwzRlHrpxYtYwHk0YhXbv8JrlrZdO+PhJ8BmxAq2N\nvy86hS35xSlJf1zy0q/j3Z/g0y5Qvw78ZeHXLwLLZ8qM5+v5er7+f7C+SEvyfwJ+FdgXQjwA/hvg\n7wD/QAjxa8Bd4C+Fl/8jfDvyQ3xL8q9+kYMQThDAV3StEVSUxRUuDJpMd/cQwrEIc/VHJ4e05Zai\n9mn+IM9QTYsTCht45y4SqNhRbf3P739wj8NWU4QweFcprONTI8Pd2g19/cgakgR05UuQeHqAiBUK\n1UtuyUghRNTPAQhnwFjqxmJMp33gKBZzOAoCJNkAJySyG5Aqa5qioS4bVuFEOAF5pLDdsBCA05RB\nJ3FTwSCNscJhQ5tMpV7yLA05vKwirrYb0o72nI4YxBlVu0aHHS9KxuSxwDpfkColydII3QQZMgzo\nlsloiApfuqou0abp8Y7WGi+nVxuqIB7glAFX98eWDSYe33C+4zLbmTEcTykWS1YhI1yVBUfDnd7h\nqm0KTKNp6m7AyyIttHXNauWzxMVqTB4n2NCurirNqtHsBqp6mkVEzhI5h5Ph3DrnjXhDiSGsRbYO\n2Va0wU0LK5DGIIJnqFARRiX9z1FTgTMMRjnHgWz16LJmWzachVRt3VbsT7Pe06GoW9argu1y4wec\ngFZ4+rkK5UMkBaJuMEGkdbyTkA8zBk3LxdJnCkZrsLYXbqWFa8OUo4C5nRZbECCMQXWiMe6L05w/\nNyg45/7TP+Sf/uxnvNYB/+UX/vSwhJQ+VcarGFtbo8uSYSDCSNt6nYBQ96bpkLqu6bAw0YYpsTgn\nHngAyllPtvnkoU9UfvTonCJVXBWdyKZE6M9u1Owf+1ZnFjsiUWLWHaYQYYz2AaArMYymrArKytf6\nw9EQtCIGXJhlN3VLoVtWAYDK8xxroQ18grrasi22bIqCIkxbZoOYNEvQdANEPq3rxDkfnp0xO5ni\nrH2q4pvGDIYZMgiFVMsVUsWI8GAmwxGxbCjagqp9aj8XpROicK7jqEVI2zPgjLO0zpE4A10QTidE\nUvbDQ1Ybr6K8LSkr/53bNCGzUV9WJXHMZrulCfhMuS2ZTj3u0TFTt5uCdscQBTai0RprLG3gsGjn\nsNYbBXeaBav1Ejkc0+jOrt5SVDXD9KC/PlRbRL3sJ1CjxpJUDQyDkEmqSFyEHzLsBG0VUkh0uEZ2\nuyId5IQXoeoCqi3KGKZh2vVgmENtME2nnpUgnaIJ0utLY7nYlswXa+IAQifO4pKILO2ISIJtWQTL\nN2hNhLYJyIy6CmWiA0xFW4TpzOUCdM0w6+ZBGh+MrUPKrtyBbhbn89aXgtEopOj9DbTWOGtRUpIE\n8E5JhXGO8Xjcv8Y4TRLYi3XVkiUZSsZhbhnqYsOqdvyTH3jJs7vbimyYUwURTeEEop/h+/S6qrrd\nIWOa5qiAAbXWUtUFKQoRwKRic8VifUUevBaePNpw9vCUawcznjz0oOHD+w8wierHZQdZShJFbFZ+\nWOtqfs7V8so/IKGeHo0zkkFCWz9Vc/ZOWmHqraxwahdrTK+SJCMHwvbirnXVYrRARv4LNDKirTaU\n24Zp4HMYDMvVglEgK0lh0LpBh4e50S1OKvI45mjXcz5WjQK7fGYk22GdoKxaioDw1zphYBRKhCEk\no5HCMgzA43a15V59D+sEw6F/TZbnyDjqJxMxFq01dVC4bvAdlaZtkSEQbjYbRmlOsI5gXRu/8wbM\nYX21ZhjcomwQq91cLpEGJjd9t1ztTdDS4pTFhidCC41AUs99FlOcXTDNBiTdcJxpqeYbNmdL4pDZ\n3D7aIVpsKAJhKE4SWt32m1mJYFUbFpuSwcA/0HkeE1clcRXEdaSiqAwPHgV8oLjkpZciFos5V+c+\nO7p98xoyk5htCLCbku22ogqBsdSW1mkSFNJ1QjJfvBfwfCDq+Xq+nq9PrS9FpoCUZGEMuq1qrLMY\nDKFTRSIUCEsaxmWrtvEzDCFCqyymqiqaYkt55psd21XJv3r3Pm8/9il7ieP2zRe5qjxltl5v/5De\nA4xC67Oua+bLDaIIuoNHila3KFX3u2TRVkRJxHTHUzWitKUuax6dPeAn7/jR78urOYOdCU1oQd6/\n+xF7synroJ93cXHGcr2i1i07YdccpAn5eMCV/uwI/+h8zurGHjtR3A9eWQx1XVJsu/acQKmYx2f+\nHAhlOBwljOOcJJQlxJKiLikLv5sm4xQln7qAa+d8Jickq9J/zr945wHR/uDpyXMOKRROSOo27OpN\nhc1T76SNF85tqpJJyPYOR1OSfIBDo4t1/z5WOERnhGIdRmvazhXcOZqmoSwL0pAptE2LbjV1mFlo\nDCRKUrT++lzOtyTJGemmxoXzb41hevMmVeBMJLUmyxNcC4SSzy4L2mLOJrAVdw8OmM/nyDDiHyPY\nLioWZxuqUMrcODlgtjOgCJnmb3wArml73VBnBcYoiqZlGRzJB3VMXCrirOvVpsx2Jpzc8t95u2l4\n8Pg+ui05OgzsUDRtWdGG61HUlvmmYhXGo8sgKyJwJF335xkrg89bX4qgIAAVSgHrB9mxjfdQAI8p\nyCTGhDQ5kik42wNdMkqIJxlJ2/ZmHaebKxaV7rXujJCoKGU69b3p1XYT5uh/9nh2Zz5FnJ9d8MN3\nHlIFq/Rbb34XmQwxgA6AlMYyGA27UpPxKCO+foK1LS+95pWipgeXWKshAFuXl2e0zYYmAJirzZpG\ng5MROzs+jY/Tlul4woennnIt+mEo/30+Ob3iB+/d4ejbr9CE85C1XmtiHWpNESUkec5k4ksF6yQk\nAwqnqYtOaLYEJxHhIbKDGIGlDe+prSHCcjq/4td/5Pn4/8f33uGv/LU/jw04kHNedNUgsV266izG\n0uMBQha0pkElHeHJoYvCqygHbkArNFQLVMAUrDU4Z7G2e+CdB2gNTAZBb3EwoCyK3jwlTyMm0wGP\nt/5hnsicYVoQ1Robzt3ubAeR5Ejp33fxwR1iFTGYjqmD2/P68TnVpiAPlGXhBPlkwvKRB0q3i5Ki\n1FxZzbzwD+PxYESaCI6CknSiHULF6EC4MU2JSyRIaExwiGpS8lKRBIDcihpkwklwS1dHMZtrI9q6\n6lWt62qD1iWb4HQ+LzacbkoWXdBDISOFLhtUMKr9t8FT+De6nHM96ShS/gtZpbx8L9AKL4TakYGU\nBN044qC+I+IIva0QrSW3vmZN9YQ7iw8hsCIpDZvNtpdAE/jebSei8eyqtr52a3WNUQkPwzjwJ5dL\nbr50G4fpj9daw/mTc8wmgEsyosUyGe8wCPyA2fSSy7Nzzs896LnaFIgoYhAwE6RCRI7BeEgS5has\nkKT5CMdny2hpa3kyX7GuLQehClzrlnmrUXEADWVMFmfsBpGScR6RK8UgzXsxmm1ds9wWuIDaaq29\ni1RYXiAG5lXNP/2+n227KAzbYkvTPkW08zwjydLes9DhlZLqNjA0naXcttgQjMpi5YEw6PEkhhFm\nDGLkg6cxLa3RfdZi/egfaZL2svVKxWzX6x6UjvIJrbNchQf1gWi4NpXsxJokWOPNH19xtqo4uuUx\nhelgwub0lEcPz2gDSGjKhgiJnQWZt7MluqlIAyayNAXbxrJsNJsQCJsoRjhFFDavQRIj4wQTOjLb\naoMF4jTqnc1BUzlDHYabmhJEG6FCoBwMBoxGI/QGlusA4lITD8RTAHO1pjCSIhxHnCriNKKoapoO\nXBRfHCn4cgQFazGhFaekQkQKOvIO+C8kBGXpd9Z6vUUXEqV9RG7mFWa+RRnJNrSvfvTkLu8+esI4\nPBCLdsPlfN6j6tZajPns7kNH0GyamjhNsKFd9Nu//w5/4hs/xyhTvREs2tDUJQ8vPLu7XVWkUcLl\n5TltSKW11TyZn7MNngjpJGMw24Hafx+hFCKyjAYDtqFNOd7b4ejmC+w8XD9zXJ+O9uuyYV60XA/g\nahYLBlKxnfvfWS+3tElKdOYHs8x0QBU7pLTYEI/iyQgTR8Rd8BQezHs6TWoxTlBaSR2ChYthsVwy\nC+XPNE9J84yyrmkDqCakQEjXq2Suiw3zxxuqS39OEhszmc6wzvZllVhYBkcxMukcraRvuYbrYQWU\nTU2ceZ0IgMVqRSQVR7s+AFdOsKgN25DdfXB+xX464Giyx+GrvqtURzm/93//kDyk39n+lFgNGAqo\nQwboIknrLA8f+HN37+wRL798g1de9SPN9dpwup4zLzV5KIm21Zb66ozjMAQ2GiYYJ5F151uhWBQ1\nrUx7cDhWEplENKFMPHtyxfrhBhU6o1LKAK4aynDvjq5nHN/awYQ2futg4xIuN2FgUCoGKqKW0E38\nuT+CnsJzoPH5er6er0+tL0WmYK1Fh1RIJIn3TGhabKCuqiTGmYZ6E7jdG0N5kVKfhV21lmRlAiIm\nDjp8j5bvMhwOqUNNTmzZbNd9dtCp9yLEz+zAURLmAsySQRwjQ1323gd3+MlP3+dbb34F0aWIwzEH\nBzcQHedl2yJbWK+W2LBLtk3F/uO7XAYwT01TkmHKxZXHP5yQZIOceJz3Ji2T3X2SwYTr16//IWdN\nsK0N9x5fcnPmd9ZZnjIaJQzTMDizO0ZZwXQQ3LfGGaM8YpBHRINAeMpSSmN6nUQvOGtpQuamtcHU\nGq3pxV0Fju122ysm7b70Immaoq3pW5LaDhF4EVIAW9cMspjhJMyIiCFJlhKlCW3AWuKBQY0tqht9\niIJYacdhqWvW2w1xPuZqEfgDEqbjnMOAm1yuSh6czXuNg43RvHvvjFd2x0xDyZdfG/HtX/kFqqBc\nlL16C9IJ4+WaJjid18Waarnl4j0PXH/l5Zd59Rdfo1mE0emmZVHWrGvN8b4/4KPxgJ29lyjn/j1G\nw5xtUWED4Yk45f7llpt7EcMwUzEoW7KRZhQwktHNjHbQksce+5pNp9R1zWKx4F4A0dmVqDRiG2jy\nW+Du5ZoylCnXdjKkcxRCIgP/wWnHMnhjfN76UgQFhKMNbEUpIqJUgHA0HZus1igtiMPcwmR/hh4p\nFiIg5hcC10qE08zxv/N+ccobb9ziB+cBqHOSWtseC1DKdzRwrg8KcRwzGo1IgsBqokBFoENKv6ob\n/vff/G1u37jGtZ3g4itinLS0ge1XigJdb6lM0SvwFNs1y2aBVUHEVCquTi9otr7eNlHEaO8QlCAP\nHPgozVhcnPPaq16kxAmBFfQOUdIZWgsfPZ7ztRu+8zFP1iR5yihoIeSTCaZ1tOH7baQjThXj2YR8\n0Nm3WWy17cVFdNuCsBQBHa/qCmlbP4ykuxkLS1k2nJ77oPb6q19hNByR5hHz8HulmaJFQ8cwk9IQ\njRQqCNbsD6ZkWY5NYFkFlScp0EKjQ789ihJa53qzlflmQy0ETVWzDI5H106usSoK4kHgBtAwSKNe\niHYaDfj4csG7p3P2HgU+xOEe2TAn6tyftMOkMfF4QhkUxKtySZZmfPXl2/5eOJhgY8VVKJnOlhWf\nXGyYy5bX8kAQaivi4QA3Dk7nlWGzrmhNByJaVq3i7QdlH6iTZEtSRggXhHziCDOpOAssz4snT6A1\nbDYrdBQMb9KMqtmyrfy5vbeCe2cbphO/GRzvTnhw8YQ8Sckz/76tthCUtj9viT+KIsv/V+twOnS/\n9u//PACfPLri/sUCTUQWdojdyPLC0ZgQ9Di7uCQdj9k2/mSfLi3LusVKgQgahsNIEgvVt8TyVPDN\nNw747p/6DgAv/dzXscmY9XyOET4I3Hrz55m3ir/9n/3ngFdgknFEFYq3TVEghGM2m9IEF6nNuqA1\nppebt847IbXOoEMA0tog/0Cl5pxFBfQ7ihKa1uBht2f9AJ76L/ydf/i/BrfoMMgkIiwGoTfcf+fH\nAPxfv/4PuHj0CVXnQ7DZ0lZtLyQznY146dUX0G3FJ+99BMDlfEVrJYSAK6QAIXtGnYxiUAJnLVUn\nDDI+QJZPGAbPx1TUHAxThmna4z7GGFSUIMPo9GAwoKyqvtszyEe0uqXYFuiQvdXaYazpyUoCQTZI\nyLv2Y20Q2djbuQU24l//r/8ut176Jk3kuwLL+29j10/YC2Sy3dkY5RqUa1ku/Gse3b/Ho7tPOA1K\nRtuiYjzKsa7uOx2Ldcm8dOggedZo0M6gQrt0kiu+8tJN3vr6W0QzjzOMb72FGeyhwvH+F3/9L3P2\n+Ak6sDwVAoQII83hOguY7UzZ3QvkMSnY293l4QM/eblcrKnrFm0d0cCf7+PjE+/0HdqnqZS0bcs6\nOJnVdUWSpDhcTwRLspTf+d7v/NA59y0+Zz3HFJ6v5+v5+tT6UpQPxlryIO314tEMazQPVzWrkAJW\nLdSn237ctzVDVucNbWeKSoQThlY/HT3eGMtQKe9aBBSV5Xc+PCNKf+h/J5Hs33qRcT7g4sKXIU2x\n4nQrqEIElnFEkiToTcg+ZMxkMuT4+IjHQYilrmts47x/JOAwOCdRUvUUCGsd4llPAeGFNV3nC2EM\nSkiscb3LlTPetbpT4+1xj/CmymkiWi5P7/OD3/wnAFw9/oRqdUkTkPfEKdI06iXdMjQjZ0jzFA6D\nenOccDpfsw1+GLV2oBS2Ix1ph1MKge7bjdv1GRNlGQRc5Xg24+svHbM/Hfb6FWVZeA0IntK0mzZ7\nZoeMcC6jGsdPhXIR1HXNJoi7RkoxTFImQ/8ep8s1d5cFtZRUIRX+F7/xL/jV9pB0x3d/zGbOKI8Y\nBnexqtgSS0MWwyjz5cPu9ACOXT8rIGyDsC1tE7HdhhTdCcZDCF+HqgGLow5Zo8Sx3niuicLjG9vy\ngmgw9u104PLsHNfq3kTHWIOUkix76rFpjcbopqdCj0djxqOMvdBNmU5y0iTjnXc/oAz8k0d375Fm\nGXFo5ZbhfZ+eW0nbVAj5jDOm/eKP+pckKDjuP/a1/429XY5nAzatZhvS78pKLkpBFTjlE+XYiyN2\ndv1FPtqZMJiMESrqB4a2my3FassiaOpdlAVXW8vvvuMZjU1d8upLn3Dt6IQkTJctn3zChdsjDgNF\nQkraVvdqR6mMON6ZME0kOtx0sTXUTdtbqpVtS22g1QYTShmkw5mngKZDYp3DdD87/KPjHPpTfWXB\nU8Ec4QNCVwtYR10t+Z1/9c+4+7bnD9jtglduXON20K6cDEeUVcWTM086SoXitZdeYG86Rr/qa+VV\nUXPn0Snvf+zPy93TOZta97MEtfEtSYujDd9HC8fJLGWS+fPy8q1rfO2ttzgYDyjP/We5eo0Tijbc\njLXWNNrPJQA0raasKqQQ7AXC1jSOKcuiDyxKRuT5EJP6g3nw5Jzmnfs83rTMSx8UPnjvHV7fv8vR\nW740yKRhNhxRb/yDatoCFzlkE/esx+FoSirhWnA6h5aqKCg2WzZXPgWfjUc0zhL4QmSjGZu67vUY\n12VJlkJRLjmS/mFdzx8Sj0+wsQ+4VVH6y9Vb1VsIFvE7Y3//HOzvMhlk7AXC3HA2Ihuk3Dj0PzuZ\nkuZDlIL793xJsS0qMJq2m8K1FqUcUSht4ijGiQiH623w2uaLgYzwJQkKQkg+OfUAzuPzNVJK1rV5\n6nggBNMIXj7yiOzXXr3Fa6+8yHGQeN+ZDUgHmafHdpOTVcN2ueHswteNb3/4Ed9/5xMuLvwOf+ej\nU84eXrI/fY+vfsMzD5t4xmY36glOm82GUguU9PXr7mzEN954GV1vOR4HgYv8Re9WFA62aDRnqy1v\nv/M+98MAy8ZAI9xTEg6O1tneoZnIuz85Yfsa0Fsviv4cPP3/ru9seHDvE370279FbPyd+6d/+bv8\nyW+8yX4gTQlrKOqCqwDK2aZlfzpjnGUo4W+SWmu++sotvvH6CwD86Cfv8eP37nDnbN1/n7puIIqf\njnE7S5Yojvb9w3zz+JDD69dJjEUGgCyyDaN8QBwGr0QcY4VEdBOQTlCGAbBhoLjnwmKfoTVrbTBJ\nQh2CQpYNuFxpLj+4Rxzq9uXigvJyhTBBRm2cU21WbJY++4uVw0jDomzIQqYwGU8Y7x8y2Q3KUbah\nWq5YzRfUMw/+lpsCox07Y/+A56Mxy7LkNHSzLpZXmEh630gRHMf1hmJ1RhqEWXDOk7gCTiEiRSQd\nh9OYN1/2U5yvv/oib3zlDW6ceMXtfDJFJQlFEIxtREKaD/kz3/lV7n/s1c3ffvtt3n33HS6Dk/S8\naKialjLIviEkSZqQ53kvstLhNF9kPccUnq/n6/n61PpSZAoqiiGw2E43BcaBRDIIFdH13Yw//bXX\n+M43/Y5+eGOffDIhiru2WoJQ0tfjHQnSGZK9faY3fJ//1qsv8ye/fspv/cvfBuD33/2Q9bqCasW9\nT7wPoZhcR+y+2KPhIkqRpiUOst+vvHCdl25dJ08ipAx06nxCFD09jUL4tP7Vazv8qx/+HgD3Tudc\nbkuqEMhLC6Vx/ZyAA6ySn6J7+yLD9SOvQohg7BqMYJstP/7B92gWF/yFP/PLAPypb32TSRLhwkit\nMwYVCQYzv1s7bVACFG2vfxnFikEyZBbq9r1pzu3ja/zLtz8B4Ecf3ePsas22qbFhl5fScbA3ZRxa\nn8NIopxFWEcSxrSzZMRAJeThd6Ik89hEYIfKOIOJw1rnteYAp2usiIlVmHUQDU2i+hmL2WDIjYMZ\n1+YLCuO/Y1Ws2W5qslDyba7OsfUGQhu50YZ6u2GQJkxCuxejGcz2iEOHIrIa2wr2oiHN0Gcc7aRm\nkmQMwvE3bUMiJfFRKCWzmNJq8vGoP5e50iyuHhPPwnBcFH2KRi+V5Hh/wJ//7lv88rfeAuDFWy+y\ns3tClPlyQSZjpIp7uTmXjj170zT8idd/DoB/7zu/xOmjT7h39wMAfvjOO/zm93+Xu6c+c2hFjBBg\ndUsWBHa67PeLrC9FUIiihGkwFqmdZltaEm14OVj4/Llvv8x3fv4tJkdBLX6YIJMhQvig4ESKUwon\nnrE6FxKXWkTuH+gsH3N7mLMXzFRe+cm7/OD7P2J+ecVq4VPl+eU5A1NTB+zCiog4ckyD4cHh3oQ0\nGzDbu0aU+htKisS360J65mhR8YZbx2Mm3/4KAGenSx6eznkclHMerwpONyVnVQdAOaQMEhihLnQI\njHOfqQwFsLi65P2f/C7f+urr/PIv+i7TJI9p12tMGLQyTYW1uqe4GmOwKgIcNoBfSkGk6JWZT67t\nszOaMZ14qm6cR3zv9z/ErA2bupPHalEY4sDfl7qhvloQxwOi0IKMUoFKEtI8GKPkA6yUPZAqfMGE\nigS4cB6kwOkWGcx6lYOobXtAGeuY7Qw4ngwptX/fohizbg312pdqpt6ghO70VGirhlTGTPKMJAR3\n3a7A7SJDTb5ZFUTZGBE70uAAFe0I4lZDuK6Js2SxYhQesrJKaUtNqiSp6iYRNZQr2jD12YF/Xdt/\nEMd87cUb/Mo33+D2sReAHcYDYpUgghanUP68dPeBiJR35Y78fQ4wFjPG2YvcDrjD6y8e8uqtY/7e\n//ZPAfj4dIUSnjzVffYfheb8x3WI+m+Bv4jXvfgI+KvOuUX4t78F/Br+Hv+vnHP/+PM+Q6mIGyf+\nAdqW7+DqFTfGkl9+zUfcr790jXEeIwKqa+UAJzJc6K075YOpEDwVqnQaI1SvbIwSiEHKJETMb/3i\nt7jx4k1+/OP3+OlPfwBAsV4jytL304EGxTB76jkYK0ma5kSjmd/pAGVbXGuJAtBYNyVlUyKFZDdM\nZI7inN1xzlEgvszOV8j7c7bB2XmjDZH1k3imAxGcgGd4CwLPJOzGpB/ev8MQy6/84rcYd0j7ek2z\nLRCBVdjUFdY9Y3gjII4V1om+k2CNw7hnWIRKMRtEfOWmv2m35jUWm4L1e4968RDXWFrdoIK4qxKO\nZrXEjQSyk9CPI0SSYMI183bq6lNORc49i5rgL6J02CAdZoUfuZb9rziGWe4dxUr/mv29Q65UxjYI\n1ihpUZHoZwlMZTjamTAepmwKj3fEWYbertl0XZokR6CQaeyJc4DSGmsLZCdgY72cfKz8504GuR8T\nN64ffHNCEzU1dQgKWZaijaYJ522QxNw+3GV3MiZAywipcFI8nVeoh3sDAAAgAElEQVQS1vNV+rEf\n67tUVj+VaXdBGSu8ZjbM+cbrr/Irv+DB1nv/8LcwTqCN7TOEKmwUX2T9cR2i/gnwt5xzWgjxd4G/\nBfwNIcRXgf8E+DngBPinQoivOPevN7ITUrG379Hw/Ys5I13wteMBL+77dE9FEY2IyTordzkAlfkt\njtCu69oxXbqNRRL7qAs4aXFC9+m4TDL2R2P+5GQPG1pK58sSUxaUTZjOlIJMqKfy7XFKlg2JkgwT\nSgatNbbR6OANYXQBbQNO+mMESBRxXjAxwdJOjzm/ahiGAZYSC9r5YqGL7NZ9iuQiwp+udfXR++9x\n8/CAk8M9yi4zqGqcNjj9tNVpe1oVoW3qw0HX4TTWYJztBKuInbcfGwYm3EvXj/nWm2senC9YbAKF\nWURo7ZDhHAgBuqlwtum1EKQQWKt7pqpzDqViREeSUlHfimyDHoExLca02ND2c6bth6HAt3aVU+TD\nQT8MBDHnNnrKiE1jnBW9ZuN0PGVnMmKxvmATdCd3o5jt2Zx86IO2GCqSOCfKJ4hwfq3e+h06BAWh\nBUoq0sDIdC6j0SNWRuOCM5NQEClD2XT6EIY0TWl1GGl2lizxtO1ug3PCYNHI8LkIi5DuqRV92wLa\nH1cYBXBt68fwQ8lkRUyWJLz2qhdSHw4yTq+2REncX+j2Dxn++6z1x3KIcs79n871SpDfw0u5g3eI\n+p+dc7Vz7hO8gOvPf+Gjeb6er+fr3/n6N4Ep/DW82Sx4N6jvPfNvnUPUz6xnHaJmk1m/0+pyxVFi\nORkphOj64pJWpSRxALoihY1iXMh5VcgHnHN9a9BJiVIOQpLipEBq1ZcXVkqclKRZwvGRT5WXy49Z\nP76LcV0GEpGlGVnIFPLhCJHkGAdOd5Hcj313tb+0BmE0zrSYQBrS1iCkJIk7r4KYSR4z6MR2nEU7\naIXoU0TnRDAKfSa9FqJ3Fl5dXfHm0QFJFmNDpiCNxgmH7hVtLerZPrm1HvhyoMJ+EMlOOzLsJM5i\nsaiQhR1Mcr764k0+uPOYh8GB+UpDXWnCBo8xFm00bdOSdgM4YeTXBCq3lAYhlFe7BnQgZwH9ebKm\nwlkDYb+RGKRU2LajizvaVmOaip3gyBUPpzzSUa+Z6UVNLSpcD4Hm/uMHVM22F5uJrMS1DhF2+Gw0\nIRrPQCR9uenisHsHhygX7pdOCDWOIcty1sWGovKZgMOrhG02fiZkmOWUddPvvA5H3VbeAboTl7Ia\nqzUu6jgtGpzoSz7ppK8knUGEgSbhjG9vd+WEkPjSyp/7ySDl4dmK5WKFCTMu/9aARiHE3wY08D/+\nUX/3WYeoGyc33Nm5nwBrtgsmo4hhnvVqTEYqyqrELbxIydBVqGgPpzpFoShMO4ILKZWzW1anj6kX\nvtYsthXSCYbBsnxycEA8HKCF67UD/h/23izWtiTN7/pFxJrXHs/ZZ7xD5s17c6rK6qrOrqoebRoa\nsDHCpiWEMEhg3pD8aAkJ3v2GhOGFJx7g0YAlTMuibRqD3e7uquqhppwz7zycce+zxzVGBA8Re92b\nDd2dnRJytnTjoSrvtPc6a8X64hv+w+bygsIo4m3vQlhi23LrhotrR9duEKR9hAwQXW0curxx+1KZ\nFlvX6LrqOs9CSoIwJvYEr34Ko17C9jmJRiNRCONSZHDptxD8iW7BeRyztzsGadH+7YyNcTyFyG9k\nLVCm07IFoGkaAhUQ+DQ+lO7ePS/bW6w02z4XmRBM8pCbkwET37tYliXLZcHSG9NobbDGKSQJEX3u\nOjtshrGAJvBCJwLxvDO/rWW217IF5VjA0qE6rRXo1lLWTefctJE97m+C7sVrqpqy2MBWATqJEdIS\nRyGpr/1BOUUqb90W9XqgFPYFKS4bBggdIXTkb0uL1bbj1gBdabryNvJxmBILRdC48iEMQtbrDbYT\n5IFa19S66kRttGkxbd1NYPAHyNb+UNSAkhilsX7/SNsi8SSn7b21FusnLr0kxAmYGdZrd2BYLz70\nRdaXDgpCiL+Fa0D+mn2+c7+UQ5Q1hsdP3V9TbUMc5zQ25P4jF3F/+MkZZWNQnmU4OdznWz//XW59\n7RvuA5IJRsVIGSA9DXf19BH3f/A7bKYuKAz3jol3jqh9B/ri5ILh3j5SSgJff9bVmvX5CbnX1JOB\n4Ggy4d13vwPA/tENCCKqskB7KLSyoDBoL6jSlAuaco2pK4JtR1k6lqYOtl4LESoMaX2mY7VFWAiM\n9RxP51D0x9VyLHTw2JvXj+j1XeDYbqimNWjbdqIl6BZFiNySm4wBYxDquZBMg0UY253gQlmcEZL/\nN1rSDxU39kbs+tHmo1mLkBFZ7HokobReV9NZ8YHrMgtjOzVhK5V7Pn7qYQMFwjUgtz2QthG0xuJb\nOrStu1a5vU9YinLDelOx9LDsts5ZVBHtVgXKGnTVMvYsxDCSFFUFQjH1U6bxQLHf66N8BqibBqk1\noLo6HeOyP+tfkVpLrpYbipX7jCAIqJsW3ba0fgRsIojymNw7Qs3nc5fZ2a0qlySJInTbdv0UKaRT\nrfb7R1qFkC1ymwU0FiMlJgTh97Y2LULrDq9ojMRY0P4ehGHgvtPabWvCAdC+4PpS4CUhxF8F/nPg\nr1trX2xr/kPgPxBCxEKIWzhL+u9/me94uV6ul+tfzvqyDlH/BRAD/8TXhb9nrf3PrLXvCSH+PvA+\nrqz423/W5AGgbRuuli62DJBUbc3Z+Yz9HYcpuD5JWK4LLi5dmvbxTx6yOL9EeNGSoze+RTh5FeIe\n2qeNq/MpsjYc33R6BINbb5JMbqK2DqjCUpYNATWZ9CCoSMGm4XjXzejjJGQ8mjDcc5MRooyL8xOW\nF+doL6U2m88RRtAL3GmRicKBYYztuv4SS2MtV/50u38258ePTjlfuGs1rTciEbYrE80L/wtg/cnu\nKxvu3LpJbi6ZX13x7DMHNDKFJlCWXuz+biwVWlgSD8CxdYmxlhbZlRSbsqYqVghv9KKUJhvk9AZb\n5eCAMAx49ZUjvvn1OwA8vvwpYZojfQosdEtrNY0wbHwKu6oqlFXE/lpSK8mUJfUKt0IIRBxije1g\nzctiw9W6ZFW4azF1QZzG9DyGRUWCIBa0bU3jKdpHey3fGa5ot+VCo4kI8MkH5bKgn/cY5yPS3qD7\nmX/4kw/p9R2X4PrxNSbjASp5bl5jmorZasnjh47LMZteEQQw8hOLoDGsNitqU6M9p6JJNSLLSWL3\nd6qm+Rx4qR8n5FmGrjS115DUAppyhfWCsWFQeKMd31cxTm7WSOe7CY57YlunIwlQ12sa2k5vRArl\nemnWdCrOadbni64v6xD13/8pf//vAn/3C18BUNU1pU9vImW5Kiq+fvsVru95EYxyxvHNG3xr6F7O\nq6s1j+6+z/f/6b8A4JWnp7z7V34dFQRUfnPUTUVVVzx94sqSTTbgen/CZu6aZVK0DMYjjJH0Dxwe\nIk97LNYrFh6ncHM8oJfEiMA7J4uIXt4nFpqTZ47J9/DkCR9/8BmpbwK9dtjnndduEEZhB7qxGJ6c\nTvlnP/oAgM/O11xtLNqn9UYJWqPR1j7HD/jNtNVVsEiwuqv1j68dYWYVJw8/Zr5y5cLqasnFxQnW\n4x/euXWLUdqj8g1a25ToogJVc3rpMBPv3/2YwTDneM9h/Mf9mE1RcHHpZ+2DCfuTnMneDj/7dacb\n8N6nD7j36Iz5vnfJUSlSKaq6YHrpSr5qU9BUplN0ikLFfn/IzX0HQBsMxyQ6wWjNpVcq+uzRA+49\nPaX188ZRPyXPe/RXbkOPJyMGoxFRLNkx7vd+cfcBSSZYexKVbg35cIfY27KNeiP2h0OkEh17NLSK\nWCVstoIpdU1PvEY+7ndlVDlfcHLymItTd22tNgS9lGYLZooTsiRhsyxpPWtKC0NbV+TeYFbrz5+H\naRIShopnJ2fcfegOtPVmw3L+nKU67A/42Xfe4NYrh/7f9DBWU1QlH911PbXf//FPmc9mHOy492Nv\n0nN6pj4gD5OYQAoa+3zEvfbmzF9kfSUQjcZoGl8PtdYRihebgh/8yMGPg0hyK9vnzm3XGDoaS6py\nwZNP3AZ88Mld3vlLC6L+TkedlnGPVW0ofLA5v/+EJtlh5P0Eq8unyMM9Bse3SSfO+Wg8GLNeVVz5\nG/ju/oRbr9wg3FJ7jWWzKvid732PP/yhAzzNZkuEVdy+5rKancNDwn4PZelk1Kuq5u6j845kdFFY\nav0cpNNq7epxLNZueW1u2Y5EJZFWI332UFQFvTghCmKst7BaUzC3IQuvHhQ8Ouet44A89WIu1smu\nrVYlz04d0EU4fX1q5V6yJkjIIoHqFJMarNBkcc7B2Cv7HO5xdXpO6+vvMM8QUnAxXWA9o3Syf5M4\n7bPy7snrxZT5puDphZNAU3FIlsU0pmWxdi9nJAQH+0dYT6JKk4hUNZQ+K1uuN4x2RuwOelzP3DP7\nmUnO5eldntTuMwb9IVmadZMG2Whm0yXT9Yb1dhpkJQLFvhdqiXNJudmQD7esSWf1p0owtevhXGwa\nHsxWqMa9zLtZyMGkR6ig3KpWoWmrssPKaK1dRuT7LFEUEEUBl7M506V7zqVtWK0r7t1zGUlbbHj6\n9AH/9l9x0PW33/k5pNU8ufsRv/vbvwvAe3dPCLIeI8+GnVUCXVfkfm9PdvuEofocNmHL4v0i66sR\nFOzz0aEwAq0NHz96xsybdcR5n3v1ZzypXZr/zTffJOll9DxiUMYZgUrBQORb+vtHrzDdf8LmxG3+\n3/7eH/BbP32fHf8T3xpl/Jx+k9f3bhL7zxmOJlxcTKm8tuJgOOLa0SGhb3C2uuXhg0d89OkDegMX\noKo6wLQ1G49iC5Kb7BzfoC1KiqWzjTt5dsGjp5f0hy5wZAc5T54+Yd1s7dPbbV/oeZPHay50dGs/\njRC+qRgGimq14ZOPP+In730MwOmyYL6pyCJP69YB42TB7ZvuWrMsZb3eUM5XnUFJ3Rre+/g+5fvu\nWrNU8vregFtHbuS3ezRmmEnifMB45K7/3/v3/ya/pf8Hlj4jCeIQWkG/v0Ov504v3QoWheHBiXtZ\nN1czrg8zjB+xLqs1u2JMbVu0xySrXkIvGvPBUxfs77//Md847HHnloPBxFmCECG3Do449vyCvhiw\nlgrd3nXXEgSkSUISbs1iaqaLFe89fMqFh09ftYpRPuAbxy6bmMiEdVGQbzYEcit9X1IqycID0D6Y\nLZgWNfv+zy8up2Sp5GA3o/IZQWE0dVmAByJZa1FSIn3Nl6UhaRZTLJd8+JFjPNo0Z1k2ZCMPe55I\nZqvTLluN+iNXOipF5IFUb7/9dZ4tCn7vhy7zjITAlEu++01XKu/u75AkIZuyQWwRvS9t416ul+vl\n+rLrK5EpONCRB2aIgEbDeWF4UvgTpF4zqBsI3Yn4nXe+Rotlf99F18nhNXr5hEYkWE/SSfo9jm+/\nhfDEpb863qW2mp9+4CL045MFb92ymECiEs/sGx1S2XtUW1BUkhPGMcanyVKFvP3m1zjYGfP4sRMl\nefjkIbpe0S7c6RZUYGWfoD+kEe7vPJ1NqZqWoz3XvMt2dghMxTMvfCqamkYLWm1pO2Vpi8bSDXs9\n5Hn76zxOQME4U+zvev2EOCWZ14S+VxFKSdU0SG+ckg56GGPoxQWXvqG2rgzZaI92W3MGkuWqZuP7\nFAdmSCQsloq9QzdtfvP1b/Dw//wNnnrBEWkjBoM+QaBYe8XtxdWKIJ/Q77uMY5yP2EsN/didonWx\nodwU6NaQesxBHo+oRYq85jKdW3u77KSW3DeH0zShRTFJc5oLl27rYQgiR/lnFgcJgZLkW7OYtIcO\nMvbKht3UZTHzVjEZD3njwH1vGjS02rCZzYk987OqSvIk4dVr7vpFPuB8sWDXi8Q0ixMme2PG/ZzC\nuL5DWa6wTUO92SpHSZJAduYwu4OM0WhIv5cwX3hx2mQHG0QcHTgsTJKELGZPee211wGI8gEtiuuv\n3Obbv+KBYdGQ88sFz566RulyNqPaPOP2G6+6axOKQR6z2DRoX87ZF/AVf9b6SgQFeI5fyQLLIIkp\nyprrsUt9Xj0+5GB3wLWbLo0MqxX7kzGnK1ef5r0EkwtsIMA7/LSJYve1V8l2Xcp7ML+iLla8842f\nc/8m7xFLQ5j2MZ5TMRofUFbPJwCNhiDOsFsrNGPJkoTsaB/ZeLn52WOuyorhgatxb1y/jkp6KCGQ\n0suoY7kx6ZHm7gGtl2dMbMHAq+9cIni6KJlJ02V5xhoHjtni6rGupPDpYBxJwhjefGWfYeJ+72La\nsF62lB5hp5RlMuqT+5l9EsWQZpRZxcQr/dRWQRjTu+Xq0zxL2E0CjrwzUt5zLlOWgNGea36tig07\nYUL/5qC7tiiOSOKYxAPOjo9uEKkYsWVA1hZTrymW7pnZugbvwiQaP8fvJcRhwmDrkiVzDC2B2SL5\nLPWmpJdmFE+8K3O04neb20R+/8RpCkJ1vIw0ibiR5ezt71B5lqeQAUmWk3hCl60LiqJi09QvOGVp\noiDkxtDdu+Nxn3XRw/omaBQOSZOAtjHIhSsdi02JTFKWS1cyBRj2RkN6gfueG5MdenGfo9de47VX\n3wHg2ZMrBCHjXXfADXcHKPU2iX8hlEiBgF5vl2992zVpF+uGfn7CMPKTksOMO3e+Az54fvTghEAF\nHsHK8/3zBddXJij4YMowUdw+2qGX9zg6ckFgsjthMBiwe+gRaHHA+dN7fHbfjeKmdcMvvXILmeYE\nfvwm4gyyHplX2+nt7aKhA9dYrKOTGsMWGz3anZDmPYx2I7GHT57Sfufb3XgrMAZ0i2lLdkbudE7e\nuMN6eUTsX7zRwSEiG2OaCulHRGmckEaWxAe5w8EAPUopPdPvYlFjHp2zuFp1MOctf3DbaJQYjLWY\nrXVemGCtoB+lhD7w7cZQDWqqraegUoRJSpZsbeQUKk1p8obQTyTG410smsSLAuRpxqifdb/GtsgW\nGq2Q3qZvvp6TxgmJJ02tyw26rYnTHCm3gCZBKC1qS26iYdMW7h4CjbGUqw1BlCB9Q0zphiSMnpPW\npMXKoPP/KKuKsioIjSTqufs/lfv8w+kOv576yUIYopFou93aAZEUhIFg7PdGqBTG1h16tLaAEDTC\nkmwpy0gQEHurpjSK2VFJJx1vZIsVgkY7vUlwEnOqLNHSHRh1axgNB3z7dRdMB5FgcTnl2vERR0cu\nCF+/dgdMAGJLU4WqXCK8TyQewGWbltirOV87OuD44ID2DTcNkmZJ2yw5vXRN0NnFgkB9/tX+86i2\nv+wpvFwv18v1ufUVyRQsgT/B+4ni5v6Qt956oxu5RMMJKhsgfDpOteLy4oyidh3aD7//R9y5eZsH\np09Jfd3+nV/517BZ34uKAAJn/rnFUtnKOxo3XfaQZCFxGqD9yfTpvQc8enbKba/YI63FtiV1saL1\nQphBOmB/eIjcgkPCEBm6+bvowCQWqYJOVzBRTg1GefGWVkfkUYiSoiNaCSFQUnaqymJL+hLbfxNA\nE5Ao1/cASANFm5S0fkrTILFBTLjVNBCCIIjI05TYp/k7YQimJvETljROUaFE6627laWtDbp1pCAA\nFUniYc66dil8VVU06w0i6pP6awl8JmZ86i9NRSxbCg/KadqWumkQQdRpRAS6IjRR50EhhcA2DU27\nhffW1NYgRU527PbCHz3Z49NySG/ifmalArS1nQGLbiWxkERSonxJYawlkKLz1BCyZlE6923pYeRS\nSUQgCOLnfhhKhAgP02514cZ8TdOZ1yRJShgGVJXL1FoR8fRsSvKOw9dEynB+8pSDg0Pynst6036A\njBOEF7iVWIzYoNmqZ7UgJG1TIDzgKYxzVJhj/b6si4KybpnNXNlyfnLOzniH6GRGWW+xEi8Q6/6M\n9ZUICgKJf18IgNnlJbPLU/Kxe9EC0wOSDi9utObx/UccDlzaPB4ek2YDvv2dO1z4es5WFaR19xJJ\nhCsX/AaUVoOpoamcYg4ggpYkjTHelv3x6Tl//x/8A/7mr/+7ALx24xroCoEg9KMqEYIJBa0nq8RB\n6FibUiEDPxq0lqI1xNFzCW5jBcL3Pzabkko3ro/QlQuONyC2EyUhEfa5NgJGo4RAWYH1giLoGtMW\nnQXfsqjIxyMC6Wp/q11wMVqz8ESxLE8Z9HMCz8uQMkYKi97Kz1tJrS2qaml8M3W0OybMI4y3U6+N\npapLWlN3ja1ASCLEc5McFUJgu02qRYBtA0xju8DXGEFPyOfPWYAONaajNWhkC0EimLeuJ/KbzyKq\nOuSmx5pEkUQbTeu5KTqwaAJkGHZEN6IQEYWdgfF8c4ptNWmUk3rbwbm6QkuIfLAPtAXznJxFo9FN\nRVXXrHy5luQ99g73efrsib9+ydmy5Le+/1MA/vXvvE2/rjh/9IiBx2Kog5asNyYIvVUhgGlpt+VD\nbZG6BiOovftW1rcoaWh98GnmMxbnTzh56MbKl7MFbe1YnpLt/eYLr69EULBCdFr5q6bm5PScUS9g\n0Pfw1iQjjZKO2GOl4vqdr2P95r/+xtfo3bqBiFKu+9m/tjVpK7BeKccogzUKYb1QRVuBLpHNGttu\nHwDkQYL2WICyttx9cJ9PP/0IgNeuHTrqntUY60kw5YZmvqHxL6bav4lMr4FwuoQAIkiYX0zZNieS\nYQ9a070gV5uSZVXT2K0Eius3GugIRX98GSzSWpq6pPUAobrRbBYL5lPfBEUwGI26zCdQEmM0CkHo\n9/bJg0eUwwH7vl8TxJKmrjqrPGsFWjeoOGJ64jbd4WSHZTsk9mCZ0BQ0dUXV1ET+OYYqwiKRW5GP\ntuHs7JLNxr2sSZgighAVxUgPrFkXBXEQkgVeAVoohIlgyzJsG4wVLFctv3PhAu4fzEc0hLxyzZ3G\nS21YlS3a9zLK2iBNSBqo5ySvNMZGQed0XrUNrYbp5RWtv1fzqyWTnXHncCVjhW4arBdzaduaoq5Y\n101HTR/tDNnb3+9g2oiWVig+fOaC6eaf/5Bv3b5OHCfkiXPoktRYXZHlXm1ZBmzmlxQzh7yN1RAZ\nKNr1BiH9MymvaJsl1dx97vLpY548us99LwH/7GrBw5Mz6rbpSHUvwq3/rPWyp/ByvVwv1+fWVyJT\nEAha7U6YWdVyaizD0wV7Ow6NmA/HJEnW6fkpEfL217+G3HokRDHVZoWyEHm1YCtTp3O4JbjYxglV\nbB2A6wKaAlOuOuqurS2RbruSQ2Opdcts5rT+jW5wui0NdeE7zOspxXzRiWoO947R7QbRFkgPY7YI\n2sbQ+JRQtwZTazb+14umZaUtjRHeT9JRj5W/BnCRXgg8599lEVVb0xRrrE8r10XD1WxG6U/j/u6E\nKAhpvJdhazRtsSGSkmDbH7AwvbjshE52x2OEbDr3qkDFKBpEvaD0Xowf/fBHTIM3kdKVbzoKaO0V\nddvS+CyrNQZpBcbzoFerDU3dkqdbKLEiGQ5J44hy4a7PyIZVUWD9iR6pDGNsxyFojWBuUv7nj8Z8\nf+E6+lN2CCnIcq+GbGuKdkHjeyJVYwmFoDHaiZsAAk1bt51ydppEpEFC29J5Se6NRmRRgPF9Kxuk\naNui/f6pmoqibihbQ5K72r436JP1cnb3XCkjsRhjqP3E6N5FgeAZrxyMefrYQfiVsAhBR/kP4x7z\ni3P+8HtOq6g/+hipAi5On/Dzv+QEevP+nLrasPAeJs+ePODR46eczdw+eP/+Y9aNxirZjST/HBPJ\nr0ZQwBqs9jP8JuLUQDZrODxz6dHO3gVx1uuAO02t0WVB45l9q8UCVi2D3T2GXhAl2btO3euh/eYP\ntK/JtxtDt9imxpZtVz7oqkLZ4nlzTzgUe+2x97ppCFSE1W333Zv5FbaRDA/d92oiNpdPUcWK1aUj\nsCxnM4w2naR7UTYIo1lX7nunm4JF3TgCi3zed0DR9TvcfXpB9BRBWdeIqsAWbk5+Nd+wrqpuPNpY\nw+NnTxFbC3ndUG82BJJO0SlMYmhE56YsjSZNZMfGNEoThRqpJcoTfx5/dpfN4D/C+t6qCBKq+e/S\n6IZ6K/gSKKSw1J4XIKWk3+8z9QYmrRbkvZKqqZgvPUMzViRJxtozIAvbIGNF6+HUlRVM65gfLQ6Y\n1640S+0VjYo593wPGRsK3RCr0D8Pg7bGEc78tYlCoCUdszKyBjDkSYrwo8GyrBC2oV7N/H2pEdZ2\nuhnaaKq2QYuga/Rm/R4yCEhzL+ZiBIF4rrOphWRdayojWPrAfXExI45zQo8/6fUDkjBi5N3P7j25\nC1bxyvXr9EYT/1xbFssp5xduf53Mz5gWa9b+Ocskpd8LqC+nUG0bMn/BcArGGlqxlS5TbIRiWhpO\nPFV6/+IckUbkfnNcPblA1JYTz2uYLwskGYF8yugjV/+/+Z13GbzyGsrzDVoZElqD3GYOnoIkBV1H\n2aI4ONijsQ45KaQgsYJ827XWDSaM3A32JytKkY8PycbO8cfqALVpOb/7CeXUZRhZELHCsPBWZ5u2\nIUAwXfmNsapYtxqE7NR8jLTeb9Ivq5wYip+taytohXQoSK/eXJZLlIoh3ArcRjRFQVW6+yh0SywE\nUgaorf+CFIj2Objlaj6FJuymCK3SCBUitTupAXYmRzxahtTenyGN9zEYLIamI3AZsKLrzzR1hRQw\nHrrNXpQl89kpAkkc+xc87WOV7bK7qilIgvy5IrTRzGrJSqdOzRj8KWu457ONew/usr8/pn+QbncX\nhgZD3TlIN4Wgsi2VBx2xrkiTHiILkR7QxLqkXm7YeNKUnQSEUmH84aWNQFuJlYrSZ0Np3qNFo1/o\n9BtekE1DU9cOIJV5OriWhulmTlz4Z5bEBP2I17/hBISOXrcEMmTUHxB7UFfVXlG1G4rtlMMoon6C\n8ELAMa6ftVYhpZ/2iD9Ho+ArERQchNf9Zy0MlYWNtpx6QtTjkwtqYRn2verygxOO9q7xtXecoUb/\n8A427EMYcDV10XNdzmhOLxh6cpBIE16UtfOSPg4h6DeCDDCplaEAACAASURBVEOu334dcJRsaTS9\nEPbHvntvWpCgwphoS6eONSGS1p92bbumWl/RFg3So/kUEoml8BbxLYAQzAqvt1i3NAZ4QbnYWgdW\n6oxlcdnBdsDUILFJho4iAm8JH5YxV6uK6dSlpmncIwkkttlaoVtkFNBWNdqXFNKbhmwp2VJYjLAY\nTwoTgCWkJKAR3lSmd8hg3aK9wlBvPGZ1Bo3WxNvrFRKNQGyDS90QoAi8WczOcOgVlWR3iGnTUFcV\n1gcbISGwgo0vqdY2YCoj5DDArtzn6CYAWqb+BT+5mIKw3PEIU6GcpQ5S0Pixa1VumF8seOpt/VSY\nsNvLCBqN9DD5tpBczS3VEwenPlxX7BztdJoFBgeEs0oy3nFQ6DRPqZqiQ04iPn9ACyspG835Ys3P\nvOHQiVlk3TRl7bO9RUW11Dx77EqDq2UDBhbzKybXXTP4lTf26fUsgbceGOg+Rai4+sQ1GuvK0h/H\nDPt5px26Hb9+kfWy0fhyvVwv1+fWVyJTENClxS2GSmrWRjJrXMx6crnCotFenQljOJtesPDGqvnq\njDAfMTg4ZHTsommsDmgliHBbGjgHhE4NSYYImWACjTW+7o1iqjZCbcFMtLy6N+LGvgNECaux1iKD\niDjzFOFKc3V2yacf/QCAvaNjjl67Tv/6EeHcN6BqzbPLBfVmS4cdsmxbzn05sWgsGumOlS262NrP\nG6fgoNmtn5NrI5BpnzZJiRv3PQMrWLdXPPvUZQp7e4K96zdQ/t6WxRoRKqc96Me5s6sZF2cnTHac\nVsIrx3tEeYD26tpxoBChpFEJpRfK3TQBr04yhOduqFrw0ScB66Ik9PZ/VauxwtL4TtdytWZ2OqXx\nY9jRZJc0ycAqZpeuzJKmYrDTZ3jgm4ZhQGug9OCgZdWwe3zEXzp+m08+c6f8o0critJyeuoyxKqq\nmU0X1Fu17TgCCVYoIp9RQcN6saT2nIve7hg72WV4dEzbeAfpywtMoalmrq9Vty0yCpC+V9GsLDaQ\noBQ7k7HfU64PtdVWedEdyv8OtZH89LMn/OzXvSJYPyPJEgpf+3/y40948OET1mvf5yJFiYBI0XEq\nZLThzls3SDL3PKJKc/70nE8enfp7bwikZG93p2vGL5YLvuj6Ug5RL/zZ3wH+K2DPWnshXK773wB/\nDdgAf8ta+4d/1ndYQGwFIYxBR5KNgYXPwuZFS29Zknr3535vRDraIeq7zdNoSTFbU3OOSNxGzXdi\nwixHeIy/QSDsc8FMIRWoCBFplN+4KkwI4z7Rdu6cJLz71m0mXnxDYr1whkR4hygbJuzuZejSXexy\nMceu1wgs0uPk9aakKksCf7urqmXZtMx8mllYgUa84ISEQ2C+sKmM0a4Tv+3uW0ma5oheD+1l6eI4\nZjwY8u63vuWvZUOe5hzuHfjPNIRxSLFZM/X9mLZtuD14nX6+JU0JgkR0rLooUGghIEq6PoSpS/aP\nY9aeH1GLACMl62JNkng5NgS9WHU9nH4WQZ7TetxIWGlEU2CNYOhLijjN6I/7XaO3tZZVW1N5zEG9\nmlNVp7x+O+TaN1158JNc89NPmk6tSQhJUVQsfeNxlMYQBljrgF7uPoXs3TyApy6wyMUVSdNSz+fd\nAdFrS6Rekuy55zzaHxPKqLv/tdVYJRhPdsm9ynXbNlhj0e2fgAkQDS2S+ydTvvdHrve188vfJEol\nQ1+C/PzPv8v1ZAe58ROYbIy0CmNKNpErUV/5xisQS+ZeiPZyuubjz55wPvOsVaUwumY8GnP6zAXL\nQa/HF11f1iEKIcQN4N8EHr7w2/8WTqz1deDngf/O//+fvsTz4stq113TxrJp3Y1ZFoaZauh5X8hr\nO32uv/UmvWMXbYN0FyNDRBAgvM9AI1p36PrPdd4QTh+/+0oMSEPrO79RPsCkOTseJPKdW7d4+9Zr\nBFtbMClQtsUKidlCcZOYIEi59prbPOurK2bTS+rZlNrDTs3VkkAq1n7jLqqaq8aw9CdKK1wPQfLc\n6eqPY5ZaU2OMk1MHEEbRqJRgfJPa9zM0J1Bq9nwPJM96zM4vWU+3lmqCIJS0TY324KTxoE+exhjf\nOA0Ci7RtR0WWUtGGASoU3alfVwV1U7EpfdNNb1AipKgKlr7pGUqJ1FUniR6rhNHemLrcNr4CwjBy\nyZEvd6XSWAmVh5A3FjZasPbTFVmVfPzZJ4TxJ9w8dGClb70WMb8yLM9dFhkkOaIpeXbm2Ji7O2Oy\nLEKbpkMA2iAkTBR7R15LcbEhaGuixnQjSa0b8iQg6j9vCNampvUTjAaJDiP6wwGtTw2EiJC6pfK9\nI2HM57xApXWfU2r43h85Cv+rBwd8K9kn834ZSdLj8NYOZx+7XsbF9AkIi4w1O9dcFiwCQdO0TC9d\nUHvw6CFUbQfua7Vmvliz2VSdynWWpnzR9aUcovz6r3GKzi+eb38D+B+tW78HjIQQR1/4al6ul+vl\n+pe+vlRPQQjxN4An1tofvdgdx7lBPXrh11uHqGf/H5/ROUTFoeKN1136tLc/oTWCp88uuPfQYcjv\nlSHNuWH9oRcy+cEpVv/zDguehCG9SDHOoO81C64dT8gjSe1r5yDJWW8sDx55GwoJb715h2/9wr/C\nL/7lvwbA5NrriDDmxI9x/rePP+E3Pvm069weHR0xn885Ozuj8iei0Q0qEIRbAxYr0K3LSLZYAGMM\nAbLjEzRG0GqJ9uAmYS2JDDk6OGDsBVRPTk+IoqibPpSf/D7njz+hn3pr8UCwKjekSZ8gcRTzUh1T\nxZraw54rNnCwQ+pP4qqqWCyXzBcVrecotLOC4Sjm1u033fUniun5KeOBuw4RpaTjA97+2V/mzp77\nnkAIdn7zP+n8GIyG7/4MhMmQ2cKlsPcefMDsYs5m7acyhMjeHjJ1/ZkPPnzA9HzJ5cUV+OwnDwJu\nXj/iju/MHx73uDbqk1/ztXN0wK9GAZH+35Her9FsLvg737ji7/22yxSu5qesNxXzPXfyBgPL3p0d\ndLni0vdw6nLD08ePuTx1HX7TGlarDfPlmqkXjjFW8vjpFY/OfZYSSG5en7B34O7LcDxgMB6Q3v+I\n1hMLfv8HP+bsbMrWUfHv/bf/C9qYzwHOhBRIKbs9JWXIRuQ8Eq7mn4RP6V8fdJiEzUXJ+x8+4A9+\n+CMe/6bTaKzKreOYe66hCokiwY3dbYkQIHRJrhSjvhebCf5/dIgSQmTAf4krHb70etEhaneQ2r2B\n2+yJqHl6tWC9vuLVW25z9HsDFsuCz7zc9rJqaNvnLrxVVWGbwImeepbb5WyDHGTEvg6ui4pRL6G9\n7urrew+e8cmH91BA7c08fu3f+Q8ZHb7oZePWVlH5/PycsiydeIVPC6MoJDQtqU87+0lCfxgTBBLh\nFZuCwM3iK59KryvDYq3Z+IC1Whe0pkEoy8WFa7oppej1epReq+/00V3yUDhbNaAsLUmUs1k3VP7v\nlFVJFAkST24aDlJCmZF4ZSltNFezK/b2djmfutLm9OyMBw8fE3nA0403X2MyOeDixAXPwXiAjiNO\nnj2i53URwzDCYmi3JqgixcqMy6uan77nxmL3HzzjYrZA+llnliVE5YrAKx338ozlqiTIM84vXHB/\nfFHy+OIJD5+4xPSdr+3zxs/c5CgZ+QfRQ8QRgS3ZNmCkbZFCsCzcgRElGUGYUs5dMLo6ueBqkBNb\n3aEGVdOw30tJK9eTqtYFcVEQRyFJ5vZh3RjiwzG5v3frsqJdL9ks3CuTRCFrKZxWpg8K07lrcG4Z\npkYGbrS8xT740ShSOodtwCqFlHQ2d9QlbbNB+XF2L4y5dbRHoN/gzesexXk553J6SeR7OuNBj+Ew\nR/l7/fjxKZqIJIlY+r7V3I+gv8j6MpnCbeAWsM0SrgN/KIT4Ll/SISqKAop6K5IRcLyT8+brr3G+\ndDf33oNnXF7Mu9lBGkuSLGWUuahdVzUn0yXPZgWrygNJwowoKJiMXU2Y5zlXizk7YwdmqqqWB/ef\n8Qc//gi8HNjetf+bX/i1v971IaQQBEJityrAUrIpStqmeu7blyiu93rcOXQb9/bBiL0sIIokYbQl\no1ggZuGJMo+mG+6dbLjwOIVHFwHni4JnJ8+6l3NvZ4deEqM9ijCUmigM0Z5ZGUUpV4uNc1HyGyqL\nBLv9nIEX4xhmIVEQYsTWYQkmgz4WF4gAzi4PefjklKknUV0vK3Ymux2Kc3byGFTA7PQh0z0XpMOj\nmwgRdJZwLRGrJuHx2RnnK/fMzlcRT84krT81R70N48Kys+ee4eFkh5vXj2lFyLmXm//ovYfcv/uM\n+yfuWkoDKk+6icZBFBKZHiZIwGdM1hoi01B7z8fIVlzf2+n6Kno54+SnC473dsk9YChRgiSSDMbu\nZJ3VBXkvZSlh6N+Ism5IxYpdz5pcNTmVtQTem9HKkGJTY/SMdOSAa8vCMF9XBB5vYmXg1bNeqLB9\nUNjS0JEKoxTS71u9KSl03Ym5YAyTUcao92pH1io3JcVmReTFadNIkSRRd4AcjzOCKOJ0dsVnXgS3\nVp+38/vT1p8bp2Ct/Ym1dt9a+6q19lVcifCutfYE5xD1Hwu3fgGYW2v/X6XDy/VyvVxf3fWlHKKs\ntX+SGcw/wo0jP8WNJP/TL3IRbaud1gEwHo/Y2d3h9374AT/5dJtkJGRhyI5HcO2Oc1492GXkU711\nWfPBvSfM5kvG/jSgLVjNNb7U5+goIU5ynvkRTd4fkfdzVmXDo8dugLKcn3M1Pe/qeIFgs1rTwf0C\nRVtXDNOYawN3694+GPIzN/a5fehl4vOQKHqu8Q/QNi2mFTTGnTLHOzWD4JLHV+60DoSDLZ+vClpf\nX5dlSbHZ0PMnUxgIyqIgjzxWYLmibTVJmiE9/PtoNGY3y8i8MEgSCkeX9rFfSomOFFobdvzM/mA0\n5ObhAXcfulaQrWuiNGEwcaffejGjWF4RpuecPnbyd9lwlz1Ep22pgyHLEmoR8fjSXcv7n54j6pJr\n110P4c7tA64fTjqx3cF4j/5oQtLP0X4MuPrVBT/4wXv843/saueLyyVPHi/ZmXj5/OiMUIWowT7C\n06tVUqN0wzB31/LmzVfY68UMU3cPhtIyDGAnlgg/cRGNIQ9DtO/55NcP0UXtTlr/7OfzOWXTEvox\n+JOzSy43BZXvxVyUBfOqwfT71MKL3lrQrSYMtxT/0Ll5bIl7QjgNByE6uvUWf9y5cZclZVt2KHqM\nIApABYLIlxx5mEI/7LRBQulG1lnf42Ju3SAIA4Y7fVYegt2ee3/RL7C+rEPUi3/+6gv/bYG//YW/\n3S8BXD9wm2cwSPnw3mPe++RxZ3U+zBWHw4wb++7Fe2V/xMEwZuCDQmsDbu2PuLy8pO8Dh1GCDz98\niPD1XFmt2dk9ZOldeNerAq0bBAbjR4Wnz57SVGUXFNqmZVMUhN6IlKZlkkfcmmS8feg9KG7scHPS\nY9h7QVA1iomiuINuE1mE0TQeNx8qSV9OmDxzaXMqLXVd0VjDdO3KhcvZlF4vZZj4NLitCbCdGczl\n+SlZr8emLLjmwTO7aUwuIfS1fmAUgZJYL4CppAAr0cbQiK1zkyBIQwI/7rp7cYGUAdnQlUOjw2Mu\nHt+nWc5YewXl82dPeUUENInnlaQTxuOYz+494Xe/73QC2sLwC18/4q03XR18eDBmb3eHXt89595w\nlyTvEyQBygfPyTDlaH+fY+8G/Y9+47e4uigAdw9U0KOp12QBaI8/0bZP2A/5ua+559pTlqNxTKrd\nr/eTiFA39BKF8ESlFhBZ2hHHhFTYsmJktDeahclqiVltMB5/kseC+XrDiWciWltxflXycFGzsWf+\n9xpGeYASW/5K2Nn9bZcRrtG4VftSWAcm0y6YNlVB29Ydu9G2FrQlkC1B5ynYOm2JreGstE6lyn9m\nGgYgYJRl7HoMxWb1F0zNOQxVZ4HVGMnHnz5msSjY6bl67rAX8+ok55ZHul3bGTAepPT6HosvIkaj\nHTZ7Y0K2wqCGLBC8f89t0jydkCQxQ99Vn86W9Po51XRB4tu4m9WyCxAAbdsCtjNgGeYxtyYJX9tP\n+NqRu7ajYUQeSyLfY1BJTBTnhGGMMS9UZ7Klq+rkilBDeOxOYyUF66alAraCO7PNik1V8cYbb7if\nsW2I4sTZrANW1zTlmlE+YNcDjyIMSjzHucsghCAA33i0BpQwznZdbufxLaGAng98uVCYokZ5ubY0\nHxHnI9aLOVHsgsLq5CG1TAi8IY6Ih1TFivufPcT6ptsbt/d4584ufa80PYxD8jAm8Y3gKJVEaYiK\nY5cqAUJFZJnk23/puwCUTcH/8Rv/lA/fdxnK3vEvE6U9Wl0R99zPvKokwkbgMQh1W1MKwe7Y/Xkg\nDFZYtITQi70GaYrIeggvZ0YQoMsCW2zYnkRhIDCBwHip+6Pre+TLZSdWUmjN5fSKh1VA44V7Jv2I\n+AXBVCvDzyMahQAE5oWBndUtytadd2SoBMIqis45XFDVFetmhfQZlRKOo/IcAyGIogjpMwltNAIn\nSrxVwo7MXzCHKAFMfFD49OmCk7NLdgcZb153J9HRIOX6pM+xp5Pu7gwZj3eJ861CT0hSV+RpgvUp\nom5KogTOvRbCbF5yeHSdeuxP2ssptm3ppzHW03sD29BuNh0xSbctRhtiP9Pb7QXcORhweydm1+vH\nZQgioYiVi8hx1ENGGSoIebHpbNVzKTiCChsGZJn7nmuHIwobsNIhU2+htqhr1qsli6lrFMmbGUEY\nUfousgojmqpmfNjrpg1KCKRSyO2vXd6J8BOYQIZQN4i2AQ8RxxqkkgS+ROqnCdVqSdt6IplQpNmI\n+aZktXDXxtO71JMUGbiXLAwU9x98xtMnZwx6LlP7+msTeonqpj+BignCBPWCBqJUwkmx+3GZDlOk\nECQ77t985y//EpvzC37nj5yc2Xs//JjB4Jvs90QHthqOhiwuLtFeEWk8yDnYSQlwP1/TtiglaY2m\nG8rJECND8B3+UERY0WIJOsqZkBFkGYGHNdu4ojWakYd2b7RlZ5Bw/2zToRzTfEwkzHM1aqS3AuzM\nO2Cryq2fqzXHZk0UeEWqOKEVmnbbxC0bdK1daeOziUAK4ijo3Kws0jez/dRDa7SuaLXt9kasXiov\nvVwv18v1JddXIlOQUrD21NGL2YwkCnn71WO+tjVtzUIGacZ46LKJ4XhAPhiiIg8/BpCCQNKZddQb\nixCGa7tutn529hnnp5f0hu7fjEY9tLFcrC5Yb1V61kvufvxeR5oKlUQkUVdeZKFkJ4/oRRGB3I6d\nXP9Ce1xy21qkalFSPfeBxOkvbPkEQlgnqyTdr9MYro973NpY7s/ciXFWNLTligtvBCvNNZQKqfxp\nYWXIsJ8x7OWdipLzipCILXneZw5brUgVpRDUtOWa1s+vpZRIJVE+hc/yhHJTUnmFoY2BME4Qcc7K\nly5qfo66MaDd+h2sC65ma9Ybw81DV57tDSJCFRJ7LooMI2SoOkVlQejTadtpSAhl3GktXOky2r/G\nz/8b/yqL0mVLJyfP+Oi9hDR7i7H3oJCRpT8cMBq7vZFFAtu0tNZrC4SKMAgdMcj3C6SSaGk6qwVj\nWqzRHgNiuj1l7fMm7Vbzt++1HyY9yc39Ecs452Tu9m7TauIsYeDLOQEvAOvBGosxDdq0nVO1rC2y\nukT2fa/C5RZdCRgmisC2KDKMH0frpkbXNUJtIfEBtW66TFRYl2kYAtLEXf/eTsIXXV+JoKC1ZrNx\nNdRivmKcxtwY99hJvVnscEAcJUQ+9RRCwh/TGgiUwirVgYqskaAtfW+EMs4znj5+xrF0s3YVOB4A\nUrLYuA307HxKfveDTmw0CRUyDehFW0xCSCIgUBbpO8wikIgXpNhr3RCLwJmFbK3orUVo0wGPhLXu\nRfb1haIhVYJhbOl5Il8WR1RtQOKnD0o4NeP5lQP2DNKcneHAxZZturoNQj711FojAtt11NmKtliL\n2HbEASWkIz0BSRQhN2uqldvoldbIpEeYZqxXz9WmguiGY3YCm00Nsk+iQm4fu5czjwRJmpH6vlCa\n9wnjlDB1L4xKEghCjJTddMd6lqG1PmUPFOM7r/OLv/orAPyLf/J/8ezBfSaTnMRjQOJwTBxnBL6e\nFljWyyU+y8dEAUK6O7RN2WXbIEm652GNxvqmc0dxNK0DrXWB3d+r7csqA2KpONoZkPnDyhjjDI7/\nGG9l24cwxtC2mqapOxdoWZVU8wtW1u3/1G4IVUQifI9KClQTIYKwa1SjwbQtett3xClMCR/QBAak\nRkrNuO9e8UE+4ouur0RQsNZ2jkXLxYY0kmSRpZf5plQoCAKF9je3qiqCsOo8CPFsQikdlRVAJgmi\nKQk8dXow6PFotuLRYzfmtNKAsFgpWPve4r1Hz8hGvc6DIkpjkiQg8JtnEEdE1glxyNAThoIAoZQD\npQAqDBEqwhJ0MGarLbLV3aa0rUYguocqlEQIjRIajzsiUQotA/p991JJYbBtw3LuyE3jLCMKpG8o\n+RMwEN4qzIvGWOe90GxJPC0oo11Q2NqJGdeQEj7TUUoSSoGp3MnVlAWmWlOTUXiqsa0ays0GPGBI\naIOyLXs9ydHQPcco7tGGY5rAPSMbDwj6u8QDT4uOXBPUqhDpnZusiBAqxPhOnDUaGUbc/PovAjCb\nz7n6re9z94OPGfhH3+uFyDDu5MwwtfPkSH1bV0nX2LOm85fAajAt+JfMWoG0rhewzTStMW4/bbMw\nn3VZv5+0aqjqBh0axp6t+94HH7Ip6y67+C4uEDReNdoFhIa6rilLL/FXblifn7O6dASu2wc9krDu\nWGKBVS5oSQmemRvIwPVU/M9jmhatTQeacj8ACGs6pOSW+ftF1suewsv1cr1cn1tfiUwhDEMqP4vL\nY8XxYIdhnlB5D4eHZ1Oq+pyePzV393Y5CFJC7x8YpRkqijBaU/sudCAk7XrFvHBRerapWBUVa89B\nT/KINMsIw4jAj820MJycnHQyakkUkqUJduPIKgFOZEVLhd5Ch0WMVRGBr3HjLCcIYwdl7eDFLdJa\n9JarYRoabSm31GkUtTAEgSDwXeIwEETB88cjrMUYTS/dlhMWKSxNXbAo/USlrlGhIvWKyb3+gJ4I\nOwCXFi1Yl/qG/rNr04A1nUBsq7WjlXsJt2Y9R8QJLS94KRiLrjbocksZjlmcP+VoL+2mGI9PFszr\nggbvxZglvPHm63zr3W8CMIp9TyGKwYOgNosNJ8/uMpt7UpKU9PI+R9ecZ+Ib3/0V7v74Y87O5zx+\n4jK+4SDjMO51fpOaFiVFx7nQRlO3DaFWHSdBGoNtDNZPYIRpneZm1WA9bdtqjUC59AqXOaAEgR89\nm1VNpQ2LpmDo3axni4az2brLFIy1tFrTeGHguqqp6pqyKtisXKZQFkuqxvLJh250Lt7a59pej9Z/\nRqASsjgkjFIiXwoLAcJojDe8UZslTWWQfvogcWWPwCB99rAdq3+R9ZUICsYKLqfuxbu5N+RaP0ca\nw9m52xzZcJfJjSMKHyTefzzl0XTDnVuuDrt18zpR2HfpqNmyFeHs8ooPPnNoxVpGHF27xl2PW6gq\ni6FiMOyRDXwarBRHB7vc9ezMPM2Jg5BN6xV9o5gq7vHpRUF45V7EOGrJ8oJrR+4zbhzn7A40cRix\nHVlfFSWnlwVnly4gzZYLDC3SBzAlNHmaE6qoM9oNQoOShtJzFByewMmVA0RIqCqmq3kXbIIkoV5U\nhMqzR6dLbr0ak/lNGwQKYUFoReU30JPzE2bTc2ovZV42G1rdorcs0KqiMYaWmsbP7G2UEwWC0itJ\n1XVFs5yxs5N3Uvc3Xr3F7cEE48uqcrNgs1zz1LsYiXKH/sEhapxiK28YM59iri7peZx+7+g6/d2D\njj+hTcJb777LZ//T/0qvdoCmi5Mzer0BTe1VuRKBjFT3YrZa0OqGUAOt22PFWYmIkg6LEWaRm4rW\nbcdotNZA+3y2X9eGorGdTH/ZOFu46XLD+caRwE7nJYsSxPZ6tSsXtuVDXVWsig3rzYqND3wOMbpk\n5UVlP7z7gDw6pPCB/nxeEUYpoRSdqGwUCYZhwNHI3QOpApfzb8tIEcDWQHkbFD6n4POnr69EUGhb\nzcXUvTA3d0ZkcYRuW25cc+i3a6+8xs7kiMY3X04up5yfP2Huaa6XiWI4KAiCgLm/2SfPTjmbTjl+\n5VX3JWHCfH7FbOpekPPpJf9Pe2cWK9l1nedvn7nmqlt36tsDm2Q3RVOSbVKSbSW2AcOzAFuZHhQk\niIPkKXAGIwgMG37xi4E4QfwQIIiRIAKcwImRwHZiIAjiMVJgS1REihRndpM99x3r1nzms3ce9qrq\nbkZNUTQvuwPVAi5u9em6Z5+zzz5r773Wv/6/yHNMlS+p1VzlUaYlngQ02+024/EQJXvejbOPcTQ6\n5OrVA/QCtaYLQmCzfRWApy6c4ZmnTrPd76LkhTjYP+Lly4dcumIHzzhJ8EKfuqwuXJPTCCZsrm3S\nXgBqzAjjGOJYZM7TmDBq0BPAVs0NcLRirdejKQzJQdDAMS55udBrrFCYJblILWhQ5Dl5mi+Dhsk8\nwXED2gvJ9ahHWRVcuWVf3uHIkCcJeQWmWMi7JbjKUBT2HEVe4ZqCje46jm8H6uWbA26/dpU1QSee\nO3eGtV6D3SsWTl0Ojniy08P13KVEWpHOuH31CrnoKvZzheOFrG/aMuLSdVl75DHq7ZChlD2vt5sM\nBrs0WvaZdRo19GyKkrFSljAeTymLkgqLszg6HlKUKdNMtC+8GtudGhfPn6a3Yfuy3gpJ4zkHY+sY\nrt445OhwQCAQ8v3hnN3BhHlWMCliGWIu/cAhWOz1yxJdlhRSDZukKXEcM5tOmA7s9R8PDhhPj2gJ\nWe3WzinG4wnziT3nG5eus3scU2iXugC2Tm20ON0OmYnyeX+9RbPhYSTrlOUFxmh8z1nK3DmrmMLK\nVray92sPxUqhKCsmM6Hx6hp8NMrzmGfWe758+TrJSEw5rwAAIABJREFU61dIZX83nswIqLh4zuLq\nx96Iuu9C4C+Xp7cOZhynirck27B3eEiap8uSZ8+PqLKYMs6I50dyLERlMWFgZwvXdcnznNPbNo25\ndWqHP33tJTb6PU6ftcd67RrFdEYsIieT4yMuX04Jy20agq2PjwfUsykXNmQZ33qE5lp3IS3JaHjA\n5PiYyWRCKxBSDAU4hiQWZed0Tjqv4Ql02lEVbuDihD57Uvac5mP6vT5NKSuu1wPKPCWbCyWdU5Fn\nOXkck0v0u9etk+uIVPbSk9TWfoSLVQwGk+eUhcaUduWTJZaWbJGxSGYJVWHo93e4PbSrksu7x7x6\n5Rb+TYsx2DmccXFng0Zp78crUkxZUWY5paxA3njzGs8+9wqJsX1wLq+xN805JVwbFz7+GP31dXZ2\ntvn6868AMNg+zUZR2HwmNtMTBD41SeUWZUVYq+O4ht3b9hnNsgal1yWZ2OceH11j1nIwecz3bn7C\n9mVR8cUvv8H/et7Spt0cJNQDn3YoBVNZzu4spraxxlwQsYfHVgWrL3nlKi+pinIp+JumGXEcMx0d\nM9i3q8ajgz3G0yOclp3RN3vnKUc5zZrtk27kMfchrlw21iwsvtOuUWs45JI+vbW3T79XpyUZF8fY\nkn+trbAyLNAX780eCqdQVnpZJxA6Pp4x+PUahyPbmX/y3EukXsT2+XMAvPK11zi91qPdtLnXTuCS\nzOa4zSbTqR2UceFR62xy6c9eB0BrmOXVki3ozEYf0oA4ni0JU7UuQWc0a7bzla5wXZdPPPMMAG6V\nsdYIqIewd+0qANcrTTMKaUpRT6Aq9nf3eGyzTSgQU11mOL7DbCqEKQdXUdc8NqV4f2erT/90n9Fo\nbgkbkfy0q9gU5e2qyMniGU4pbEeRgxtGHM/mfOlr9gXZHYzZ6vd5fGcHgI8++iit0GeyCL76DlVZ\nMp3PSUTKrDDw6ltXuXLLDtJsntKuB3zkERGcRUGRYQpFITX/pXYEmGPPMdifUhQeXthg99BWoV66\nvouJmmjZDl26vYdDRSO1qbft73rMMkuXFZXwNr556SZBfZ03rtpzvPDHf8p2t83ZtnXkP5R+D888\n/XHOnD3Li8++Kn+zx+mNNslU+CPdCVstn37XbrPavTZ+FDI5nrEvSttfuTUnrTf58Y9Zjs8Lp+s0\nuzU2t9ZoCvPVwdGI51+/xVFq+7torBM7ZqlmPc4Kao2IsqrIpMgucF2CmrdMJ2pdUZXlMqaQpjnz\n+ZzJ6JiRbB8mx0eU+ZSnnracyJ/8+MeJjzbY37eM3GU8p1ELORhn7MmWbnbsM2m6bAgYo93w8FyN\nKa3zbDUa1GoRHmYJB/fdd4An3sUeCqdgDEQi2uI5PoET0Ol2ifr22O4452CWcV7KebOtPuudJsJ1\niaNKTJajwzsvfaUTyvmIs7JHjKdTLmyvs9a23nSuodXu080iBkKwmqYZeVay1ZBzlDEba12efOw8\nAFe/8gX6dY+jyRBTLuoNXNZaLdab9mLWmx6uKQjrLTwRQtnY7EGjIqvbwRPvz8iSaimxlk4nnD+z\nTcMDPbTfiTxF1Ai50BIZuTLHpAmZWZClBkR+xFhXxFIe21nrE0UNAunLPK+owhqpBOEaaQLGkJYF\nviANk+mcehARyLUWheKtmwf0hfK92WwxGh7iaR8tLMVO4IBrlkQsh7t7tJstymyGKm2coeHlhDj0\nJFvir/l03SnbG0KtVnNAOai8IBJRmU//wKd59fmXyRestd02udZocWrar4EXsXnuHJ2ufY6vXjvg\n8MJpRkd2RVIPPOqnujhC5lJv1vA6Ec12i2dk5fnRTzQJN7foezJ/jlp0ttYwJscIgCOMAn70+59E\nh1KTsztinpY897xVD9uo9dhqa75265DtyDq17dBQltWdKtuqoChzCiltT7KYeDZlPhoxF7xJkc0I\nvJJPfMzS4bXrPl4j4kjwBe12HSdyaW0Ydh5ZYEAi5qMj3GKBJYmpIg+3LSpTfoDxPRxH2QI4bGHY\ne7WHwik4CgJXUHiqpFR1jFH06rYTfuoHP8nu0YREOPYe/fTTNCKP9gK2VsSWur3SBILuO7fZIGi0\n2ek+CUA8mRJ5MBpbB/DCjQHaOGzWA3o9ywy8fzRkNJ2zLtcyKxK2z5xBlMPYbDg8cuEUg3kLVdmu\nq9cb+J5LTarcGpFLWrrUAn8JP46Uy3YjwJNim/MbLQI/Wi7tfJPTCH3GPkxiWUa6mnObTZ7etg/6\nuawiLWewqLV0PJTrcW57m7/yIz8MQF5pms0mTSkRDgKPKs/RAp2uqsqKtTqKQLj7TnVbbO5s8fij\n5wGYDGcURUlDSsFn01sc7l7HmApPLyo0fXzHMBZNhPFoxJntNdL5kI4Uj/3oX/xuHC8iEmejVUU6\nHhHIQnZ7+yxeWMfgWLp94MJHn+T0qW0+tSgCC1yiVpNAgG1hGBJGIf3tU2yv2yD0i5fe4tLl27QE\nxZvGGQehzyOnpWDKUfidOk7H50LfvuD5PMVzG0vYubdxjiD0KMajpdhw6Lmc2WgRiVM7vx5xeDig\nmYmuSFjn9uCY7MoBCAJTV4aiVEsAaVYlpGVCKloSeTojmQ2ZTo6JhV+0Mjlb620eP2fPa8oZWTqi\nHi4K1AKCWkjLuEsm7Lys2N7ustGzK8JGoy7s5JJ9cBSh7xI43Cnuy987n8Iq0Liyla3sHnvfYjBK\nqX+AJVSpgP9ujPl5Of6LwN+V4//QGPM/v1kbYRgssexpWVFoh7I01GQJ1WlGbPXWlpjyqkopy4xE\ngmVFrtBZQhGnBJKWiWdTNtfbbIhEedVpMJ0MScb2lqezDFNqvErRlb/Z2dkkHAzY9uyW49Z8wHqz\nSV1mqrpTstmAM6dOo5azQwnKIZQc8nw6otA5rqnwpVg304ZOI6TdFfWkIrMBMdlveyakLAuSzF3y\nQWwG8ES/xqMb9jvPXh9RZDGhMA55ToApFB4VmxLY8oKAwI/wBOSC4zLN82VprzHGckRojS9AnigK\ncTyPhqQ6N4KQPM9IS8EkRG2iWpu0OMb37KwzT2LiJOVoaPP+w3lGWAsps5i29NVWu4cfBcu8/2g8\nxvcM7Z5NL9a6G2g/gjBYSsT7UUjHX6PTlbJtXaId7rATOQpd5dSaLbb6dntTcxxeeeU6f+FpG/hN\nkpLR0Gck17ae9AhaEUG3idOwzyNc99BGoaVdlxJzfIBTVBgpBFNewDQraXRt33YDH0dpLsr91MOQ\nZ28d8MJhTlUIv2JlBG5vB+pfKzJ0kVDK9i1PxiTTY+LZmGKJgdD02k2Wcrhpgqsq+h0Bw7k9RnFG\nrj2cJcgOwkDRrEn5fq1OEATLlQJG4+iSqsiXx4x571qS70sMRin1Q1iNh+8yxmRKqU05/hTwOeCj\nwA7wh0qpJ8wSdP6NrV6L2NqyFZHxtCArRfTELKr9fPyotlTvwfFwQyixS8T5bEoVJ7TrPp2GzZPH\npYbKFkoB+J7PXM3JtR0Yk1kKuqLfbLM3sPu79aqg1wzwlX2pNns91urtO/RsjsIxJc1aQEOwDZqK\nvKyWe8Q0s3KonqNY0Oc4SpFXJY3QvuD1ZgtTalszAVDlzOca5QW4EhBq13xaDZ+aBMyCg5TpdIyj\n7UtXxDlVWuB5LpFUOEahhzIGk9ntgjYO6WiMWVQHKgdHOaiywhFQlOsHOC5L6jhPVbiVRktQUZUO\nKmhRqvESUTdP5wyGY0Yip34wqdAqwBQ5gYDHAl2hyjuFP4HW1NqdJaXE2197Hc/vcv1owPknbMCv\nsxOiPQdT2Xt0jY929HKbpRQ4psLxfXqLqkjf5/rRjK5sW1phDZ1mS/r2U6e6uKGPcgK8QISCw4Cq\nZvAlIKjGCfk0hlmGK3gHvxbikVOIYnez1iEKPRugBqbDMZduThmnPkZYnsyibErAZG5V4BT5kgCm\nSiYk02OyeLqsW/A8z9bFiWMp8hTf0jsDlso/cBRlpfGEhavT6VJrBESenEMXaF0txWCUAlUYTG6W\nmBXzziqtd7H3Qsf2RaXU+Xcc/nvAPzXGZPKdAzn+WeC35PgVpdRlbF3Il96tDaUcGj27RzyKj5jr\ngiyNcTLh4as0yvFQAs31KxeHgszYBzY5HtCs9wkafWo9+51BmeE4Lo7M1tpYWquZvDCep3EdWOu2\n2D+0nXvtYES3qVg7ZW93Y71LPTRQyZ7QaCoVSIWhIN8qTZnH5BKBdiqHtErtAJFKyhJNUJVLMhdj\nXIxyLV8f4OLiGRcnv1Oo1KwFbKyvITpXtLs9pocjMgmW5RryosR3FFGwYElqYbS7jHbrPIeqoOYu\nILM+2jWg55TcYYVWbrCsBvQo0Y5aMmdnuaEKmuBGeFLJ16j5TI/2lipTWVGSl4qgXqNIJYWaTDGl\njxImproXgOczXehAFDFJNqXd75EIxX4vlyDdYvy6rr22hSfR1kG4VLgCInJVQeC4S2Zj13FQXsBY\nVLMG+0N8P6BWady6bUe1ejhOY1nsVCYJyXCAn4PTlYkocvE8nyyRiaibgS7IRzYm9dqlQ17bG9vg\npLmj63C3NpIqM5wiRYlT0MkEnYwJqhxHsOeB59BttskFQeqVBb4yJOJYKgOB75Dm2bLcOooioiDE\nX8CaFWAMlQSuqyrHLWf2+UjfVeV7p2N7vzGFJ4AfUEo9q5T6glLqU3L8fmIwK1vZyv4/sfebffCA\nNeD7gE8B/1kp9di3coJ7FaI8/uALlnLrOy9uUOmEOHWYxdbb+/EMv9HEk0iwUVYZslosVYMmB8Mp\n48IQNRaptQzXbS1r5vO8YJZmHEquutkMaXdDNjf7HB7aY6pSjIY5sw070zYDl+HokNHA4iHieU7h\nGMokIxO9SW0M0/Gc8cR6+nq9i5MlKLdBJJoBqa8JPEUiGAo/04S12nJ3VJUl2mjysiC7K68cUOHK\n0j9PUhR3yDkLbSgqO7MuVLI91wc/osxtv+XzgiIpaAj4p95oAjFGuSRSKJbECe1OuITB5tht0mIW\nzY2m0WiQNTvMBTdSj2pUlV4qSIeBy+HBMY98x3mYS7+UpS2plhSxGyjiKiaVpfba6UdYO7VOuL65\nLO1WruWgMEvdBHWHMMYesVqPRUmRL0hioN0IeeW6veenTtXpdttoAbrFsznZcIKvS9y2iNBqg1Pk\ny/4vhkOyaYIyDmYqzNG1gCR2cCXGoLsl6Tjl9oH9/y+9dpvDUYxlcFDL67vbqjKmLBJKifxXeYar\nDc0oQrt3ODue/uhTS9X1qlQ4rocj9H6NZkhdV8znt5nOLUitKFPqyl/SvunK1sbkkg7Os7m9bm2W\nOpeL3+/F3q9TuAn8jrA3f0VZKaR1vgUxmLsVohpRaK7sWlDLhXMtVDOg0BUz2c8F02Nc3yUqZTvh\nuxil8ITbr9Pr0+qHHA6PGE8tCUktDDBlQSxsQbNxxt5wzIE4hY2ddc7sdIjCYLknd2s+k1nGUWwH\nwla3z/DgiN09i3wbDKasKZ9GPaWS1GBZQZEaboiC8TQ9Yp7nxGXEWtcOhsO924QBdNvWSWxuhEwn\nY7xC6uOVJstz5mlCIoVJ9ZqP53nEgocYHQ7I05Ra3TqoCk1pKsufUCyYo2KKKqGQLVKWJRgFRyK2\nUmpbqRenOQ1Bv8WzmCovCAX0oeScpbyYaWWVutf6WxzuW+LWZuQQRk1KqX1w0cwmU1y/hiOOW6cz\nPEctxWOV71L3fIwE4frtNl6SkB/u4wk5QmUcHNe3BDlYRiHl+ZbzActcVOkSVRRkUozluR513/Bn\nb9jxs1nfYX3dxRUOTaU1FBWkBTqQ7UPg4eBQLvZqJezenHLr7dskct/h1iYvvfgmz1y0ab+ttZDh\nYMxlkXv/6vVjYl2g3y2Al84hnUFqHYmbzen6Cpo1Stls+EGF50wZT2Wbks9QpiKQ62iEPrrIGOxe\nZ+rYvm2N1vBcjXAQoUxBXkxJkpH0U06eV5hKs9iLldV73z68X6fwX4EfAv5EKfUENnl+hBWD+Y9K\nqV/DBhovAl/5ZidzHIXrWy8+i3OczQjlKgrx0mkyIxg7eEZKRes1tOPgSsS/1+9itEO74XN0bB/a\ndDJmPDxeFvGMxjH7oxGJzErrvqLXbZCnJR0hG40Cn2kWcPmGzZPXcFBpwViqAwezmEHkUmv6mGwR\nufapigI/tNiA8WjE4TRl/OKrnFq3L3C7GVJX0JG9f462bL2CjosCj3mSEqfJkji0027j1boc5lJW\nPJ1R5AU9AXS5vkeWFyRJSigxgzwryfMCs2Bv9g3NXpOmts6oKErCqEanu8aSCFiXJPGcNLbtBoGP\nLkuShWMpc3qdNqU2FAv9yaIirLVwZPg0oghVGUqtoCGrObdAa4Mv9GUqCkhnMdXUnvf4zWuYSUVz\nc51SVLy8M6epNWu4/qJE2ANXLbUZjahyV3nBfGIdUi2K6AEHA+v8rx3lPH6motNcwMU9cBy06yzA\nopb0pqpACFPCVo2Nc3083+fKDRse+/KXvs7+OOXiWYsfmM5ibu8dsCdyewd5RaWMJW/hG5sTz1Dz\nKY6seBsmJ4ocHAOFALQyDC+/cpldAcOYMmU0HS+VtpuBS7cZ0m7UCEXCbjg6wnU1c2Hk9pwEXRUU\nEpfAVDZ4qVkW5b33Gsn3KQYDfB74vFLqZeyK82dk1fCKUuo/A69iqWV/9ptlHla2spU9XPbnEYP5\nm/f5/q8Av/ItXYTrcHbNzqpZnGGUIQychRwAWlfkVUkmS+uSAscPl8ShjgK3cnC0QulFvUFBkmTL\n+vdxOmWezZlKdDwvS4Ig5PqVK8SSOTh/7klaWcH/fsXizs2NAafbER0pXzZOxaRUzApnKUqbFhMc\nHzoCp/706W2KvGIyTQgje32nz6zjUWJkdkiTHByXeWJnzdIYkjjF1RW+lGlHXp2DecgXL9mahLKq\nqCqHtVM2butHTYq0YJregeYqx0brq2wh/KqoRT4Nmb29qG7p2bKETPb+SZ5RmWq5zI/jOUorZoIe\nNWXJemeTwSzBjez2rdAz/PY6QXANgH6jxnZ/3aZso4Y8E23FXyXGQ6qY7c7QMuQmumJaK2iWA/Rl\ny3GxPZzhf+wp1JrgFLzQjoEFn6QPlS4oXU2+oLbTBa1WRCRZjutHYw4mPbaFPNXzQyrXo3JALWDa\nhcYJzYIRHZ0XbG5vsdZbY2PHZsHOnV/jxu6AULgdpqOEeaaXClHzPEdphTKG6j7zsMlmePmEemUx\nE76XoWoVCodMxuncuMznBfFERGjW2/idAO1IP6Vztlo9ur0uWWnbmc5SqvKASMqtQ1WhlMGTLZPn\nuSIxoXEWNHvfQk7hoYA5KwwITHgUT5jnOVudzpIxyPUcHIclyCXPCjztYBaMNknMfDLH4LAnqs1Z\nXuL4hkpJMUqVMM1SEkkxhWGdNKu4vXdgU3fA7f1DjsdzFnIwt6dT0irmlPA6OF5IUWlQzlLQ4/rB\nlDT32Fy3g2ezU9EPQx49vYnrL0RYDEnuLwNzeVGAyhZyB+SlpjQKx/XJZY37x69d5XZxndsS3Lu4\n7ZHkLsNSBunNXc6v9TGuhyuAIS8IGQ3nHOxL1acX0AobJPIy+02NMZp4NmKeSuFYOsdQsX1K5Nw6\nDbKsXBKquGGNzKvx0uVXKeRF9B1DGPlEdYF6N31qOxtUQUhLBmYclCQ6pS6CvqO39zm8cUglhC8b\n3/0pNp58CidwePv5rwIw+KMXeeJ4wvYnbAFacPYJ8D3UwmM5Po4bgOOQl7ad6SRj50yHwrVbjjcH\nKU/sDXlM2IvrnQjllCgnwFkUKpUlyWy2LB0s5ilkBboo8cRxbIUNZn7JbZkQ1HAElWKaiOJYbl2B\nceCOusu9zsHNJvjlnLqMQR06eMoHDZmA3wLALzTyOHCAs6e3OVNaTMLh/h6VVhzPM2KJHRVFyXQc\n0xcO09yr0LokkBem2WoQ+K7A7KVKsjz5QOMHao6rcERWezKdMZzFZGsdaoulgjHW6wUSNNEOe7f2\n2Ltq9/5RrYfyA+ZpQpaIhx0OafQcGn2RFteGYZzSEIRjPWxy6c238T2fXPb2165eIWy0MRLQKbCF\nU4siJAjIi4I8K9gRmbXSbfJHX/g6YyHF0Oe3yFsRR+WMRksk3wzkacburg3UHY8O+OhT51gXwBBK\nUeFQqoCRgFheOy64jY8jVGWjOGGUe5g3hbarKunV67jhKWpSoh2GIcp47F63VYbVrKKz1cM07T2X\n7baVJ8lyGNtReLx3RKtbp9ex19roRAzHcyoRQbk9PODlm/vcvHmDcOEulUbpjEhk5YOWR9BfI3dD\n1GK2CgtUaQgbdgWV6V0IXNYkE7JDjn9wA12v8ZELFrykNzapnNkyyu6bXOATQvsGOMrFlBVDCczN\ndMDOhcdxnrOBxmFqePbygAsiMVhv1egWIUZHd7FaV8xHUw53bfwgPp6TTzVUClcqP8fDKZf3jxlI\n0dTHLq6TV3BjYsfKvDLYSdjS1H8jC4shrk7xJVNFAL7roYyikEB1aDSeq4nFsWTxHN+soWSF2/Tr\nFNowmmZMZaVclRqTzAgEB7neq6FcSLIFIM3F9Wo4uEsMxbeAXXo4nIIxinrdzmah51JWmlmSEbGg\nSassJXtTOA8dD6Mt1Begtb7B2pnTeGHE/nW73L72SooxU4ycYzQtGE4T+msWDvvKS6/jqBmb3Trr\nwjqkjEY7LBGMjnagUEyF64G4oBM6DIcjtjfsoLtwukPtx76LgQirbq3vsLW9SatXJ6rZpfRsHDO8\nfRtvzQ6o77x4mm4voBTGnsl0jlYO87xgILNxbkI8E4EjVF6VIi0LdjbtNuvg8IhbBwdc3DlFV/Qz\nQ1VRrzlceMwmgA5uHKOmc+reQqXJx5QF7jxZsgGdWuvROd3BXVCim4okz8klRfb2jVuM0pjB4IB1\nyRJEnQ7K5NRkpgqbPl9/7gUeffw7WPv4Bdt3c019VjAVZKFRJVsfOY3fsn3irlU44QynDs0tq81R\nf2oHwhZqsYQyiaBYFxRpFcYUTI6PuX1gsz3h5ikufO8zrP/2F+wzjBSXBgVfet1mmfq1Op3QtwFP\nCcj6nt2abnYtVFq11pgnKb7fIBdq71q3QdJ0aYoiV+j5vLF7wKuHQummDY6x9Ub3i+uHxRTPVKiF\nNJVrZ29HKQojqVqtLTeGbCemeYmvAtLE/tHx/pSszImzhJEwbCvPoxY4dLHPIy0LAt/BFSmCUtLb\nWleLeijUtxBpXBVErWxlK7vHHoqVAsqhI0w5mafo9jrM8oJwgR8wBU5a4mSSOqyHNFshsW9ni/ja\nVdzRnCCsUwlTUWkKGs2ITPaIw2lBWQVcvW2X1lkyp1336Tdq1Ht2Jo18l1qthXNdPLIylNownAm4\nJi1pOdDMDAcDu8Tddj1ONXzqUtaaDfZJ8oRG0if3FiuOgppOOC3pxHY3pKxSMtm2mDynrFyO05xj\nARVlxk5DC4EPt9HlibNdJqKkFTYauMrl6PiYtvA/uGEDHxdP9vprZzpUSUUue9qqmKG0pgoqwjVR\nvYoiCC00FuwMmBSasehGVvNDhkdHbPf7zIX/snnuLIHrURNOhiBI6Xd9bh7c5uPN7wXA0xo3TxlN\n7DPyPEPZ8GlIQLm9vk7Y6eI1mjiLAq7IwfGWEho4RYkmA9nKoA0kKXuXbzCa2Wf0I5/9YcbH19ju\niapUkjMbunzpbbtS2OkFtOslhePREILYbt3H99RS2EW5inGScXw0ZCbPejpPGSfjZR3DW3s5f3rp\nmCsjKUM3lmH73RJ+ETnGYwnAMp6Dr1w8FKkEACtjYd0LkF2G4mg8oyZ1Gu2oy2w6QDkezY5d2RRK\nk5bZcos3LyC/q84HIKWw9yftLOIp78XUPaq4D8iUUofAHIt1eFC2/oDbfxiu4du9/YfhGk6y/UeM\nMRvf7EsPhVMAUEp91RjzyW/X9h+Ga/h2b/9huIYH3T6sYgorW9nK3mErp7Cyla3sHnuYnMK/+TZv\nHx78NXy7tw8P/hoedPsPT0xhZStb2cNhD9NKYWUrW9lDYA/cKSilfkIp9YZS6rJS6hc+pDbPKqX+\nRCn1qlLqFaXUP5Ljv6yUuqWUekF+PnOC13BVKfWStPNVObamlPoDpdQl+d07obY/ctc9vqCUmiil\nfu6k718p9Xml1IFU1y6OfcN7Vtb+pYyLryulnjmh9v+5Uup1aeN3lVJdOX5eKZXc1Re//udt/12u\n4b79rpT6RemDN5RSP/5BXMM3NWPMA/sBXOAt4DFsbciLwFMfQrungGfkcwt4E3gK+GXgn3xI934V\nWH/HsX8G/IJ8/gXgVz+kZ7AHPHLS9w/8IPAM8PI3u2fgM8D/wKL2vw949oTa/zHAk8+/elf75+/+\n3gn3wTfsdxmTLwIh8Ki8K+5Jj4kHvVL4HuCyMeZtY0wO/BaW/PVEzRiza4x5Xj5Pgdd4OLgkPwv8\nhnz+DeAvfQht/jDwljHm2kk3ZIz5InD8jsP3u+fPAv/eWPsy0FVKnfqg2zfG/L5ZsLjAl7FsYSdm\n9+mD+9mSCNkYcwVYECGfqD1op/DAiV6Fqfpp4Fk59PdlKfn5k1q+ixng95VSzwlfJcCWMWZXPu8B\nWyfY/sI+B/ynu/79Yd3/wu53zw9ibPwd7OpkYY8qpb4m5MQ/cMJtf6N+fyDvx4N2Cg/UlFJN4LeB\nnzPGTIB/DTwOfDewC/yLE2z++40xzwA/CfysUuoH7/5PY9ePJ5oaUkoFwE8D/0UOfZj3///Yh3HP\n9zOl1C9hCx5/Uw7tAueMMU8D/xhLM9g+oeYfaL+/0x60U3jPRK8ftCmlfKxD+E1jzO8AGGP2jTGV\nsUXo/5YTXKoZY27J7wPgd6Wt/cUSWX4f3P8MH4j9JPC8MWZfruVDu/+77H73/KGNDaXU38aqoP0N\ncUzIkn0gn5/D7uefOIn236XfH8j78aCdwv8BLiqlHpVZ63NY8tcTNWUJE/4d8Jox5tfuOn73nvUv\nAy+/828/oPYbSqnW4jM22PUy9t5/Rr72M8ANcgrNAAABKklEQVR/O4n277K/zl1bhw/r/t9h97vn\n3wP+lmQhvg8Y37XN+MBMKfUTwM8DP22Mie86vqGE8klZ+YKLwNsfdPty/vv1++8Bn1NKhUqpR3mP\nRMh/bjvpSOZ7iMZ+Bhv9fwv4pQ+pze/HLlO/DrwgP58B/gPwkhz/PeDUCbX/GDaq/CLwyuK+gT7w\nR8Al4A+BtRPsgwYwADp3HTvR+8c6oF0sqdVNrOboN7xnbNbhX8m4eAn45Am1fxm7b1+Mg1+X7/5V\neTYvAM8DP3WCfXDffgd+SfrgDeAnP4z3Y4VoXNnKVnaPPejtw8pWtrKHzFZOYWUrW9k9tnIKK1vZ\nyu6xlVNY2cpWdo+tnMLKVraye2zlFFa2spXdYyunsLKVreweWzmFla1sZffY/wXnK7Za8HKiuAAA\nAABJRU5ErkJggg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1073e3d30>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "show_n_images = 42\n",
    "\n",
    "\"\"\"\n",
    "DON'T MODIFY ANYTHING IN THIS CELL\n",
    "\"\"\"\n",
    "mnist_images = helper.get_batch(glob(os.path.join(data_dir, 'img_align_celeba/*.jpg'))[:show_n_images], 28, 28, 'RGB')\n",
    "pyplot.imshow(helper.images_square_grid(mnist_images, 'RGB'))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": true,
    "editable": true
   },
   "source": [
    "## Preprocess the Data\n",
    "Since the project's main focus is on building the GANs, we'll preprocess the data for you.  The values of the MNIST and CelebA dataset will be in the range of -0.5 to 0.5 of 28x28 dimensional images.  The CelebA images will be cropped to remove parts of the image that don't include a face, then resized down to 28x28.\n",
    "\n",
    "The MNIST images are black and white images with a single [color channel](https://en.wikipedia.org/wiki/Channel_(digital_image%29) while the CelebA images have [3 color channels (RGB color channel)](https://en.wikipedia.org/wiki/Channel_(digital_image%29#RGB_Images).\n",
    "## Build the Neural Network\n",
    "You'll build the components necessary to build a GANs by implementing the following functions below:\n",
    "- `model_inputs`\n",
    "- `discriminator`\n",
    "- `generator`\n",
    "- `model_loss`\n",
    "- `model_opt`\n",
    "- `train`\n",
    "\n",
    "### Check the Version of TensorFlow and Access to GPU\n",
    "This will check to make sure you have the correct version of TensorFlow and access to a GPU"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "TensorFlow Version: 1.1.0\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/manib/Documents/py-anaconda/anaconda3/lib/python3.6/site-packages/ipykernel_launcher.py:14: UserWarning: No GPU found. Please use a GPU to train your neural network.\n",
      "  \n"
     ]
    }
   ],
   "source": [
    "\"\"\"\n",
    "DON'T MODIFY ANYTHING IN THIS CELL\n",
    "\"\"\"\n",
    "from distutils.version import LooseVersion\n",
    "import warnings\n",
    "import tensorflow as tf\n",
    "\n",
    "# Check TensorFlow Version\n",
    "assert LooseVersion(tf.__version__) >= LooseVersion('1.0'), 'Please use TensorFlow version 1.0 or newer.  You are using {}'.format(tf.__version__)\n",
    "print('TensorFlow Version: {}'.format(tf.__version__))\n",
    "\n",
    "# Check for a GPU\n",
    "if not tf.test.gpu_device_name():\n",
    "    warnings.warn('No GPU found. Please use a GPU to train your neural network.')\n",
    "else:\n",
    "    print('Default GPU Device: {}'.format(tf.test.gpu_device_name()))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": true,
    "editable": true
   },
   "source": [
    "### Input\n",
    "Implement the `model_inputs` function to create TF Placeholders for the Neural Network. It should create the following placeholders:\n",
    "- Real input images placeholder with rank 4 using `image_width`, `image_height`, and `image_channels`.\n",
    "- Z input placeholder with rank 2 using `z_dim`.\n",
    "- Learning rate placeholder with rank 0.\n",
    "\n",
    "Return the placeholders in the following the tuple (tensor of real input images, tensor of z data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Tests Passed\n"
     ]
    }
   ],
   "source": [
    "import problem_unittests as tests\n",
    "\n",
    "def model_inputs(image_width, image_height, image_channels, z_dim):\n",
    "    \"\"\"\n",
    "    Create the model inputs\n",
    "    :param image_width: The input image width\n",
    "    :param image_height: The input image height\n",
    "    :param image_channels: The number of image channels\n",
    "    :param z_dim: The dimension of Z\n",
    "    :return: Tuple of (tensor of real input images, tensor of z data, learning rate)\n",
    "    \"\"\"\n",
    "    # TODO: Implement Function\n",
    "    real_input = tf.placeholder(dtype=tf.float32, shape=(None, image_width, image_height, image_channels), name='real_input')\n",
    "    z_input = tf.placeholder(dtype=tf.float32,shape=(None, z_dim), name='z_input')\n",
    "    learning_rate = tf.placeholder(dtype=tf.float32, name='learning_rate')\n",
    "\n",
    "    return real_input, z_input, learning_rate\n",
    "\n",
    "\n",
    "\"\"\"\n",
    "DON'T MODIFY ANYTHING IN THIS CELL THAT IS BELOW THIS LINE\n",
    "\"\"\"\n",
    "tests.test_model_inputs(model_inputs)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": true,
    "editable": true
   },
   "source": [
    "### Discriminator\n",
    "Implement `discriminator` to create a discriminator neural network that discriminates on `images`.  This function should be able to reuse the variables in the neural network.  Use [`tf.variable_scope`](https://www.tensorflow.org/api_docs/python/tf/variable_scope) with a scope name of \"discriminator\" to allow the variables to be reused.  The function should return a tuple of (tensor output of the discriminator, tensor logits of the discriminator)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Tests Passed\n"
     ]
    }
   ],
   "source": [
    "def discriminator(images, reuse=False):\n",
    "    \"\"\"\n",
    "    Create the discriminator network\n",
    "    :param images: Tensor of input image(s)\n",
    "    :param reuse: Boolean if the weights should be reused\n",
    "    :return: Tuple of (tensor output of the discriminator, tensor logits of the discriminator)\n",
    "    \"\"\"\n",
    "    # TODO: Implement Function\n",
    "    alpha = 0.2\n",
    "    dropout = 0.6\n",
    "    with tf.variable_scope('discriminator', reuse=reuse):\n",
    "        x1 = tf.layers.conv2d(images, 64, 5, strides=2, padding='same')\n",
    "        x1 = tf.maximum(alpha * x1, x1)\n",
    "        \n",
    "        x2 = tf.layers.conv2d(x1, 128, 5, strides=2, padding='same')\n",
    "        x2 = tf.layers.batch_normalization(x2, training=True)\n",
    "        x2 = tf.maximum(alpha * x2, x2)\n",
    "        \n",
    "        x3 = tf.layers.conv2d(x2, 256, 5, strides=2, padding='same')\n",
    "        x3 = tf.layers.batch_normalization(x3, training=True)\n",
    "        x3 = tf.maximum(alpha * x3, x3)\n",
    "\n",
    "        flat = tf.reshape(x3, (-1, 4*4*256))\n",
    "        dropout_layer = tf.layers.dropout(inputs=flat, rate=dropout)\n",
    "        logits = tf.layers.dense(dropout_layer, 1)\n",
    "        out = tf.sigmoid(logits)\n",
    "        \n",
    "    return out, logits\n",
    "\n",
    "\n",
    "\"\"\"\n",
    "DON'T MODIFY ANYTHING IN THIS CELL THAT IS BELOW THIS LINE\n",
    "\"\"\"\n",
    "tests.test_discriminator(discriminator, tf)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": true,
    "editable": true
   },
   "source": [
    "### Generator\n",
    "Implement `generator` to generate an image using `z`. This function should be able to reuse the variables in the neural network.  Use [`tf.variable_scope`](https://www.tensorflow.org/api_docs/python/tf/variable_scope) with a scope name of \"generator\" to allow the variables to be reused. The function should return the generated 28 x 28 x `out_channel_dim` images."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Tests Passed\n"
     ]
    }
   ],
   "source": [
    "def generator(z, out_channel_dim, is_train=True):\n",
    "    \"\"\"\n",
    "    Create the generator network\n",
    "    :param z: Input z\n",
    "    :param out_channel_dim: The number of channels in the output image\n",
    "    :param is_train: Boolean if generator is being used for training\n",
    "    :return: The tensor output of the generator\n",
    "    \"\"\"\n",
    "    # TODO: Implement Function\n",
    "    alpha = 0.2\n",
    "    with tf.variable_scope('generator', reuse= not is_train):\n",
    "        x1 = tf.layers.dense(z, 3*3*512, use_bias=False, activation=None)\n",
    "        x1 = tf.reshape(x1, (-1, 3, 3, 512))\n",
    "        x1 = tf.layers.batch_normalization(x1, training=is_train)\n",
    "        x1 = tf.maximum(alpha * x1, x1)\n",
    "        \n",
    "        x2 = tf.layers.conv2d_transpose(x1, 256, kernel_size=4, strides=2, padding='same', use_bias=False, activation=None)\n",
    "        x2 = tf.layers.batch_normalization(x2, training=is_train)\n",
    "        x2 = tf.maximum(alpha * x2, x2)\n",
    "   \n",
    "        x3 = tf.layers.conv2d_transpose(x2, 128, kernel_size=4, strides=2, padding='valid', use_bias=False, activation=None)\n",
    "        x3 = tf.layers.batch_normalization(x3, training=is_train)\n",
    "        x3 = tf.maximum(alpha * x3, x3)\n",
    "        \n",
    "        # Output layer\n",
    "        logits = tf.layers.conv2d_transpose(x3, out_channel_dim, kernel_size=5,strides=2, padding='same', activation=None)\n",
    "        out = tf.tanh(logits)\n",
    "        \n",
    "    return out\n",
    "\n",
    "\n",
    "\"\"\"\n",
    "DON'T MODIFY ANYTHING IN THIS CELL THAT IS BELOW THIS LINE\n",
    "\"\"\"\n",
    "tests.test_generator(generator, tf)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": true,
    "editable": true
   },
   "source": [
    "### Loss\n",
    "Implement `model_loss` to build the GANs for training and calculate the loss.  The function should return a tuple of (discriminator loss, generator loss).  Use the following functions you implemented:\n",
    "- `discriminator(images, reuse=False)`\n",
    "- `generator(z, out_channel_dim, is_train=True)`"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Tests Passed\n"
     ]
    }
   ],
   "source": [
    "def model_loss(input_real, input_z, out_channel_dim):\n",
    "    \"\"\"\n",
    "    Get the loss for the discriminator and generator\n",
    "    :param input_real: Images from the real dataset\n",
    "    :param input_z: Z input\n",
    "    :param out_channel_dim: The number of channels in the output image\n",
    "    :return: A tuple of (discriminator loss, generator loss)\n",
    "    \"\"\"\n",
    "    # TODO: Implement Function\n",
    "    smooth = 0.1\n",
    "    g_model = generator(input_z, out_channel_dim)\n",
    "    d_model_real, d_logits_real = discriminator(input_real, reuse=False)\n",
    "    d_model_fake, d_logits_fake = discriminator(g_model, reuse=True)\n",
    "\n",
    "    d_loss_real = tf.reduce_mean(\n",
    "        tf.nn.sigmoid_cross_entropy_with_logits(logits=d_logits_real, labels=tf.ones_like(d_model_real)*(1 - smooth)))\n",
    "    d_loss_fake = tf.reduce_mean(\n",
    "        tf.nn.sigmoid_cross_entropy_with_logits(logits=d_logits_fake, labels=tf.zeros_like(d_model_fake)))\n",
    "    g_loss = tf.reduce_mean(\n",
    "        tf.nn.sigmoid_cross_entropy_with_logits(logits=d_logits_fake, labels=tf.ones_like(d_model_fake)))\n",
    "\n",
    "    d_loss = d_loss_real + d_loss_fake\n",
    "\n",
    "    return d_loss, g_loss\n",
    "\n",
    "\n",
    "\"\"\"\n",
    "DON'T MODIFY ANYTHING IN THIS CELL THAT IS BELOW THIS LINE\n",
    "\"\"\"\n",
    "tests.test_model_loss(model_loss)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": true,
    "editable": true
   },
   "source": [
    "### Optimization\n",
    "Implement `model_opt` to create the optimization operations for the GANs. Use [`tf.trainable_variables`](https://www.tensorflow.org/api_docs/python/tf/trainable_variables) to get all the trainable variables.  Filter the variables with names that are in the discriminator and generator scope names.  The function should return a tuple of (discriminator training operation, generator training operation)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Tests Passed\n"
     ]
    }
   ],
   "source": [
    "def model_opt(d_loss, g_loss, learning_rate, beta1):\n",
    "    \"\"\"\n",
    "    Get optimization operations\n",
    "    :param d_loss: Discriminator loss Tensor\n",
    "    :param g_loss: Generator loss Tensor\n",
    "    :param learning_rate: Learning Rate Placeholder\n",
    "    :param beta1: The exponential decay rate for the 1st moment in the optimizer\n",
    "    :return: A tuple of (discriminator training operation, generator training operation)\n",
    "    \"\"\"\n",
    "    # TODO: Implement Function\n",
    "    t_vars = tf.trainable_variables()\n",
    "    d_vars = [var for var in t_vars if var.name.startswith('discriminator')]\n",
    "    g_vars = [var for var in t_vars if var.name.startswith('generator')]\n",
    "\n",
    "    # Optimize\n",
    "    with tf.control_dependencies(tf.get_collection(tf.GraphKeys.UPDATE_OPS)):\n",
    "        d_train_opt = tf.train.AdamOptimizer(learning_rate, beta1=beta1).minimize(d_loss, var_list=d_vars)\n",
    "        g_train_opt = tf.train.AdamOptimizer(learning_rate, beta1=beta1).minimize(g_loss, var_list=g_vars)\n",
    "\n",
    "    return d_train_opt, g_train_opt\n",
    "\n",
    "\n",
    "\"\"\"\n",
    "DON'T MODIFY ANYTHING IN THIS CELL THAT IS BELOW THIS LINE\n",
    "\"\"\"\n",
    "tests.test_model_opt(model_opt, tf)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": true,
    "editable": true
   },
   "source": [
    "## Neural Network Training\n",
    "### Show Output\n",
    "Use this function to show the current output of the generator during training. It will help you determine how well the GANs is training."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": [
    "\"\"\"\n",
    "DON'T MODIFY ANYTHING IN THIS CELL\n",
    "\"\"\"\n",
    "import numpy as np\n",
    "\n",
    "def show_generator_output(sess, n_images, input_z, out_channel_dim, image_mode):\n",
    "    \"\"\"\n",
    "    Show example output for the generator\n",
    "    :param sess: TensorFlow session\n",
    "    :param n_images: Number of Images to display\n",
    "    :param input_z: Input Z Tensor\n",
    "    :param out_channel_dim: The number of channels in the output image\n",
    "    :param image_mode: The mode to use for images (\"RGB\" or \"L\")\n",
    "    \"\"\"\n",
    "    cmap = None if image_mode == 'RGB' else 'gray'\n",
    "    z_dim = input_z.get_shape().as_list()[-1]\n",
    "    example_z = np.random.uniform(-1, 1, size=[n_images, z_dim])\n",
    "\n",
    "    samples = sess.run(\n",
    "        generator(input_z, out_channel_dim, False),\n",
    "        feed_dict={input_z: example_z})\n",
    "\n",
    "    images_grid = helper.images_square_grid(samples, image_mode)\n",
    "    pyplot.imshow(images_grid, cmap=cmap)\n",
    "    pyplot.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": true,
    "editable": true
   },
   "source": [
    "### Train\n",
    "Implement `train` to build and train the GANs.  Use the following functions you implemented:\n",
    "- `model_inputs(image_width, image_height, image_channels, z_dim)`\n",
    "- `model_loss(input_real, input_z, out_channel_dim)`\n",
    "- `model_opt(d_loss, g_loss, learning_rate, beta1)`\n",
    "\n",
    "Use the `show_generator_output` to show `generator` output while you train. Running `show_generator_output` for every batch will drastically increase training time and increase the size of the notebook.  It's recommended to print the `generator` output every 100 batches."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "collapsed": true,
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": [
    "def train(epoch_count, batch_size, z_dim, learning_rate, beta1, get_batches, data_shape, data_image_mode):\n",
    "    \"\"\"\n",
    "    Train the GAN\n",
    "    :param epoch_count: Number of epochs\n",
    "    :param batch_size: Batch Size\n",
    "    :param z_dim: Z dimension\n",
    "    :param learning_rate: Learning Rate\n",
    "    :param beta1: The exponential decay rate for the 1st moment in the optimizer\n",
    "    :param get_batches: Function to get batches\n",
    "    :param data_shape: Shape of the data\n",
    "    :param data_image_mode: The image mode to use for images (\"RGB\" or \"L\")\n",
    "    \"\"\"\n",
    "    # TODO: Build Model\n",
    "    print_every = 10\n",
    "    show_every = 100\n",
    "    images_to_show = 10\n",
    "    losses =[]\n",
    "    steps = 0\n",
    "    _, width, height, channels = data_shape\n",
    "    \n",
    "    real_input, z_input, lr = model_inputs(width, height, channels, z_dim)\n",
    "    \n",
    "    d_loss, g_loss = model_loss(real_input, z_input, channels)\n",
    "    d_opt, g_opt = model_opt(d_loss, g_loss, learning_rate, beta1)\n",
    "    \n",
    "    print(\"Trainning start ...\")\n",
    "    with tf.Session() as sess:\n",
    "        sess.run(tf.global_variables_initializer())\n",
    "        for epoch_i in range(epoch_count):\n",
    "            for batch_images in get_batches(batch_size):\n",
    "                steps += 1\n",
    "                # Get images, reshape and rescale to pass to D\n",
    "                batch_images = batch_images*2\n",
    "\n",
    "                # Sample random noise for G\n",
    "                batch_z = np.random.uniform(-1, 1, size=(batch_size, z_dim))\n",
    "\n",
    "                # Run optimizers\n",
    "                _ = sess.run(d_opt, feed_dict={real_input: batch_images, z_input: batch_z, lr: learning_rate})\n",
    "                _ = sess.run(g_opt, feed_dict={z_input: batch_z, real_input: batch_images, lr: learning_rate})\n",
    "                \n",
    "                if steps % print_every == 0:\n",
    "                    # At the end of each epoch, get the losses and print them out\n",
    "                    train_loss_d = d_loss.eval({z_input: batch_z, real_input: batch_images})\n",
    "                    train_loss_g = g_loss.eval({z_input: batch_z})\n",
    "\n",
    "                    print(\"Step: {}:\".format(steps),\n",
    "                          \"Epoch {}/{}...\".format(epoch_i+1, epoch_count),\n",
    "                          \"Discriminator Loss: {:.4f}...\".format(train_loss_d),\n",
    "                          \"Generator Loss: {:.4f}\".format(train_loss_g))\n",
    "                    # Save losses to view after training\n",
    "                    losses.append((train_loss_d, train_loss_g))\n",
    "\n",
    "                if steps % show_every == 0:\n",
    "                    show_generator_output(sess, images_to_show, z_input, channels, data_image_mode)\n",
    "                    \n",
    "    print(\"Training done!\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": true,
    "editable": true
   },
   "source": [
    "### MNIST\n",
    "Test your GANs architecture on MNIST.  After 2 epochs, the GANs should be able to generate images that look like handwritten digits.  Make sure the loss of the generator is lower than the loss of the discriminator or close to 0."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "batch_size = None\n",
    "z_dim = None\n",
    "learning_rate = None\n",
    "beta1 = None\n",
    "\n",
    "\n",
    "\"\"\"\n",
    "DON'T MODIFY ANYTHING IN THIS CELL THAT IS BELOW THIS LINE\n",
    "\"\"\"\n",
    "epochs = 2\n",
    "\n",
    "mnist_dataset = helper.Dataset('mnist', glob(os.path.join(data_dir, 'mnist/*.jpg')))\n",
    "with tf.Graph().as_default():\n",
    "    train(epochs, batch_size, z_dim, learning_rate, beta1, mnist_dataset.get_batches,\n",
    "          mnist_dataset.shape, mnist_dataset.image_mode)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": true,
    "editable": true
   },
   "source": [
    "### CelebA\n",
    "Run your GANs on CelebA.  It will take around 20 minutes on the average GPU to run one epoch.  You can run the whole epoch or stop when it starts to generate realistic faces."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "collapsed": false,
    "deletable": true,
    "editable": true,
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Trainning start ...\n"
     ]
    },
    {
     "ename": "NameError",
     "evalue": "name 'np' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-15-af3b32eaa425>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     14\u001b[0m \u001b[0;32mwith\u001b[0m \u001b[0mtf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mGraph\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mas_default\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     15\u001b[0m     train(epochs, batch_size, z_dim, learning_rate, beta1, celeba_dataset.get_batches,\n\u001b[0;32m---> 16\u001b[0;31m           celeba_dataset.shape, celeba_dataset.image_mode)\n\u001b[0m",
      "\u001b[0;32m<ipython-input-14-4af3597dac0c>\u001b[0m in \u001b[0;36mtrain\u001b[0;34m(epoch_count, batch_size, z_dim, learning_rate, beta1, get_batches, data_shape, data_image_mode)\u001b[0m\n\u001b[1;32m     34\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     35\u001b[0m                 \u001b[0;31m# Sample random noise for G\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 36\u001b[0;31m                 \u001b[0mbatch_z\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrandom\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0muniform\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msize\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mbatch_size\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mz_dim\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     37\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     38\u001b[0m                 \u001b[0;31m# Run optimizers\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mNameError\u001b[0m: name 'np' is not defined"
     ]
    }
   ],
   "source": [
    "batch_size = 64\n",
    "z_dim = 128\n",
    "learning_rate = 0.001\n",
    "beta1 = 0.25\n",
    "\n",
    "\n",
    "\n",
    "\"\"\"\n",
    "DON'T MODIFY ANYTHING IN THIS CELL THAT IS BELOW THIS LINE\n",
    "\"\"\"\n",
    "epochs = 1\n",
    "\n",
    "celeba_dataset = helper.Dataset('celeba', glob(os.path.join(data_dir, 'img_align_celeba/*.jpg')))\n",
    "with tf.Graph().as_default():\n",
    "    train(epochs, batch_size, z_dim, learning_rate, beta1, celeba_dataset.get_batches,\n",
    "          celeba_dataset.shape, celeba_dataset.image_mode)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "deletable": true,
    "editable": true
   },
   "source": [
    "### Submitting This Project\n",
    "When submitting this project, make sure to run all the cells before saving the notebook. Save the notebook file as \"dlnd_face_generation.ipynb\" and save it as a HTML file under \"File\" -> \"Download as\". Include the \"helper.py\" and \"problem_unittests.py\" files in your submission."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
